-----------------------------------------------------------------------------------
[shiny, Selected] INFO Starting log file S:/Box Sync/AirSensEUR/Fieldtests/Shiny/40458D/scriptsLog/console_2020-01-13.log
-----------------------------------------------------------------------------------
[ASEConfig.R] INFO 2017-12-07 Functions Config() and SETTIME transfered to Function4ASE.R to simplify maintenance
[ASEConfig.R] INFO 2017-12-07 SUGGESTION to manage the directories of ASE box instaed of file ASECOnfigxxxx.R
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
[INFLUXDB] INFO: Downloading InfluxDB data
[INFLUXDB] INFO: Data download not requested.
[INFLUXDB] INFO: Sensor variables existing in airsenseur.db: Atmospheric_pressure, Batt_Charge_Status, Batt_Cumulated_Charge, Batt_Voltage, Bin0, Bin1, Bin10, Bin11, Bin12, Bin13, Bin14, Bin15, Bin16, Bin17, Bin18, Bin19, Bin2, Bin20, Bin21, Bin22, Bin23, Bin3, Bin4, Bin5, Bin6, Bin7, Bin8, Bin9, Carbon_dioxide, Carbon_monoxide, Nitric_oxide, Nitrogen_dioxide, OPCHum, OPCTemp, OPCVol, Ozone, Particulate_Matter_1, Particulate_Matter_10, Particulate_Matter_25, Relative_humidity, Relative_humidity_int, Temperature, Temperature_int, with date timestamp and coordinates.
[INFLUXDB] INFO INFLUXDB returning list with InfluxData, var.names.meteo, var.name.GasSensors and var.names.sens
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
[Check_Download] INFO, Checking 
S:/Box Sync/AirSensEUR/Fieldtests/Shiny/40458D/General_data/airsenseur.db
S:/Box Sync/AirSensEUR/Fieldtests/Shiny/40458D/General_data/General.csv
S:/Box Sync/AirSensEUR/Fieldtests/Shiny/40458D/General_data/RefData.csv
S:/Box Sync/AirSensEUR/Fieldtests/Shiny/40458D/General_data/SOSData.csv 
S:/Box Sync/AirSensEUR/Fieldtests/Shiny/40458D/General_data/InfluxData.csv
 in S:/Box Sync/AirSensEUR/Fieldtests/Shiny/40458D/General_data
[Check_Download] INFO, sensor data are going to be retrieved. Start date for data download: 2020-01-06 18:04:00
[Check_Download] INFO, S:/Box Sync/AirSensEUR/Fieldtests/Shiny/40458D/General_data/RefData.csv does not exist. It is going to be created, data will be retrieved.
[Check_Download] INFO, sensor data are going to be retrieved. Start date for data download: 2020-01-06 18:03:00
[Check_Download] INFO, S:/Box Sync/AirSensEUR/Fieldtests/Shiny/40458D/General_data/SOSData.csv does not exist. It should be created, SOS sensor data should be retrieved.
[Check_Download] INFO, S:/Box Sync/AirSensEUR/Fieldtests/Shiny/40458D/General_data/airsenseur.db exists.
[Check_Download] INFO, The database S:/Box Sync/AirSensEUR/Fieldtests/Shiny/40458D/General_data/airsenseur.db includes the table 40458D with the columns: time, altitude, boardTimeStamp, gpsTimestamp, latitude, longitude, sampleEvaluatedVal, sampleRawVal, channel, name
[Check_Download] INFO, SOS sensor data are going to be retrieved. Start date for data download: 2020-01-06 18:03:00
$Ref.Rdata.file
[1] "S:/Box Sync/AirSensEUR/Fieldtests/Shiny/40458D/General_data/RefData.csv"

$Influx.Rdata.file
[1] "S:/Box Sync/AirSensEUR/Fieldtests/Shiny/40458D/General_data/InfluxData.csv"

$SOS.file
[1] "S:/Box Sync/AirSensEUR/Fieldtests/Shiny/40458D/General_data/SOSData.csv"

$General.Rdata.file
[1] "S:/Box Sync/AirSensEUR/Fieldtests/Shiny/40458D/General_data/General.csv"

$airsenseur.db.file
[1] "S:/Box Sync/AirSensEUR/Fieldtests/Shiny/40458D/General_data/airsenseur.db"

$WDinput
[1] "S:/Box Sync/AirSensEUR/Fieldtests/Shiny/40458D/General_data"

$ExistFil.data.db
[1] TRUE

$Retrieve.data.db
[1] TRUE

$DateIN.db.prev
[1] "2020-01-05T17:00:00Z"

$DateEND.db.prev
[1] "2020-01-06T18:03:00Z"

$ExistFil.data.Ref
[1] FALSE

$Retrieve.data.Ref
[1] TRUE

$DateIN.Ref.prev
NULL

$DateEND.Ref.prev
NULL

$Var.Ref.prev
NULL

$ExistFil.data.Influx
[1] TRUE

$Retrieve.data.Influx
[1] TRUE

$DateIN.Influx.prev
[1] "2020-01-05 17:00:00 UTC"

$DateEND.Influx.prev
[1] "2020-01-06 18:03:00 UTC"

$ExistFil.data.SOS
[1] FALSE

$Retrieve.data.SOS
[1] TRUE

$DateIN.SOS.prev
NULL

$DateEND.SOS.prev
NULL

$ExistFil.data.General
[1] TRUE

$Retrieve.data.General
[1] TRUE

$DateIN.General.prev
[1] "2020-01-05 17:01:00 UTC"

$DateEND.General.prev
[1] "2020-01-06 18:04:00 UTC"

-----------------------------------------------------------------------------------
[shiny, ind.warm()]  INFO, Setting index of sensor data during warming period
[shiny, ind.TRh()] INFO, Setting index of sensor data outside temperature and RH validity ranges
-----------------------------------------------------------------------------------
[INFLUXDB] INFO: Downloading InfluxDB data
[INFLUXDB] INFO: Data download not requested.
[INFLUXDB] INFO: Sensor variables existing in airsenseur.db: Atmospheric_pressure, Batt_Charge_Status, Batt_Cumulated_Charge, Batt_Voltage, Bin0, Bin1, Bin10, Bin11, Bin12, Bin13, Bin14, Bin15, Bin16, Bin17, Bin18, Bin19, Bin2, Bin20, Bin21, Bin22, Bin23, Bin3, Bin4, Bin5, Bin6, Bin7, Bin8, Bin9, Carbon_dioxide, Carbon_monoxide, Nitric_oxide, Nitrogen_dioxide, OPCHum, OPCTemp, OPCVol, Ozone, Particulate_Matter_1, Particulate_Matter_10, Particulate_Matter_25, Relative_humidity, Relative_humidity_int, Temperature, Temperature_int, with date timestamp and coordinates.
[INFLUXDB] INFO INFLUXDB returning list with InfluxData, var.names.meteo, var.name.GasSensors and var.names.sens
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
[shiny, Outliers.Sens$Forced] INFO, purging for Warming, temperature/humidity tolerance and invalid
[shiny, Outliers.Sens$Forced] INFO, detecting row indexes of outliers in sensor data
[shiny, Outliers.Sens$Forced] INFO, Initialising filtered data columns for  Carbon_monoxide 
[shiny, Outliers.Sens$Forced] INFO, Discarding sensor data for Warming for  Carbon_monoxide 
[shiny, Outliers.Sens$Forced] INFO, Excluding sensor data outside temperature and RH validity ranges for  Carbon_monoxide 
[shiny, Outliers.Sens$Forced] INFO, Excluding invalid sensor data for  Carbon_monoxide 
[shiny, Outliers.Sens$Forced] INFO, initialising outlier sensor data for  Carbon_monoxide 
[shiny, Outliers.Sens$Forced] INFO, sensor: Carbon_monoxide, iteration: 1
[shiny, Outliers.Sens$Forced] INFO, Initialising filtered data columns for  Nitric_oxide 
[shiny, Outliers.Sens$Forced] INFO, Discarding sensor data for Warming for  Nitric_oxide 
[shiny, Outliers.Sens$Forced] INFO, Excluding sensor data outside temperature and RH validity ranges for  Nitric_oxide 
[shiny, Outliers.Sens$Forced] INFO, Excluding invalid sensor data for  Nitric_oxide 
[shiny, Outliers.Sens$Forced] INFO, initialising outlier sensor data for  Nitric_oxide 
[shiny, Outliers.Sens$Forced] INFO, Initialising filtered data columns for  Nitrogen_dioxide 
[shiny, Outliers.Sens$Forced] INFO, Discarding sensor data for Warming for  Nitrogen_dioxide 
[shiny, Outliers.Sens$Forced] INFO, Excluding sensor data outside temperature and RH validity ranges for  Nitrogen_dioxide 
[shiny, Outliers.Sens$Forced] INFO, Excluding invalid sensor data for  Nitrogen_dioxide 
[shiny, Outliers.Sens$Forced] INFO, initialising outlier sensor data for  Nitrogen_dioxide 
[shiny, Outliers.Sens$Forced] INFO, Initialising filtered data columns for  Ozone 
[shiny, Outliers.Sens$Forced] INFO, Discarding sensor data for Warming for  Ozone 
[shiny, Outliers.Sens$Forced] INFO, Excluding sensor data outside temperature and RH validity ranges for  Ozone 
[shiny, Outliers.Sens$Forced] INFO, Excluding invalid sensor data for  Ozone 
[shiny, Outliers.Sens$Forced] INFO, initialising outlier sensor data for  Ozone 
[shiny, ind.ref()] INFO, Initialising filtered reference data columns for  Ref.CO_ppm 
[shiny, ind.ref()] INFO, initialising outlier sensor data for  Ref.CO_ppm 
[shiny, ind.ref.out()] INFO, detecting row indexes of outliers in reference data for  Ref.CO_ppm 
[Shiny, ind.ref.out()] ERROR, Warning no reference values impossible to discard outliers
[shiny, ind.ref()] INFO, Initialising filtered reference data columns for  Ref.NO 
[shiny, ind.ref()] INFO, initialising outlier sensor data for  Ref.NO 
[shiny, ind.ref.out()] INFO, detecting row indexes of outliers in reference data for  Ref.NO 
[Shiny, ind.ref.out()] ERROR, Warning no reference values impossible to discard outliers
[shiny, ind.ref()] INFO, Initialising filtered reference data columns for  Ref.NO2 
[shiny, ind.ref()] INFO, initialising outlier sensor data for  Ref.NO2 
[shiny, ind.ref.out()] INFO, detecting row indexes of outliers in reference data for  Ref.NO2 
[Shiny, ind.ref.out()] ERROR, Warning no reference values impossible to discard outliers
[shiny, ind.ref()] INFO, Initialising filtered reference data columns for  Ref.O3 
[shiny, ind.ref()] INFO, initialising outlier sensor data for  Ref.O3 
[shiny, ind.ref.out()] INFO, detecting row indexes of outliers in reference data for  Ref.O3 
[Shiny, ind.ref.out()] ERROR, Warning no reference values impossible to discard outliers

-----------------------------------------------------------------------------------
[shiny, General.cal()] INFO, Outliers.Sens$Forced is : TRUE
[shiny, General.cal()] INFO, Outliers.Ref$Forced is : TRUE
[shiny, General.cal()] INFO, Conv$Forced is : TRUE
[shiny, General.cal()] INFO, Cal$Forced is : TRUE
-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
[shiny, General.conv()] INFO, digital to volt conversion for all sensors on the shields
[shiny, Cal$Forced] INFO, there is no calibration function for sensors: COA4
-----------------------------------------------------------------------------------
[shiny, ind.ref()] INFO, Initialising filtered reference data columns for  Ref.CO_ppm 
[shiny, ind.ref()] INFO, initialising outlier sensor data for  Ref.CO_ppm 
[shiny, ind.ref.out()] INFO, detecting row indexes of outliers in reference data for  Ref.CO_ppm 
[Shiny, ind.ref.out()] ERROR, Warning no reference values impossible to discard outliers
[shiny, ind.ref()] INFO, Initialising filtered reference data columns for  Ref.NO 
[shiny, ind.ref()] INFO, initialising outlier sensor data for  Ref.NO 
[shiny, ind.ref.out()] INFO, detecting row indexes of outliers in reference data for  Ref.NO 
[Shiny, ind.ref.out()] ERROR, Warning no reference values impossible to discard outliers
[shiny, ind.ref()] INFO, Initialising filtered reference data columns for  Ref.NO2 
[shiny, ind.ref()] INFO, initialising outlier sensor data for  Ref.NO2 
[shiny, ind.ref.out()] INFO, detecting row indexes of outliers in reference data for  Ref.NO2 
[Shiny, ind.ref.out()] ERROR, Warning no reference values impossible to discard outliers
[shiny, ind.ref()] INFO, Initialising filtered reference data columns for  Ref.O3 
[shiny, ind.ref()] INFO, initialising outlier sensor data for  Ref.O3 
[shiny, ind.ref.out()] INFO, detecting row indexes of outliers in reference data for  Ref.O3 
[Shiny, ind.ref.out()] ERROR, Warning no reference values impossible to discard outliers

-----------------------------------------------------------------------------------
[shiny, General.cal()] INFO, Outliers.Sens$Forced is : TRUE
[shiny, General.cal()] INFO, Outliers.Ref$Forced is : TRUE
[shiny, General.cal()] INFO, Conv$Forced is : FALSE
[shiny, General.cal()] INFO, Cal$Forced is : TRUE
-----------------------------------------------------------------------------------
[shiny, Cal$Forced] INFO, there is no calibration function for sensors: COA4
-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
[shiny, General.cal()] INFO, Outliers.Sens$Forced is : FALSE
[shiny, General.cal()] INFO, Outliers.Ref$Forced is : FALSE
[shiny, General.cal()] INFO, Conv$Forced is : FALSE
[shiny, General.cal()] INFO, Cal$Forced is : TRUE
-----------------------------------------------------------------------------------
[shiny, Cal$Forced] INFO, there is no calibration function for sensors: COA4
-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
[shiny, General.cal()] INFO, Outliers.Sens$Forced is : FALSE
[shiny, General.cal()] INFO, Outliers.Ref$Forced is : FALSE
[shiny, General.cal()] INFO, Conv$Forced is : FALSE
[shiny, General.cal()] INFO, Cal$Forced is : FALSE
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
[CONFIG] Info, the config file S:/Box Sync/AirSensEUR/Fieldtests/Shiny/AirSensEUR15/General_data/AirSensEUR15_Servers.cfg for the configuration of servers exists
[CONFIG] Info, the config file S:/Box Sync/AirSensEUR/Fieldtests/Shiny/AirSensEUR15/General_data/AirSensEUR15.cfg for the configuration of AirSensEUR exists
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
[CONFIG] INFO, the file with covariates to plot S:/Box Sync/AirSensEUR/Fieldtests/Shiny/AirSensEUR15/General_data/AirSensEUR15_Covariates_COA4.cfg exists 
[CONFIG] INFO, the file with covariates to calibrate S:/Box Sync/AirSensEUR/Fieldtests/Shiny/AirSensEUR15/General_data/AirSensEUR15_CovMod_COA4.cfg exists 
[CONFIG] INFO, the file with covariates to plot S:/Box Sync/AirSensEUR/Fieldtests/Shiny/AirSensEUR15/General_data/AirSensEUR15_Covariates_NOB4.cfg exists 
[CONFIG] INFO, the file with covariates to calibrate S:/Box Sync/AirSensEUR/Fieldtests/Shiny/AirSensEUR15/General_data/AirSensEUR15_CovMod_NOB4.cfg exists 
[CONFIG] INFO, the file with covariates to plot S:/Box Sync/AirSensEUR/Fieldtests/Shiny/AirSensEUR15/General_data/AirSensEUR15_Covariates_NO2B43F.cfg exists 
[CONFIG] INFO, the file with covariates to calibrate S:/Box Sync/AirSensEUR/Fieldtests/Shiny/AirSensEUR15/General_data/AirSensEUR15_CovMod_NO2B43F.cfg exists 
[CONFIG] INFO, the file with covariates to plot S:/Box Sync/AirSensEUR/Fieldtests/Shiny/AirSensEUR15/General_data/AirSensEUR15_Covariates_OX_A431.cfg exists 
[CONFIG] INFO, the file with covariates to calibrate S:/Box Sync/AirSensEUR/Fieldtests/Shiny/AirSensEUR15/General_data/AirSensEUR15_CovMod_OX_A431.cfg exists 
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
[Check_Download] INFO, Checking 
S:/Box Sync/AirSensEUR/Fieldtests/Shiny/AirSensEUR15/General_data/airsenseur.db
S:/Box Sync/AirSensEUR/Fieldtests/Shiny/AirSensEUR15/General_data/General.csv
S:/Box Sync/AirSensEUR/Fieldtests/Shiny/AirSensEUR15/General_data/RefData.csv
S:/Box Sync/AirSensEUR/Fieldtests/Shiny/AirSensEUR15/General_data/SOSData.csv 
S:/Box Sync/AirSensEUR/Fieldtests/Shiny/AirSensEUR15/General_data/InfluxData.csv
 in S:/Box Sync/AirSensEUR/Fieldtests/Shiny/AirSensEUR15/General_data
[Check_Download] INFO, sensor data are going to be retrieved. Start date for data download: 2019-12-12 15:01:00
[Check_Download] INFO, reference data are going to be retrieved. Start new reference data at : 2019-12-12 07:20:00
[Check_Download] INFO, sensor data are going to be retrieved. Start date for data download: 2019-12-12 15:00:00
[Check_Download] INFO, S:/Box Sync/AirSensEUR/Fieldtests/Shiny/AirSensEUR15/General_data/SOSData.csv does not exist. It should be created, SOS sensor data should be retrieved.
[Check_Download] INFO, S:/Box Sync/AirSensEUR/Fieldtests/Shiny/AirSensEUR15/General_data/airsenseur.db exists.
[Check_Download] INFO, The database S:/Box Sync/AirSensEUR/Fieldtests/Shiny/AirSensEUR15/General_data/airsenseur.db includes the table AirSensEUR15 with the columns: time, altitude, boardTimeStamp, gpsTimestamp, latitude, longitude, sampleEvaluatedVal, sampleRawVal, channel, name
[Check_Download] INFO, SOS sensor data are going to be retrieved. Start date for data download: 2019-12-12 15:00:00
$Ref.Rdata.file
[1] "S:/Box Sync/AirSensEUR/Fieldtests/Shiny/AirSensEUR15/General_data/RefData.csv"

$Influx.Rdata.file
[1] "S:/Box Sync/AirSensEUR/Fieldtests/Shiny/AirSensEUR15/General_data/InfluxData.csv"

$SOS.file
[1] "S:/Box Sync/AirSensEUR/Fieldtests/Shiny/AirSensEUR15/General_data/SOSData.csv"

$General.Rdata.file
[1] "S:/Box Sync/AirSensEUR/Fieldtests/Shiny/AirSensEUR15/General_data/General.csv"

$airsenseur.db.file
[1] "S:/Box Sync/AirSensEUR/Fieldtests/Shiny/AirSensEUR15/General_data/airsenseur.db"

$WDinput
[1] "S:/Box Sync/AirSensEUR/Fieldtests/Shiny/AirSensEUR15/General_data"

$ExistFil.data.db
[1] TRUE

$Retrieve.data.db
[1] TRUE

$DateIN.db.prev
[1] "2019-11-06T09:56:00Z"

$DateEND.db.prev
[1] "2019-12-12T15:00:00Z"

$ExistFil.data.Ref
[1] TRUE

$Retrieve.data.Ref
[1] TRUE

$DateIN.Ref.prev
[1] "2019-11-06 UTC"

$DateEND.Ref.prev
[1] "2019-12-12 07:20:00 UTC"

$Var.Ref.prev
[1] "date"       "Ref.CO_ppm" "Ref.Temp"   "Ref.O3"     "Ref.NO2"    "Ref.NO"     "Ref.Long"   "Ref.Lat"   

$ExistFil.data.Influx
[1] TRUE

$Retrieve.data.Influx
[1] TRUE

$DateIN.Influx.prev
[1] "2019-11-06 09:56:00 UTC"

$DateEND.Influx.prev
[1] "2019-12-12 15:00:00 UTC"

$ExistFil.data.SOS
[1] FALSE

$Retrieve.data.SOS
[1] TRUE

$DateIN.SOS.prev
NULL

$DateEND.SOS.prev
NULL

$ExistFil.data.General
[1] TRUE

$Retrieve.data.General
[1] TRUE

$DateIN.General.prev
[1] "2019-11-06 09:57:00 UTC"

$DateEND.General.prev
[1] "2019-12-12 15:01:00 UTC"

-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
[SETTIME] Info, the config file S:/Box Sync/AirSensEUR/Fieldtests/Shiny/AirSensEUR15/General_data/AirSensEUR15_SETTIME.cfg for the configuration of AirSensEUR exists
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
[shiny] INFO creating the file system for data treatment at S:/Box Sync/AirSensEUR/Fieldtests/Shiny/AirSensEUR15  if it does not exist
[shiny, Selected] INFO Dir. already exists: S:/Box Sync/AirSensEUR/Fieldtests/Shiny/AirSensEUR15/Calibration
[shiny, Selected] INFO Dir. already exists: S:/Box Sync/AirSensEUR/Fieldtests/Shiny/AirSensEUR15/Drift
[shiny, Selected] INFO Dir. already exists: S:/Box Sync/AirSensEUR/Fieldtests/Shiny/AirSensEUR15/Estimated_coef
[shiny, Selected] INFO Dir. already exists: S:/Box Sync/AirSensEUR/Fieldtests/Shiny/AirSensEUR15/General_data
[shiny, Selected] INFO Dir. already exists: S:/Box Sync/AirSensEUR/Fieldtests/Shiny/AirSensEUR15/Models
[shiny, Selected] INFO Dir. already exists: S:/Box Sync/AirSensEUR/Fieldtests/Shiny/AirSensEUR15/Modelled_gas
[shiny, Selected] INFO Dir. already exists: S:/Box Sync/AirSensEUR/Fieldtests/Shiny/AirSensEUR15/Outliers
[shiny, Selected] INFO Dir. already exists: S:/Box Sync/AirSensEUR/Fieldtests/Shiny/AirSensEUR15/scriptsLog
[shiny, Selected] INFO Dir. already exists: S:/Box Sync/AirSensEUR/Fieldtests/Shiny/AirSensEUR15/SensorData
[shiny, Selected] INFO Dir. already exists: S:/Box Sync/AirSensEUR/Fieldtests/Shiny/AirSensEUR15/Retrieved_plots
[shiny, Selected] INFO Dir. already exists: S:/Box Sync/AirSensEUR/Fieldtests/Shiny/AirSensEUR15/Statistics
[shiny, Selected] INFO Dir. already exists: S:/Box Sync/AirSensEUR/Fieldtests/Shiny/AirSensEUR15/Verification_plots
-----------------------------------------------------------------------------------
[shiny, Selected] INFO Change the working directory to: S:/Box Sync/AirSensEUR/Fieldtests/Shiny/AirSensEUR15
[1] "Number of sink channels opened: 1. Closing opened channels"
-----------------------------------------------------------------------------------
[shiny, Selected] INFO Starting log file S:/Box Sync/AirSensEUR/Fieldtests/Shiny/40458D/scriptsLog/console_2020-01-13.log
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
[shiny] INFO, the OS platform is : windows
[shiny, isTcltk] INFO, ASE_Script is run under Rstudio
[shiny] INFO, internet is available
-----------------------------------------------------------------------------------
[Shiny] INFO, setting working directory
               Name                                       Value  Section
1           sysname                                     Windows   System
2           release                                     8.1 x64   System
3           version                                  build 9600   System
4          nodename                                D01RI1501926   System
5           machine                                      x86-64   System
6             login                                     gerbomi   System
7              user                                     gerbomi   System
8    effective_user                                     gerbomi   System
9         Directory     S:/Box Sync/AirSensEUR/Fieldtests/Shiny   System
10          Version                R version 3.6.1 (2019-07-05)        R
11       shinyalert                         1.0.0.9004 NA NA NA Packages
12          threadr                    0.8.665 NA NA 2019-02-26 Packages
13      sensorweb4R                                0.1 NA NA NA Packages
14       kableExtra     1.1.0 CRAN CRAN 2019-03-16 20:10:03 UTC Packages
15        captioner                  2.2.3 CRAN CRAN 2015-07-15 Packages
16           pander                  0.6.3 CRAN CRAN 2018-11-06 Packages
17        flextable     0.5.5 CRAN CRAN 2019-06-25 09:20:03 UTC Packages
18      formattable                0.2.0.1 CRAN CRAN 2016-08-05 Packages
19   weathermetrics                  1.2.2 CRAN CRAN 2016-05-19 Packages
20          caTools               1.17.1.2 CRAN CRAN 2014-04-21 Packages
21       doParallel    1.0.15 CRAN CRAN 2019-08-02 04:40:02 UTC Packages
22        iterators    1.0.12 CRAN CRAN 2019-07-26 22:50:02 UTC Packages
23          foreach     1.4.7 CRAN CRAN 2019-07-27 23:00:35 UTC Packages
24         RcppRoll                  0.3.0 CRAN CRAN 2018-06-05 Packages
25            rgeos                  0.5-2 CRAN CRAN 2019-10-02 Packages
26           raster                  3.0-7 CRAN CRAN 2019-09-22 Packages
27         maptools                  0.9-8 CRAN CRAN 2019-10-03 Packages
28           plotly     4.9.1 CRAN CRAN 2019-11-07 19:00:02 UTC Packages
29           GGally     1.4.0 CRAN CRAN 2018-05-17 23:31:19 UTC Packages
30   berryFunctions                 1.18.2 CRAN CRAN 2019-04-29 Packages
31         OSMscale                  0.5.1 CRAN CRAN 2017-04-12 Packages
32          webshot     0.5.1 CRAN CRAN 2018-09-28 21:40:02 UTC Packages
33      htmlwidgets     1.5.1 CRAN CRAN 2019-10-08 08:40:02 UTC Packages
34        htmltools     0.4.0 CRAN CRAN 2019-10-04 23:00:08 UTC Packages
35         dygraphs   1.1.1.6 CRAN CRAN 2018-07-11 22:00:03 UTC Packages
36          leaflet     2.0.2 CRAN CRAN 2018-08-27 14:12:16 UTC Packages
37            knitr      1.25 CRAN CRAN 2019-09-18 09:10:07 UTC Packages
38           xtable                  1.8-4 CRAN CRAN 2019-04-08 Packages
39        rmarkdown      1.16 CRAN CRAN 2019-10-01 19:10:09 UTC Packages
40          R.utils     2.9.0 CRAN CRAN 2019-06-13 07:30:24 UTC Packages
41             R.oo    1.23.0 CRAN CRAN 2019-11-03 08:40:02 UTC Packages
42      R.methodsS3                  1.7.1 CRAN CRAN 2016-02-15 Packages
43            shape     1.4.4 CRAN CRAN 2018-02-07 16:21:49 UTC Packages
44           fields                    9.9 CRAN CRAN 2019-10-05 Packages
45             maps                  3.3.0 CRAN CRAN 2018-04-03 Packages
46             spam                  2.4-0 CRAN CRAN 2019-11-01 Packages
47        dotCall64                  1.0-0 CRAN CRAN 2018-07-30 Packages
48            rlist                0.4.6.1 CRAN CRAN 2016-04-04 Packages
49              BMS                  0.3.4 CRAN CRAN 2015-11-23 Packages
50       data.table    1.12.6 CRAN CRAN 2019-10-18 22:20:10 UTC Packages
51          polynom     1.4-0 CRAN CRAN 2019-03-22 09:50:06 UTC Packages
52         corrplot                   0.84 CRAN CRAN 2017-10-16 Packages
53             mgcv    1.8-28 CRAN CRAN 2019-03-21 11:40:07 UTC Packages
54             nlme                 3.1-140 CRAN CRAN 2019-05-1 Packages
55            sqldf                 0.4-11 CRAN CRAN 2017-06-23 Packages
56           gsubfn                    0.7 CRAN CRAN 2018-03-15 Packages
57            proto         1.0.0 CRAN CRAN 2016-10-29 00:23:07 Packages
58          RSQLite                  2.1.2 CRAN CRAN 2019-07-23 Packages
59            RODBC                 1.3-16 CRAN CRAN 2019-09-02 Packages
60         jsonlite       1.6 CRAN CRAN 2018-12-07 12:50:02 UTC Packages
61              XML 3.98-1.20 CRAN CRAN 2019-06-06 06:23:32 UTC Packages
62          RJSONIO   1.3-1.3 CRAN CRAN 2019-10-03 15:27:15 UTC Packages
63          reshape     0.8.8 CRAN CRAN 2018-10-23 18:50:03 UTC Packages
64         quantreg      5.51 CRAN CRAN 2019-08-07 17:10:02 UTC Packages
65          SparseM      1.77 CRAN CRAN 2017-04-23 18:26:30 UTC Packages
66       minpack.lm         1.2-1 CRAN CRAN 2016-11-20 16:40:02 Packages
67         limSolve   1.5.5.3 CRAN CRAN 2017-08-14 15:14:43 UTC Packages
68         devtools     2.2.1 CRAN CRAN 2019-09-24 15:00:02 UTC Packages
69          usethis     1.5.1 CRAN CRAN 2019-07-04 11:00:05 UTC Packages
70        backports     1.1.5 CRAN CRAN 2019-10-02 20:20:02 UTC Packages
71       colorspace                  1.4-1 CRAN CRAN 2019-03-18 Packages
72               sp     1.3-1 CRAN CRAN 2018-06-05 13:58:03 UTC Packages
73         processx     3.4.1 CRAN CRAN 2019-07-18 06:35:54 UTC Packages
74             httr     1.4.1 CRAN CRAN 2019-08-05 14:30:02 UTC Packages
75            RCurl 1.95-4.12 CRAN CRAN 2019-03-04 09:45:33 UTC Packages
76           bitops                  1.0-6 CRAN CRAN 2013-08-17 Packages
77             curl       4.2 CRAN CRAN 2019-09-24 12:20:02 UTC Packages
78        geosphere                 1.5-10 CRAN CRAN 2019-05-25 Packages
79    futile.logger                  1.4.3 CRAN CRAN 2016-07-10 Packages
80         lambda.r                  1.2.4 CRAN CRAN 2019-09-15 Packages
81   futile.options                  1.0.1 CRAN CRAN 2018-04-20 Packages
82              xts    0.11-2 CRAN CRAN 2018-11-05 14:10:03 UTC Packages
83              zoo                  1.8-6 CRAN CRAN 2019-05-27 Packages
84        lubridate     1.7.4 CRAN CRAN 2018-04-11 10:08:43 UTC Packages
85          openair                  2.6-6 CRAN CRAN 2019-09-23 Packages
86           dbplyr     1.4.2 CRAN CRAN 2019-06-17 20:00:04 UTC Packages
87            broom     0.5.2 CRAN CRAN 2019-04-07 19:52:53 UTC Packages
88          forcats     0.4.0 CRAN CRAN 2019-02-17 14:40:02 UTC Packages
89          stringr     1.4.0 CRAN CRAN 2019-02-10 03:40:03 UTC Packages
90            dplyr     0.8.3 CRAN CRAN 2019-07-04 15:50:02 UTC Packages
91            purrr     0.3.3 CRAN CRAN 2019-10-18 12:40:05 UTC Packages
92            readr     1.3.1 CRAN CRAN 2018-12-21 09:40:02 UTC Packages
93            tidyr     1.0.0 CRAN CRAN 2019-09-11 23:00:03 UTC Packages
94           tibble     2.1.3 CRAN CRAN 2019-06-06 13:40:03 UTC Packages
95          ggplot2     3.2.1 CRAN CRAN 2019-08-10 22:30:13 UTC Packages
96        tidyverse     1.2.1 CRAN CRAN 2017-11-14 18:09:56 UTC Packages
97             plyr         1.8.4 CRAN CRAN 2016-06-08 10:40:15 Packages
98          stringi                  1.4.3 CRAN CRAN 2019-03-12 Packages
99    rhandsontable     0.3.7 CRAN CRAN 2018-11-20 05:50:03 UTC Packages
100              DT       0.9 CRAN CRAN 2019-09-17 09:10:10 UTC Packages
101    shinyWidgets     0.4.9 CRAN CRAN 2019-09-10 16:40:05 UTC Packages
102 shinycssloaders                  0.2.0 CRAN CRAN 2017-05-03 Packages
103         shinyBS                   0.61 CRAN CRAN 2015-03-30 Packages
104     shinythemes     1.1.2 CRAN CRAN 2018-11-06 17:00:03 UTC Packages
105         shinyjs       1.0 CRAN CRAN 2018-01-08 22:21:13 UTC Packages
106     envDocument                  2.4.1 CRAN CRAN 2019-08-08 Packages
107           shiny     1.4.0 CRAN CRAN 2019-10-10 12:50:02 UTC Packages
108      tidyselect     0.2.5 CRAN CRAN 2018-10-11 13:00:03 UTC Packages
109         lpSolve               5.6.13.3 CRAN CRAN 2015-09-18 Packages
110         munsell     0.5.0 CRAN CRAN 2018-06-12 04:29:06 UTC Packages
111       codetools    0.2-16 CRAN CRAN 2018-12-24 12:40:05 UTC Packages
112           chron    2.3-54 CRAN CRAN 2019-08-26 06:58:12 UTC Packages
113           withr     2.1.2 CRAN CRAN 2018-03-15 22:39:56 UTC Packages
114            uuid         0.1-2 CRAN CRAN 2015-07-28 08:03:46 Packages
115      rstudioapi      0.10 CRAN CRAN 2019-03-19 20:30:03 UTC Packages
116         officer     0.3.5 CRAN CRAN 2019-06-23 18:50:03 UTC Packages
117           rJava    0.9-11 CRAN CRAN 2019-03-29 06:53:31 UTC Packages
118           bit64                  0.9-7 CRAN CRAN 2017-05-07 Packages
119       rprojroot     1.3-2 CRAN CRAN 2018-01-03 15:36:24 UTC Packages
120           vctrs     0.2.0 CRAN CRAN 2019-07-05 23:00:04 UTC Packages
121        generics     0.0.2 CRAN CRAN 2018-11-29 13:20:03 UTC Packages
122            xfun      0.10 CRAN CRAN 2019-10-01 18:20:02 UTC Packages
123              R6     2.4.0 CRAN CRAN 2019-02-14 19:42:14 UTC Packages
124        markdown       1.1 CRAN CRAN 2019-08-07 16:30:02 UTC Packages
125      assertthat     0.2.1 CRAN CRAN 2019-03-21 14:53:46 UTC Packages
126        promises     1.1.0 CRAN CRAN 2019-10-04 23:00:05 UTC Packages
127          scales     1.0.0 CRAN CRAN 2018-08-09 10:10:03 UTC Packages
128          gtable     0.3.0 CRAN CRAN 2019-03-25 19:50:02 UTC Packages
129           rlang     0.4.1 CRAN CRAN 2019-10-24 09:20:03 UTC Packages
130    MatrixModels                  0.4-1 CRAN CRAN 2015-08-22 Packages
131         zeallot     0.1.0 CRAN CRAN 2018-01-28 16:14:13 UTC Packages
132     systemfonts     0.1.1 CRAN CRAN 2019-07-01 12:50:02 UTC Packages
133         splines                              3.6.1 NA NA NA Packages
134           rgdal                  1.4-7 CRAN CRAN 2019-10-25 Packages
135        lazyeval     0.2.2 CRAN CRAN 2019-03-15 17:50:07 UTC Packages
136          hexbin    1.27.3 CRAN CRAN 2019-05-14 14:50:03 UTC Packages
137            yaml                  2.2.0 CRAN CRAN 2018-07-20 Packages
138           abind                  1.4-5 CRAN CRAN 2016-06-19 Packages
139          modelr     0.1.5 CRAN CRAN 2019-08-08 14:20:02 UTC Packages
140       crosstalk         1.0.0 CRAN CRAN 2016-12-21 08:30:32 Packages
141          httpuv     1.5.2 CRAN CRAN 2019-09-11 05:40:02 UTC Packages
142           tcltk                              3.6.1 NA NA NA Packages
143        ellipsis     0.3.0 CRAN CRAN 2019-09-20 20:40:02 UTC Packages
144    RColorBrewer                  1.1-2 CRAN CRAN 2014-12-07 Packages
145     sessioninfo     1.1.1 CRAN CRAN 2018-11-05 17:20:02 UTC Packages
146            Rcpp                  1.0.1 CRAN CRAN 2019-03-16 Packages
147       base64enc         0.1-3 CRAN CRAN 2015-07-28 08:03:37 Packages
148              ps     1.3.0 CRAN CRAN 2018-12-21 14:50:03 UTC Packages
149     prettyunits         1.0.2 CRAN CRAN 2015-07-13 04:09:56 Packages
150           haven     2.1.1 CRAN CRAN 2019-07-04 14:50:03 UTC Packages
151         cluster                  2.1.0 CRAN CRAN 2019-06-07 Packages
152              fs     1.3.1 CRAN CRAN 2019-05-06 22:50:03 UTC Packages
153        magrittr           1.5 CRAN CRAN 2014-11-22 19:15:57 Packages
154         pkgload     1.0.2 CRAN CRAN 2018-10-29 20:30:03 UTC Packages
155             hms                  0.5.2 CRAN CRAN 2019-10-30 Packages
156            mime       0.7 CRAN CRAN 2019-06-11 20:10:03 UTC Packages
157        evaluate      0.14 CRAN CRAN 2019-05-28 15:50:02 UTC Packages
158          readxl     1.3.1 CRAN CRAN 2019-03-13 16:30:02 UTC Packages
159        testthat     2.3.0 CRAN CRAN 2019-11-05 22:50:02 UTC Packages
160        compiler                              3.6.1 NA NA NA Packages
161              V8       2.3 CRAN CRAN 2019-07-02 10:51:07 UTC Packages
162          crayon     1.3.4 CRAN CRAN 2017-09-16 19:49:46 UTC Packages
163           later     1.0.0 CRAN CRAN 2019-10-04 05:00:02 UTC Packages
164             DBI                  1.0.0 CRAN CRAN 2018-05-02 Packages
165         formatR       1.7 CRAN CRAN 2019-06-11 20:00:03 UTC Packages
166            MASS               7.3-51.4 CRAN CRAN 2019-03-31 Packages
167          Matrix                 1.2-17 CRAN CRAN 2019-03-11 Packages
168             cli     1.1.0 CRAN CRAN 2019-03-19 10:43:26 UTC Packages
169        quadprog                  1.5-7 CRAN CRAN 2019-05-05 Packages
170       pkgconfig     2.0.3 CRAN CRAN 2019-09-22 09:20:02 UTC Packages
171         foreign                 0.8-71 CRAN CRAN 2018-07-20 Packages
172            xml2     1.2.2 CRAN CRAN 2019-08-09 12:10:03 UTC Packages
173           rvest     0.3.5 CRAN CRAN 2019-11-08 23:10:02 UTC Packages
174           callr     3.3.2 CRAN CRAN 2019-09-22 09:50:02 UTC Packages
175          digest                 0.6.20 CRAN CRAN 2019-07-04 Packages
176      cellranger         1.1.0 CRAN CRAN 2016-07-27 03:17:48 Packages
177         gdtools     0.2.1 CRAN CRAN 2019-10-14 15:30:02 UTC Packages
178   OpenStreetMap     0.3.4 CRAN CRAN 2019-05-31 17:40:02 UTC Packages
179       lifecycle     0.1.0 CRAN CRAN 2019-08-01 12:50:05 UTC Packages
180         mapproj                  1.2.6 CRAN CRAN 2018-03-29 Packages
181            desc     1.2.0 CRAN CRAN 2018-05-01 20:48:05 UTC Packages
182     viridisLite     0.3.0 CRAN CRAN 2018-02-01 22:45:56 UTC Packages
183          pillar     1.4.2 CRAN CRAN 2019-06-29 16:40:03 UTC Packages
184         lattice                0.20-38 CRAN CRAN 2018-11-01 Packages
185         fastmap     1.0.1 CRAN CRAN 2019-10-08 05:20:02 UTC Packages
186        pkgbuild     1.0.6 CRAN CRAN 2019-10-09 14:00:02 UTC Packages
187            glue     1.3.1 CRAN CRAN 2019-03-12 22:30:02 UTC Packages
188         remotes     2.1.0 CRAN CRAN 2019-06-24 21:30:03 UTC Packages
189             zip     2.0.4 CRAN CRAN 2019-09-01 08:50:02 UTC Packages
190             bit                 1.1-14 CRAN CRAN 2018-04-11 Packages
191            blob     1.2.0 CRAN CRAN 2019-07-09 11:40:03 UTC Packages
192    latticeExtra                 0.6-28 CRAN CRAN 2016-01-09 Packages
193         memoise     1.1.0 CRAN CRAN 2017-04-21 05:54:22 UTC Packages
194          kimisc                    0.4 CRAN CRAN 2017-12-17 Packages
[shiny, isTcltk] INFO, directory from where the script is run: S:/Box Sync/AirSensEUR/Fieldtests/Shiny
[Shiny] INFO, setting working directory to S:/Box Sync/AirSensEUR/Fieldtests/Shiny
-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
[Global] INFO, checking presence of necessary files (ASEconfig_xx.R and Functions4ASE.R). Then setting the Working Directory.
[Global] INFO, file S:/Box Sync/AirSensEUR/Fieldtests/Shiny/Functions4ASE.R found and ready to be sourced
-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
[Global] INFO, checking presence of necessary file 151016 Sensor_Toolbox.R.
[Global] INFO, file S:/Box Sync/AirSensEUR/Fieldtests/Shiny/151016 Sensor_Toolbox.R found and ready to be sourced
-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
[Global] AirSensEUR config file found: ASEconfig40458D.R
 [Global] AirSensEUR config file found: ASEconfigAirSensEUR00.R
 [Global] AirSensEUR config file found: ASEconfigAirSensEUR15.R
 [Global] AirSensEUR config file found: ASEconfigATN01.R
 [Global] AirSensEUR config file found: ASEconfigHMS_1.R
 [Global] AirSensEUR config file found: ASEconfigJRC_01.R
 [Global] AirSensEUR config file found: ASEconfigJRC_02.R
 [Global] AirSensEUR config file found: ASEconfigJRC_03.R
 [Global] AirSensEUR config file found: ASEconfigJRC_04.R
 [Global] AirSensEUR config file found: ASEconfigJRC_05.R
 [Global] AirSensEUR config file found: ASEconfigJRC_06.R
 [Global] AirSensEUR config file found: ASEconfigJRC_07.R
 [Global] AirSensEUR config file found: ASEconfigJRC_11.R
 [Global] AirSensEUR config file found: ASEconfigJRC_14.R
 [Global] AirSensEUR config file found: ASEconfigJRC_16.R
 [Global] AirSensEUR config file found: ASEconfigJRC_18.R
 [Global] AirSensEUR config file found: ASEconfigLANUV_01.R
 [Global] AirSensEUR config file found: ASEconfigLANUV02.R
 [Global] AirSensEUR config file found: ASEconfigLANUV03.R
 [Global] AirSensEUR config file found: ASEconfigNILU_P1.R
 [Global] AirSensEUR config file found: ASEconfigNL_01mim_WG42.R
 [Global] AirSensEUR config file found: ASEconfigNL_01min.R
 [Global] AirSensEUR config file found: ASEconfigNL_02min.R
 [Global] AirSensEUR config file found: ASEconfigNL_03min.R
 [Global] AirSensEUR config file found: ASEconfigNL_04min.R
 [Global] AirSensEUR config file found: ASEconfigNL_05min.R
 [Global] AirSensEUR config file found: ASEconfigP2.R
 [Global] AirSensEUR config file found: ASEconfigRIVM08.R
 [Global] AirSensEUR config file found: ASEconfigRIVMas01.R
 [Global] AirSensEUR config file found: ASEconfigRIVMas02.R
 [Global] AirSensEUR config file found: ASEconfigRIVMas03.R
 [Global] AirSensEUR config file found: ASEconfigRIVMas04.R
 [Global] AirSensEUR config file found: ASEconfigRIVMas05.R
 [Global] AirSensEUR config file found: ASEconfigRIVMas05min.R
 [Global] AirSensEUR config file found: ASEconfigRIVMas06.R
 [Global] AirSensEUR config file found: ASEconfigRIVMas07.R
 [Global] AirSensEUR config file found: ASEconfigRIVMas08.R
 [Global] AirSensEUR config file found: ASEconfigRIVMas09.R
 [Global] AirSensEUR config file found: ASEconfigRIVMas10.R
 [Global] AirSensEUR config file found: ASEconfigRIVMas11.R
 [Global] AirSensEUR config file found: ASEconfigRIVMas12.R
-----------------------------------------------------------------------------------
[Global] INFO, sourcing 151016 Sensor_Toolbox.R and Funtions4ASE.R
-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
[Global] INFO, Check or install packages needed to run the script
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
[Global] INFO, package 52North/sensorweb4R already installed
[Global] INFO, Package 52North/sensorweb4R loaded
[Global] INFO, package skgrange/threadr already installed
[Global] INFO, Package skgrange/threadr loaded
[Global] INFO, package daattali/shinyalert already installed
[Global] INFO, Package daattali/shinyalert loaded
[Global] INFO, List of installed packages
  [1] .GlobalEnv              package:shinyalert      package:threadr         package:sensorweb4R     package:kableExtra      package:captioner       package:pander          package:flextable       package:formattable    
 [10] package:weathermetrics  package:caTools         package:doParallel      package:parallel        package:iterators       package:foreach         package:RcppRoll        package:rgeos           package:raster         
 [19] package:maptools        package:plotly          package:GGally          package:berryFunctions  package:OSMscale        package:webshot         package:htmlwidgets     package:htmltools       package:dygraphs       
 [28] package:leaflet         package:knitr           package:xtable          package:rmarkdown       package:R.utils         package:R.oo            package:R.methodsS3     package:tools           package:shape          
 [37] package:fields          package:maps            package:spam            package:grid            package:dotCall64       package:rlist           package:BMS             package:data.table      package:polynom        
 [46] package:corrplot        package:mgcv            package:nlme            package:sqldf           package:gsubfn          package:proto           package:RSQLite         package:RODBC           package:jsonlite       
 [55] package:XML             package:RJSONIO         package:reshape         package:quantreg        package:SparseM         package:minpack.lm      package:limSolve        package:devtools        package:usethis        
 [64] package:backports       package:colorspace      package:sp              package:processx        package:httr            package:RCurl           package:bitops          package:curl            package:geosphere      
 [73] package:futile.logger   package:lambda.r        package:futile.options  package:xts             package:zoo             package:lubridate       package:openair         package:dbplyr          package:broom          
 [82] package:forcats         package:stringr         package:dplyr           package:purrr           package:readr           package:tidyr           package:tibble          package:ggplot2         package:tidyverse      
 [91] package:plyr            package:stringi         package:rhandsontable   package:DT              package:shinyWidgets    package:shinycssloaders package:shinyBS         package:shinythemes     package:shinyjs        
[100] package:envDocument     package:shiny           tools:rstudio           package:stats           package:graphics        package:grDevices       package:utils           package:datasets        package:methods        
[109] Autoloads               package:base           

Called from: eval(expr, p)
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#2474: input$Save
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#2476: progress <- shiny::Progress$new()
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#2478: on.exit(progress$close())
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#2479: progress$set(message = "Reading Server File", value = 0.5)
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#2480: if (file.exists(cfg_file.List())) {
    Servers_file <- fread(file = Servers_file.List(), header = TRUE)
    Servers_file <- Servers_file[-which(Servers_file$PROXY %in% 
        c("PASSWORD", "Pass", "Pass__a_i_p__"))]
    Servers_file[na.omit(match(c("UserMins", "UserMinsAvg", "Delay", 
        "PROXY", "URL", "PORT", "LOGIN", "Down.Influx", "Host", 
        "Port", "User", "Db", "Dataset", "Influx.TZ", "Down.SOS", 
        "AirsensWeb", "AirSensEur.name", "SOS.TZ", "Down.Ref", 
        "FTPMode", "urlref", "Reference.name", "RefSOSname", 
        "Ref.SOS.name", "RefPollutants", "RefDateDownload", "Ref__a_i_p__name", 
        "User__a_i_p__", "Ref__a_i_p__Organisation", "Ref__a_i_p__Station", 
        "Ref__a_i_p__Pollutants", "Ref__a_i_p__Date", "coord.ref", 
        "alt.ref", "ref.tzone", "asc.File"), Servers_file[[1]]))]
}
reactive({
    file.path(DisqueFieldtestDir.List(), "General_data", paste0(ASE_name.List(), 
        ".cfg"))
}) 
[1] "S:/Box Sync/AirSensEUR/Fieldtests/Shiny/40458D/General_data/40458D.cfg"
-----------------------------------------------------------------------------------
[shiny] INFO, the OS platform is : windows
[shiny, isTcltk] INFO, ASE_Script is run under Rstudio
[shiny] INFO, internet is available
-----------------------------------------------------------------------------------
[Shiny] INFO, setting working directory
               Name                                       Value  Section
1           sysname                                     Windows   System
2           release                                     8.1 x64   System
3           version                                  build 9600   System
4          nodename                                D01RI1501926   System
5           machine                                      x86-64   System
6             login                                     gerbomi   System
7              user                                     gerbomi   System
8    effective_user                                     gerbomi   System
9         Directory     S:/Box Sync/AirSensEUR/Fieldtests/Shiny   System
10          Version                R version 3.6.1 (2019-07-05)        R
11       shinyalert                         1.0.0.9004 NA NA NA Packages
12          threadr                    0.8.665 NA NA 2019-02-26 Packages
13      sensorweb4R                                0.1 NA NA NA Packages
14       kableExtra     1.1.0 CRAN CRAN 2019-03-16 20:10:03 UTC Packages
15        captioner                  2.2.3 CRAN CRAN 2015-07-15 Packages
16           pander                  0.6.3 CRAN CRAN 2018-11-06 Packages
17        flextable     0.5.5 CRAN CRAN 2019-06-25 09:20:03 UTC Packages
18      formattable                0.2.0.1 CRAN CRAN 2016-08-05 Packages
19   weathermetrics                  1.2.2 CRAN CRAN 2016-05-19 Packages
20          caTools               1.17.1.2 CRAN CRAN 2014-04-21 Packages
21       doParallel    1.0.15 CRAN CRAN 2019-08-02 04:40:02 UTC Packages
22        iterators    1.0.12 CRAN CRAN 2019-07-26 22:50:02 UTC Packages
23          foreach     1.4.7 CRAN CRAN 2019-07-27 23:00:35 UTC Packages
24         RcppRoll                  0.3.0 CRAN CRAN 2018-06-05 Packages
25            rgeos                  0.5-2 CRAN CRAN 2019-10-02 Packages
26           raster                  3.0-7 CRAN CRAN 2019-09-22 Packages
27         maptools                  0.9-8 CRAN CRAN 2019-10-03 Packages
28           plotly     4.9.1 CRAN CRAN 2019-11-07 19:00:02 UTC Packages
29           GGally     1.4.0 CRAN CRAN 2018-05-17 23:31:19 UTC Packages
30   berryFunctions                 1.18.2 CRAN CRAN 2019-04-29 Packages
31         OSMscale                  0.5.1 CRAN CRAN 2017-04-12 Packages
32          webshot     0.5.1 CRAN CRAN 2018-09-28 21:40:02 UTC Packages
33      htmlwidgets     1.5.1 CRAN CRAN 2019-10-08 08:40:02 UTC Packages
34        htmltools     0.4.0 CRAN CRAN 2019-10-04 23:00:08 UTC Packages
35         dygraphs   1.1.1.6 CRAN CRAN 2018-07-11 22:00:03 UTC Packages
36          leaflet     2.0.2 CRAN CRAN 2018-08-27 14:12:16 UTC Packages
37            knitr      1.25 CRAN CRAN 2019-09-18 09:10:07 UTC Packages
38           xtable                  1.8-4 CRAN CRAN 2019-04-08 Packages
39        rmarkdown      1.16 CRAN CRAN 2019-10-01 19:10:09 UTC Packages
40          R.utils     2.9.0 CRAN CRAN 2019-06-13 07:30:24 UTC Packages
41             R.oo    1.23.0 CRAN CRAN 2019-11-03 08:40:02 UTC Packages
42      R.methodsS3                  1.7.1 CRAN CRAN 2016-02-15 Packages
43            shape     1.4.4 CRAN CRAN 2018-02-07 16:21:49 UTC Packages
44           fields                    9.9 CRAN CRAN 2019-10-05 Packages
45             maps                  3.3.0 CRAN CRAN 2018-04-03 Packages
46             spam                  2.4-0 CRAN CRAN 2019-11-01 Packages
47        dotCall64                  1.0-0 CRAN CRAN 2018-07-30 Packages
48            rlist                0.4.6.1 CRAN CRAN 2016-04-04 Packages
49              BMS                  0.3.4 CRAN CRAN 2015-11-23 Packages
50       data.table    1.12.6 CRAN CRAN 2019-10-18 22:20:10 UTC Packages
51          polynom     1.4-0 CRAN CRAN 2019-03-22 09:50:06 UTC Packages
52         corrplot                   0.84 CRAN CRAN 2017-10-16 Packages
53             mgcv    1.8-28 CRAN CRAN 2019-03-21 11:40:07 UTC Packages
54             nlme                 3.1-140 CRAN CRAN 2019-05-1 Packages
55            sqldf                 0.4-11 CRAN CRAN 2017-06-23 Packages
56           gsubfn                    0.7 CRAN CRAN 2018-03-15 Packages
57            proto         1.0.0 CRAN CRAN 2016-10-29 00:23:07 Packages
58          RSQLite                  2.1.2 CRAN CRAN 2019-07-23 Packages
59            RODBC                 1.3-16 CRAN CRAN 2019-09-02 Packages
60         jsonlite       1.6 CRAN CRAN 2018-12-07 12:50:02 UTC Packages
61              XML 3.98-1.20 CRAN CRAN 2019-06-06 06:23:32 UTC Packages
62          RJSONIO   1.3-1.3 CRAN CRAN 2019-10-03 15:27:15 UTC Packages
63          reshape     0.8.8 CRAN CRAN 2018-10-23 18:50:03 UTC Packages
64         quantreg      5.51 CRAN CRAN 2019-08-07 17:10:02 UTC Packages
65          SparseM      1.77 CRAN CRAN 2017-04-23 18:26:30 UTC Packages
66       minpack.lm         1.2-1 CRAN CRAN 2016-11-20 16:40:02 Packages
67         limSolve   1.5.5.3 CRAN CRAN 2017-08-14 15:14:43 UTC Packages
68         devtools     2.2.1 CRAN CRAN 2019-09-24 15:00:02 UTC Packages
69          usethis     1.5.1 CRAN CRAN 2019-07-04 11:00:05 UTC Packages
70        backports     1.1.5 CRAN CRAN 2019-10-02 20:20:02 UTC Packages
71       colorspace                  1.4-1 CRAN CRAN 2019-03-18 Packages
72               sp     1.3-1 CRAN CRAN 2018-06-05 13:58:03 UTC Packages
73         processx     3.4.1 CRAN CRAN 2019-07-18 06:35:54 UTC Packages
74             httr     1.4.1 CRAN CRAN 2019-08-05 14:30:02 UTC Packages
75            RCurl 1.95-4.12 CRAN CRAN 2019-03-04 09:45:33 UTC Packages
76           bitops                  1.0-6 CRAN CRAN 2013-08-17 Packages
77             curl       4.2 CRAN CRAN 2019-09-24 12:20:02 UTC Packages
78        geosphere                 1.5-10 CRAN CRAN 2019-05-25 Packages
79    futile.logger                  1.4.3 CRAN CRAN 2016-07-10 Packages
80         lambda.r                  1.2.4 CRAN CRAN 2019-09-15 Packages
81   futile.options                  1.0.1 CRAN CRAN 2018-04-20 Packages
82              xts    0.11-2 CRAN CRAN 2018-11-05 14:10:03 UTC Packages
83              zoo                  1.8-6 CRAN CRAN 2019-05-27 Packages
84        lubridate     1.7.4 CRAN CRAN 2018-04-11 10:08:43 UTC Packages
85          openair                  2.6-6 CRAN CRAN 2019-09-23 Packages
86           dbplyr     1.4.2 CRAN CRAN 2019-06-17 20:00:04 UTC Packages
87            broom     0.5.2 CRAN CRAN 2019-04-07 19:52:53 UTC Packages
88          forcats     0.4.0 CRAN CRAN 2019-02-17 14:40:02 UTC Packages
89          stringr     1.4.0 CRAN CRAN 2019-02-10 03:40:03 UTC Packages
90            dplyr     0.8.3 CRAN CRAN 2019-07-04 15:50:02 UTC Packages
91            purrr     0.3.3 CRAN CRAN 2019-10-18 12:40:05 UTC Packages
92            readr     1.3.1 CRAN CRAN 2018-12-21 09:40:02 UTC Packages
93            tidyr     1.0.0 CRAN CRAN 2019-09-11 23:00:03 UTC Packages
94           tibble     2.1.3 CRAN CRAN 2019-06-06 13:40:03 UTC Packages
95          ggplot2     3.2.1 CRAN CRAN 2019-08-10 22:30:13 UTC Packages
96        tidyverse     1.2.1 CRAN CRAN 2017-11-14 18:09:56 UTC Packages
97             plyr         1.8.4 CRAN CRAN 2016-06-08 10:40:15 Packages
98          stringi                  1.4.3 CRAN CRAN 2019-03-12 Packages
99    rhandsontable     0.3.7 CRAN CRAN 2018-11-20 05:50:03 UTC Packages
100              DT       0.9 CRAN CRAN 2019-09-17 09:10:10 UTC Packages
101    shinyWidgets     0.4.9 CRAN CRAN 2019-09-10 16:40:05 UTC Packages
102 shinycssloaders                  0.2.0 CRAN CRAN 2017-05-03 Packages
103         shinyBS                   0.61 CRAN CRAN 2015-03-30 Packages
104     shinythemes     1.1.2 CRAN CRAN 2018-11-06 17:00:03 UTC Packages
105         shinyjs       1.0 CRAN CRAN 2018-01-08 22:21:13 UTC Packages
106     envDocument                  2.4.1 CRAN CRAN 2019-08-08 Packages
107           shiny     1.4.0 CRAN CRAN 2019-10-10 12:50:02 UTC Packages
108      tidyselect     0.2.5 CRAN CRAN 2018-10-11 13:00:03 UTC Packages
109         lpSolve               5.6.13.3 CRAN CRAN 2015-09-18 Packages
110         munsell     0.5.0 CRAN CRAN 2018-06-12 04:29:06 UTC Packages
111       codetools    0.2-16 CRAN CRAN 2018-12-24 12:40:05 UTC Packages
112           chron    2.3-54 CRAN CRAN 2019-08-26 06:58:12 UTC Packages
113           withr     2.1.2 CRAN CRAN 2018-03-15 22:39:56 UTC Packages
114            uuid         0.1-2 CRAN CRAN 2015-07-28 08:03:46 Packages
115      rstudioapi      0.10 CRAN CRAN 2019-03-19 20:30:03 UTC Packages
116         officer     0.3.5 CRAN CRAN 2019-06-23 18:50:03 UTC Packages
117           rJava    0.9-11 CRAN CRAN 2019-03-29 06:53:31 UTC Packages
118           bit64                  0.9-7 CRAN CRAN 2017-05-07 Packages
119       rprojroot     1.3-2 CRAN CRAN 2018-01-03 15:36:24 UTC Packages
120           vctrs     0.2.0 CRAN CRAN 2019-07-05 23:00:04 UTC Packages
121        generics     0.0.2 CRAN CRAN 2018-11-29 13:20:03 UTC Packages
122            xfun      0.10 CRAN CRAN 2019-10-01 18:20:02 UTC Packages
123              R6     2.4.0 CRAN CRAN 2019-02-14 19:42:14 UTC Packages
124        markdown       1.1 CRAN CRAN 2019-08-07 16:30:02 UTC Packages
125      assertthat     0.2.1 CRAN CRAN 2019-03-21 14:53:46 UTC Packages
126        promises     1.1.0 CRAN CRAN 2019-10-04 23:00:05 UTC Packages
127          scales     1.0.0 CRAN CRAN 2018-08-09 10:10:03 UTC Packages
128          gtable     0.3.0 CRAN CRAN 2019-03-25 19:50:02 UTC Packages
129           rlang     0.4.1 CRAN CRAN 2019-10-24 09:20:03 UTC Packages
130    MatrixModels                  0.4-1 CRAN CRAN 2015-08-22 Packages
131         zeallot     0.1.0 CRAN CRAN 2018-01-28 16:14:13 UTC Packages
132     systemfonts     0.1.1 CRAN CRAN 2019-07-01 12:50:02 UTC Packages
133         splines                              3.6.1 NA NA NA Packages
134           rgdal                  1.4-7 CRAN CRAN 2019-10-25 Packages
135        lazyeval     0.2.2 CRAN CRAN 2019-03-15 17:50:07 UTC Packages
136          hexbin    1.27.3 CRAN CRAN 2019-05-14 14:50:03 UTC Packages
137            yaml                  2.2.0 CRAN CRAN 2018-07-20 Packages
138           abind                  1.4-5 CRAN CRAN 2016-06-19 Packages
139          modelr     0.1.5 CRAN CRAN 2019-08-08 14:20:02 UTC Packages
140       crosstalk         1.0.0 CRAN CRAN 2016-12-21 08:30:32 Packages
141          httpuv     1.5.2 CRAN CRAN 2019-09-11 05:40:02 UTC Packages
142           tcltk                              3.6.1 NA NA NA Packages
143        ellipsis     0.3.0 CRAN CRAN 2019-09-20 20:40:02 UTC Packages
144    RColorBrewer                  1.1-2 CRAN CRAN 2014-12-07 Packages
145     sessioninfo     1.1.1 CRAN CRAN 2018-11-05 17:20:02 UTC Packages
146            Rcpp                  1.0.1 CRAN CRAN 2019-03-16 Packages
147       base64enc         0.1-3 CRAN CRAN 2015-07-28 08:03:37 Packages
148              ps     1.3.0 CRAN CRAN 2018-12-21 14:50:03 UTC Packages
149     prettyunits         1.0.2 CRAN CRAN 2015-07-13 04:09:56 Packages
150           haven     2.1.1 CRAN CRAN 2019-07-04 14:50:03 UTC Packages
151         cluster                  2.1.0 CRAN CRAN 2019-06-07 Packages
152              fs     1.3.1 CRAN CRAN 2019-05-06 22:50:03 UTC Packages
153        magrittr           1.5 CRAN CRAN 2014-11-22 19:15:57 Packages
154         pkgload     1.0.2 CRAN CRAN 2018-10-29 20:30:03 UTC Packages
155             hms                  0.5.2 CRAN CRAN 2019-10-30 Packages
156            mime       0.7 CRAN CRAN 2019-06-11 20:10:03 UTC Packages
157        evaluate      0.14 CRAN CRAN 2019-05-28 15:50:02 UTC Packages
158          readxl     1.3.1 CRAN CRAN 2019-03-13 16:30:02 UTC Packages
159        testthat     2.3.0 CRAN CRAN 2019-11-05 22:50:02 UTC Packages
160        compiler                              3.6.1 NA NA NA Packages
161              V8       2.3 CRAN CRAN 2019-07-02 10:51:07 UTC Packages
162          crayon     1.3.4 CRAN CRAN 2017-09-16 19:49:46 UTC Packages
163           later     1.0.0 CRAN CRAN 2019-10-04 05:00:02 UTC Packages
164             DBI                  1.0.0 CRAN CRAN 2018-05-02 Packages
165         formatR       1.7 CRAN CRAN 2019-06-11 20:00:03 UTC Packages
166            MASS               7.3-51.4 CRAN CRAN 2019-03-31 Packages
167          Matrix                 1.2-17 CRAN CRAN 2019-03-11 Packages
168             cli     1.1.0 CRAN CRAN 2019-03-19 10:43:26 UTC Packages
169        quadprog                  1.5-7 CRAN CRAN 2019-05-05 Packages
170       pkgconfig     2.0.3 CRAN CRAN 2019-09-22 09:20:02 UTC Packages
171         foreign                 0.8-71 CRAN CRAN 2018-07-20 Packages
172            xml2     1.2.2 CRAN CRAN 2019-08-09 12:10:03 UTC Packages
173           rvest     0.3.5 CRAN CRAN 2019-11-08 23:10:02 UTC Packages
174           callr     3.3.2 CRAN CRAN 2019-09-22 09:50:02 UTC Packages
175          digest                 0.6.20 CRAN CRAN 2019-07-04 Packages
176      cellranger         1.1.0 CRAN CRAN 2016-07-27 03:17:48 Packages
177         gdtools     0.2.1 CRAN CRAN 2019-10-14 15:30:02 UTC Packages
178   OpenStreetMap     0.3.4 CRAN CRAN 2019-05-31 17:40:02 UTC Packages
179       lifecycle     0.1.0 CRAN CRAN 2019-08-01 12:50:05 UTC Packages
180         mapproj                  1.2.6 CRAN CRAN 2018-03-29 Packages
181            desc     1.2.0 CRAN CRAN 2018-05-01 20:48:05 UTC Packages
182     viridisLite     0.3.0 CRAN CRAN 2018-02-01 22:45:56 UTC Packages
183          pillar     1.4.2 CRAN CRAN 2019-06-29 16:40:03 UTC Packages
184         lattice                0.20-38 CRAN CRAN 2018-11-01 Packages
185         fastmap     1.0.1 CRAN CRAN 2019-10-08 05:20:02 UTC Packages
186        pkgbuild     1.0.6 CRAN CRAN 2019-10-09 14:00:02 UTC Packages
187            glue     1.3.1 CRAN CRAN 2019-03-12 22:30:02 UTC Packages
188         remotes     2.1.0 CRAN CRAN 2019-06-24 21:30:03 UTC Packages
189             zip     2.0.4 CRAN CRAN 2019-09-01 08:50:02 UTC Packages
190             bit                 1.1-14 CRAN CRAN 2018-04-11 Packages
191            blob     1.2.0 CRAN CRAN 2019-07-09 11:40:03 UTC Packages
192    latticeExtra                 0.6-28 CRAN CRAN 2016-01-09 Packages
193         memoise     1.1.0 CRAN CRAN 2017-04-21 05:54:22 UTC Packages
194          kimisc                    0.4 CRAN CRAN 2017-12-17 Packages
[shiny, isTcltk] INFO, directory from where the script is run: S:/Box Sync/AirSensEUR/Fieldtests/Shiny
[Shiny] INFO, setting working directory to S:/Box Sync/AirSensEUR/Fieldtests/Shiny
-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
[Global] INFO, checking presence of necessary files (ASEconfig_xx.R and Functions4ASE.R). Then setting the Working Directory.
[Global] INFO, file S:/Box Sync/AirSensEUR/Fieldtests/Shiny/Functions4ASE.R found and ready to be sourced
-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
[Global] INFO, checking presence of necessary file 151016 Sensor_Toolbox.R.
[Global] INFO, file S:/Box Sync/AirSensEUR/Fieldtests/Shiny/151016 Sensor_Toolbox.R found and ready to be sourced
-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
[Global] AirSensEUR config file found: ASEconfig40458D.R
 [Global] AirSensEUR config file found: ASEconfigAirSensEUR00.R
 [Global] AirSensEUR config file found: ASEconfigAirSensEUR15.R
 [Global] AirSensEUR config file found: ASEconfigATN01.R
 [Global] AirSensEUR config file found: ASEconfigHMS_1.R
 [Global] AirSensEUR config file found: ASEconfigJRC_01.R
 [Global] AirSensEUR config file found: ASEconfigJRC_02.R
 [Global] AirSensEUR config file found: ASEconfigJRC_03.R
 [Global] AirSensEUR config file found: ASEconfigJRC_04.R
 [Global] AirSensEUR config file found: ASEconfigJRC_05.R
 [Global] AirSensEUR config file found: ASEconfigJRC_06.R
 [Global] AirSensEUR config file found: ASEconfigJRC_07.R
 [Global] AirSensEUR config file found: ASEconfigJRC_11.R
 [Global] AirSensEUR config file found: ASEconfigJRC_14.R
 [Global] AirSensEUR config file found: ASEconfigJRC_16.R
 [Global] AirSensEUR config file found: ASEconfigJRC_18.R
 [Global] AirSensEUR config file found: ASEconfigLANUV_01.R
 [Global] AirSensEUR config file found: ASEconfigLANUV02.R
 [Global] AirSensEUR config file found: ASEconfigLANUV03.R
 [Global] AirSensEUR config file found: ASEconfigNILU_P1.R
 [Global] AirSensEUR config file found: ASEconfigNL_01mim_WG42.R
 [Global] AirSensEUR config file found: ASEconfigNL_01min.R
 [Global] AirSensEUR config file found: ASEconfigNL_02min.R
 [Global] AirSensEUR config file found: ASEconfigNL_03min.R
 [Global] AirSensEUR config file found: ASEconfigNL_04min.R
 [Global] AirSensEUR config file found: ASEconfigNL_05min.R
 [Global] AirSensEUR config file found: ASEconfigP2.R
 [Global] AirSensEUR config file found: ASEconfigRIVM08.R
 [Global] AirSensEUR config file found: ASEconfigRIVMas01.R
 [Global] AirSensEUR config file found: ASEconfigRIVMas02.R
 [Global] AirSensEUR config file found: ASEconfigRIVMas03.R
 [Global] AirSensEUR config file found: ASEconfigRIVMas04.R
 [Global] AirSensEUR config file found: ASEconfigRIVMas05.R
 [Global] AirSensEUR config file found: ASEconfigRIVMas05min.R
 [Global] AirSensEUR config file found: ASEconfigRIVMas06.R
 [Global] AirSensEUR config file found: ASEconfigRIVMas07.R
 [Global] AirSensEUR config file found: ASEconfigRIVMas08.R
 [Global] AirSensEUR config file found: ASEconfigRIVMas09.R
 [Global] AirSensEUR config file found: ASEconfigRIVMas10.R
 [Global] AirSensEUR config file found: ASEconfigRIVMas11.R
 [Global] AirSensEUR config file found: ASEconfigRIVMas12.R
-----------------------------------------------------------------------------------
[Global] INFO, sourcing 151016 Sensor_Toolbox.R and Funtions4ASE.R
-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
[Global] INFO, Check or install packages needed to run the script
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
[Global] INFO, package 52North/sensorweb4R already installed
[Global] INFO, Package 52North/sensorweb4R loaded
[Global] INFO, package skgrange/threadr already installed
[Global] INFO, Package skgrange/threadr loaded
[Global] INFO, package daattali/shinyalert already installed
[Global] INFO, Package daattali/shinyalert loaded
[Global] INFO, List of installed packages
  [1] .GlobalEnv              package:shinyalert      package:threadr         package:sensorweb4R     package:kableExtra      package:captioner       package:pander          package:flextable       package:formattable    
 [10] package:weathermetrics  package:caTools         package:doParallel      package:parallel        package:iterators       package:foreach         package:RcppRoll        package:rgeos           package:raster         
 [19] package:maptools        package:plotly          package:GGally          package:berryFunctions  package:OSMscale        package:webshot         package:htmlwidgets     package:htmltools       package:dygraphs       
 [28] package:leaflet         package:knitr           package:xtable          package:rmarkdown       package:R.utils         package:R.oo            package:R.methodsS3     package:tools           package:shape          
 [37] package:fields          package:maps            package:spam            package:grid            package:dotCall64       package:rlist           package:BMS             package:data.table      package:polynom        
 [46] package:corrplot        package:mgcv            package:nlme            package:sqldf           package:gsubfn          package:proto           package:RSQLite         package:RODBC           package:jsonlite       
 [55] package:XML             package:RJSONIO         package:reshape         package:quantreg        package:SparseM         package:minpack.lm      package:limSolve        package:devtools        package:usethis        
 [64] package:backports       package:colorspace      package:sp              package:processx        package:httr            package:RCurl           package:bitops          package:curl            package:geosphere      
 [73] package:futile.logger   package:lambda.r        package:futile.options  package:xts             package:zoo             package:lubridate       package:openair         package:dbplyr          package:broom          
 [82] package:forcats         package:stringr         package:dplyr           package:purrr           package:readr           package:tidyr           package:tibble          package:ggplot2         package:tidyverse      
 [91] package:plyr            package:stringi         package:rhandsontable   package:DT              package:shinyWidgets    package:shinycssloaders package:shinyBS         package:shinythemes     package:shinyjs        
[100] package:envDocument     package:shiny           tools:rstudio           package:stats           package:graphics        package:grDevices       package:utils           package:datasets        package:methods        
[109] Autoloads               package:base           

Called from: eval(expr, p)
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#649: ASE_name <- reactive({
    cc <- basename(input$Selected)
    for (i in c("\\.[[:alnum:]]+$", "ASEconfig")) cc <- sub(pattern = i, 
        replacement = "", basename(as.character(cc)))
    return(cc)
})
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#655: {
    .doTrace(browser())
    ASE_name.List <- reactive({
        cc <- basename(input$Config_Files)
        for (i in c("\\.[[:alnum:]]+$", "ASEconfig")) cc <- sub(pattern = i, 
            replacement = "", basename(as.character(cc)))
        return(cc)
    })
}
Called from: eval(expr, p)
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#655: ASE_name.List <- reactive({
    cc <- basename(input$Config_Files)
    for (i in c("\\.[[:alnum:]]+$", "ASEconfig")) cc <- sub(pattern = i, 
        replacement = "", basename(as.character(cc)))
    return(cc)
})
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#662: DisqueFieldtestDir <- reactive({
    return(file.path(DirShiny, ASE_name()))
})
Called from: eval(expr, p)
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#2474: input$Save
Called from: eval(expr, p)
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#656: cc <- basename(input$Config_Files)
[1] "S:/Box Sync/AirSensEUR/Fieldtests/Shiny/ASE_Stations/40458D"
[1] "40458D"
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#657: for (i in c("\\.[[:alnum:]]+$", "ASEconfig")) cc <- sub(pattern = i, 
    replacement = "", basename(as.character(cc)))
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#657: cc <- sub(pattern = i, replacement = "", basename(as.character(cc)))
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#657: cc <- sub(pattern = i, replacement = "", basename(as.character(cc)))
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#658: return(cc)
[1] "40458D"
Called from: eval(expr, p)
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#650: cc <- basename(input$Selected)
[1] "S:/Box Sync/AirSensEUR/Fieldtests/Shiny"
-----------------------------------------------------------------------------------
[shiny] INFO, the OS platform is : windows
[shiny, isTcltk] INFO, ASE_Script is run under Rstudio
[shiny] INFO, internet is available
-----------------------------------------------------------------------------------
[Shiny] INFO, setting working directory
               Name                                       Value  Section
1           sysname                                     Windows   System
2           release                                     8.1 x64   System
3           version                                  build 9600   System
4          nodename                                D01RI1501926   System
5           machine                                      x86-64   System
6             login                                     gerbomi   System
7              user                                     gerbomi   System
8    effective_user                                     gerbomi   System
9         Directory     S:/Box Sync/AirSensEUR/Fieldtests/Shiny   System
10          Version                R version 3.6.1 (2019-07-05)        R
11       shinyalert                         1.0.0.9004 NA NA NA Packages
12          threadr                    0.8.665 NA NA 2019-02-26 Packages
13      sensorweb4R                                0.1 NA NA NA Packages
14       kableExtra     1.1.0 CRAN CRAN 2019-03-16 20:10:03 UTC Packages
15        captioner                  2.2.3 CRAN CRAN 2015-07-15 Packages
16           pander                  0.6.3 CRAN CRAN 2018-11-06 Packages
17        flextable     0.5.5 CRAN CRAN 2019-06-25 09:20:03 UTC Packages
18      formattable                0.2.0.1 CRAN CRAN 2016-08-05 Packages
19   weathermetrics                  1.2.2 CRAN CRAN 2016-05-19 Packages
20          caTools               1.17.1.2 CRAN CRAN 2014-04-21 Packages
21       doParallel    1.0.15 CRAN CRAN 2019-08-02 04:40:02 UTC Packages
22        iterators    1.0.12 CRAN CRAN 2019-07-26 22:50:02 UTC Packages
23          foreach     1.4.7 CRAN CRAN 2019-07-27 23:00:35 UTC Packages
24         RcppRoll                  0.3.0 CRAN CRAN 2018-06-05 Packages
25            rgeos                  0.5-2 CRAN CRAN 2019-10-02 Packages
26           raster                  3.0-7 CRAN CRAN 2019-09-22 Packages
27         maptools                  0.9-8 CRAN CRAN 2019-10-03 Packages
28           plotly     4.9.1 CRAN CRAN 2019-11-07 19:00:02 UTC Packages
29           GGally     1.4.0 CRAN CRAN 2018-05-17 23:31:19 UTC Packages
30   berryFunctions                 1.18.2 CRAN CRAN 2019-04-29 Packages
31         OSMscale                  0.5.1 CRAN CRAN 2017-04-12 Packages
32          webshot     0.5.1 CRAN CRAN 2018-09-28 21:40:02 UTC Packages
33      htmlwidgets     1.5.1 CRAN CRAN 2019-10-08 08:40:02 UTC Packages
34        htmltools     0.4.0 CRAN CRAN 2019-10-04 23:00:08 UTC Packages
35         dygraphs   1.1.1.6 CRAN CRAN 2018-07-11 22:00:03 UTC Packages
36          leaflet     2.0.2 CRAN CRAN 2018-08-27 14:12:16 UTC Packages
37            knitr      1.25 CRAN CRAN 2019-09-18 09:10:07 UTC Packages
38           xtable                  1.8-4 CRAN CRAN 2019-04-08 Packages
39        rmarkdown      1.16 CRAN CRAN 2019-10-01 19:10:09 UTC Packages
40          R.utils     2.9.0 CRAN CRAN 2019-06-13 07:30:24 UTC Packages
41             R.oo    1.23.0 CRAN CRAN 2019-11-03 08:40:02 UTC Packages
42      R.methodsS3                  1.7.1 CRAN CRAN 2016-02-15 Packages
43            shape     1.4.4 CRAN CRAN 2018-02-07 16:21:49 UTC Packages
44           fields                    9.9 CRAN CRAN 2019-10-05 Packages
45             maps                  3.3.0 CRAN CRAN 2018-04-03 Packages
46             spam                  2.4-0 CRAN CRAN 2019-11-01 Packages
47        dotCall64                  1.0-0 CRAN CRAN 2018-07-30 Packages
48            rlist                0.4.6.1 CRAN CRAN 2016-04-04 Packages
49              BMS                  0.3.4 CRAN CRAN 2015-11-23 Packages
50       data.table    1.12.6 CRAN CRAN 2019-10-18 22:20:10 UTC Packages
51          polynom     1.4-0 CRAN CRAN 2019-03-22 09:50:06 UTC Packages
52         corrplot                   0.84 CRAN CRAN 2017-10-16 Packages
53             mgcv    1.8-28 CRAN CRAN 2019-03-21 11:40:07 UTC Packages
54             nlme                 3.1-140 CRAN CRAN 2019-05-1 Packages
55            sqldf                 0.4-11 CRAN CRAN 2017-06-23 Packages
56           gsubfn                    0.7 CRAN CRAN 2018-03-15 Packages
57            proto         1.0.0 CRAN CRAN 2016-10-29 00:23:07 Packages
58          RSQLite                  2.1.2 CRAN CRAN 2019-07-23 Packages
59            RODBC                 1.3-16 CRAN CRAN 2019-09-02 Packages
60         jsonlite       1.6 CRAN CRAN 2018-12-07 12:50:02 UTC Packages
61              XML 3.98-1.20 CRAN CRAN 2019-06-06 06:23:32 UTC Packages
62          RJSONIO   1.3-1.3 CRAN CRAN 2019-10-03 15:27:15 UTC Packages
63          reshape     0.8.8 CRAN CRAN 2018-10-23 18:50:03 UTC Packages
64         quantreg      5.51 CRAN CRAN 2019-08-07 17:10:02 UTC Packages
65          SparseM      1.77 CRAN CRAN 2017-04-23 18:26:30 UTC Packages
66       minpack.lm         1.2-1 CRAN CRAN 2016-11-20 16:40:02 Packages
67         limSolve   1.5.5.3 CRAN CRAN 2017-08-14 15:14:43 UTC Packages
68         devtools     2.2.1 CRAN CRAN 2019-09-24 15:00:02 UTC Packages
69          usethis     1.5.1 CRAN CRAN 2019-07-04 11:00:05 UTC Packages
70        backports     1.1.5 CRAN CRAN 2019-10-02 20:20:02 UTC Packages
71       colorspace                  1.4-1 CRAN CRAN 2019-03-18 Packages
72               sp     1.3-1 CRAN CRAN 2018-06-05 13:58:03 UTC Packages
73         processx     3.4.1 CRAN CRAN 2019-07-18 06:35:54 UTC Packages
74             httr     1.4.1 CRAN CRAN 2019-08-05 14:30:02 UTC Packages
75            RCurl 1.95-4.12 CRAN CRAN 2019-03-04 09:45:33 UTC Packages
76           bitops                  1.0-6 CRAN CRAN 2013-08-17 Packages
77             curl       4.2 CRAN CRAN 2019-09-24 12:20:02 UTC Packages
78        geosphere                 1.5-10 CRAN CRAN 2019-05-25 Packages
79    futile.logger                  1.4.3 CRAN CRAN 2016-07-10 Packages
80         lambda.r                  1.2.4 CRAN CRAN 2019-09-15 Packages
81   futile.options                  1.0.1 CRAN CRAN 2018-04-20 Packages
82              xts    0.11-2 CRAN CRAN 2018-11-05 14:10:03 UTC Packages
83              zoo                  1.8-6 CRAN CRAN 2019-05-27 Packages
84        lubridate     1.7.4 CRAN CRAN 2018-04-11 10:08:43 UTC Packages
85          openair                  2.6-6 CRAN CRAN 2019-09-23 Packages
86           dbplyr     1.4.2 CRAN CRAN 2019-06-17 20:00:04 UTC Packages
87            broom     0.5.2 CRAN CRAN 2019-04-07 19:52:53 UTC Packages
88          forcats     0.4.0 CRAN CRAN 2019-02-17 14:40:02 UTC Packages
89          stringr     1.4.0 CRAN CRAN 2019-02-10 03:40:03 UTC Packages
90            dplyr     0.8.3 CRAN CRAN 2019-07-04 15:50:02 UTC Packages
91            purrr     0.3.3 CRAN CRAN 2019-10-18 12:40:05 UTC Packages
92            readr     1.3.1 CRAN CRAN 2018-12-21 09:40:02 UTC Packages
93            tidyr     1.0.0 CRAN CRAN 2019-09-11 23:00:03 UTC Packages
94           tibble     2.1.3 CRAN CRAN 2019-06-06 13:40:03 UTC Packages
95          ggplot2     3.2.1 CRAN CRAN 2019-08-10 22:30:13 UTC Packages
96        tidyverse     1.2.1 CRAN CRAN 2017-11-14 18:09:56 UTC Packages
97             plyr         1.8.4 CRAN CRAN 2016-06-08 10:40:15 Packages
98          stringi                  1.4.3 CRAN CRAN 2019-03-12 Packages
99    rhandsontable     0.3.7 CRAN CRAN 2018-11-20 05:50:03 UTC Packages
100              DT       0.9 CRAN CRAN 2019-09-17 09:10:10 UTC Packages
101    shinyWidgets     0.4.9 CRAN CRAN 2019-09-10 16:40:05 UTC Packages
102 shinycssloaders                  0.2.0 CRAN CRAN 2017-05-03 Packages
103         shinyBS                   0.61 CRAN CRAN 2015-03-30 Packages
104     shinythemes     1.1.2 CRAN CRAN 2018-11-06 17:00:03 UTC Packages
105         shinyjs       1.0 CRAN CRAN 2018-01-08 22:21:13 UTC Packages
106     envDocument                  2.4.1 CRAN CRAN 2019-08-08 Packages
107           shiny     1.4.0 CRAN CRAN 2019-10-10 12:50:02 UTC Packages
108      tidyselect     0.2.5 CRAN CRAN 2018-10-11 13:00:03 UTC Packages
109         lpSolve               5.6.13.3 CRAN CRAN 2015-09-18 Packages
110         munsell     0.5.0 CRAN CRAN 2018-06-12 04:29:06 UTC Packages
111       codetools    0.2-16 CRAN CRAN 2018-12-24 12:40:05 UTC Packages
112           chron    2.3-54 CRAN CRAN 2019-08-26 06:58:12 UTC Packages
113           withr     2.1.2 CRAN CRAN 2018-03-15 22:39:56 UTC Packages
114            uuid         0.1-2 CRAN CRAN 2015-07-28 08:03:46 Packages
115      rstudioapi      0.10 CRAN CRAN 2019-03-19 20:30:03 UTC Packages
116         officer     0.3.5 CRAN CRAN 2019-06-23 18:50:03 UTC Packages
117           rJava    0.9-11 CRAN CRAN 2019-03-29 06:53:31 UTC Packages
118           bit64                  0.9-7 CRAN CRAN 2017-05-07 Packages
119       rprojroot     1.3-2 CRAN CRAN 2018-01-03 15:36:24 UTC Packages
120           vctrs     0.2.0 CRAN CRAN 2019-07-05 23:00:04 UTC Packages
121        generics     0.0.2 CRAN CRAN 2018-11-29 13:20:03 UTC Packages
122            xfun      0.10 CRAN CRAN 2019-10-01 18:20:02 UTC Packages
123              R6     2.4.0 CRAN CRAN 2019-02-14 19:42:14 UTC Packages
124        markdown       1.1 CRAN CRAN 2019-08-07 16:30:02 UTC Packages
125      assertthat     0.2.1 CRAN CRAN 2019-03-21 14:53:46 UTC Packages
126        promises     1.1.0 CRAN CRAN 2019-10-04 23:00:05 UTC Packages
127          scales     1.0.0 CRAN CRAN 2018-08-09 10:10:03 UTC Packages
128          gtable     0.3.0 CRAN CRAN 2019-03-25 19:50:02 UTC Packages
129           rlang     0.4.1 CRAN CRAN 2019-10-24 09:20:03 UTC Packages
130    MatrixModels                  0.4-1 CRAN CRAN 2015-08-22 Packages
131         zeallot     0.1.0 CRAN CRAN 2018-01-28 16:14:13 UTC Packages
132     systemfonts     0.1.1 CRAN CRAN 2019-07-01 12:50:02 UTC Packages
133         splines                              3.6.1 NA NA NA Packages
134           rgdal                  1.4-7 CRAN CRAN 2019-10-25 Packages
135        lazyeval     0.2.2 CRAN CRAN 2019-03-15 17:50:07 UTC Packages
136          hexbin    1.27.3 CRAN CRAN 2019-05-14 14:50:03 UTC Packages
137            yaml                  2.2.0 CRAN CRAN 2018-07-20 Packages
138           abind                  1.4-5 CRAN CRAN 2016-06-19 Packages
139          modelr     0.1.5 CRAN CRAN 2019-08-08 14:20:02 UTC Packages
140       crosstalk         1.0.0 CRAN CRAN 2016-12-21 08:30:32 Packages
141          httpuv     1.5.2 CRAN CRAN 2019-09-11 05:40:02 UTC Packages
142           tcltk                              3.6.1 NA NA NA Packages
143        ellipsis     0.3.0 CRAN CRAN 2019-09-20 20:40:02 UTC Packages
144    RColorBrewer                  1.1-2 CRAN CRAN 2014-12-07 Packages
145     sessioninfo     1.1.1 CRAN CRAN 2018-11-05 17:20:02 UTC Packages
146            Rcpp                  1.0.1 CRAN CRAN 2019-03-16 Packages
147       base64enc         0.1-3 CRAN CRAN 2015-07-28 08:03:37 Packages
148              ps     1.3.0 CRAN CRAN 2018-12-21 14:50:03 UTC Packages
149     prettyunits         1.0.2 CRAN CRAN 2015-07-13 04:09:56 Packages
150           haven     2.1.1 CRAN CRAN 2019-07-04 14:50:03 UTC Packages
151         cluster                  2.1.0 CRAN CRAN 2019-06-07 Packages
152              fs     1.3.1 CRAN CRAN 2019-05-06 22:50:03 UTC Packages
153        magrittr           1.5 CRAN CRAN 2014-11-22 19:15:57 Packages
154         pkgload     1.0.2 CRAN CRAN 2018-10-29 20:30:03 UTC Packages
155             hms                  0.5.2 CRAN CRAN 2019-10-30 Packages
156            mime       0.7 CRAN CRAN 2019-06-11 20:10:03 UTC Packages
157        evaluate      0.14 CRAN CRAN 2019-05-28 15:50:02 UTC Packages
158          readxl     1.3.1 CRAN CRAN 2019-03-13 16:30:02 UTC Packages
159        testthat     2.3.0 CRAN CRAN 2019-11-05 22:50:02 UTC Packages
160        compiler                              3.6.1 NA NA NA Packages
161              V8       2.3 CRAN CRAN 2019-07-02 10:51:07 UTC Packages
162          crayon     1.3.4 CRAN CRAN 2017-09-16 19:49:46 UTC Packages
163           later     1.0.0 CRAN CRAN 2019-10-04 05:00:02 UTC Packages
164             DBI                  1.0.0 CRAN CRAN 2018-05-02 Packages
165         formatR       1.7 CRAN CRAN 2019-06-11 20:00:03 UTC Packages
166            MASS               7.3-51.4 CRAN CRAN 2019-03-31 Packages
167          Matrix                 1.2-17 CRAN CRAN 2019-03-11 Packages
168             cli     1.1.0 CRAN CRAN 2019-03-19 10:43:26 UTC Packages
169        quadprog                  1.5-7 CRAN CRAN 2019-05-05 Packages
170       pkgconfig     2.0.3 CRAN CRAN 2019-09-22 09:20:02 UTC Packages
171         foreign                 0.8-71 CRAN CRAN 2018-07-20 Packages
172            xml2     1.2.2 CRAN CRAN 2019-08-09 12:10:03 UTC Packages
173           rvest     0.3.5 CRAN CRAN 2019-11-08 23:10:02 UTC Packages
174           callr     3.3.2 CRAN CRAN 2019-09-22 09:50:02 UTC Packages
175          digest                 0.6.20 CRAN CRAN 2019-07-04 Packages
176      cellranger         1.1.0 CRAN CRAN 2016-07-27 03:17:48 Packages
177         gdtools     0.2.1 CRAN CRAN 2019-10-14 15:30:02 UTC Packages
178   OpenStreetMap     0.3.4 CRAN CRAN 2019-05-31 17:40:02 UTC Packages
179       lifecycle     0.1.0 CRAN CRAN 2019-08-01 12:50:05 UTC Packages
180         mapproj                  1.2.6 CRAN CRAN 2018-03-29 Packages
181            desc     1.2.0 CRAN CRAN 2018-05-01 20:48:05 UTC Packages
182     viridisLite     0.3.0 CRAN CRAN 2018-02-01 22:45:56 UTC Packages
183          pillar     1.4.2 CRAN CRAN 2019-06-29 16:40:03 UTC Packages
184         lattice                0.20-38 CRAN CRAN 2018-11-01 Packages
185         fastmap     1.0.1 CRAN CRAN 2019-10-08 05:20:02 UTC Packages
186        pkgbuild     1.0.6 CRAN CRAN 2019-10-09 14:00:02 UTC Packages
187            glue     1.3.1 CRAN CRAN 2019-03-12 22:30:02 UTC Packages
188         remotes     2.1.0 CRAN CRAN 2019-06-24 21:30:03 UTC Packages
189             zip     2.0.4 CRAN CRAN 2019-09-01 08:50:02 UTC Packages
190             bit                 1.1-14 CRAN CRAN 2018-04-11 Packages
191            blob     1.2.0 CRAN CRAN 2019-07-09 11:40:03 UTC Packages
192    latticeExtra                 0.6-28 CRAN CRAN 2016-01-09 Packages
193         memoise     1.1.0 CRAN CRAN 2017-04-21 05:54:22 UTC Packages
194          kimisc                    0.4 CRAN CRAN 2017-12-17 Packages
[shiny, isTcltk] INFO, directory from where the script is run: S:/Box Sync/AirSensEUR/Fieldtests/Shiny
[Shiny] INFO, setting working directory to S:/Box Sync/AirSensEUR/Fieldtests/Shiny
-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
[Global] INFO, checking presence of necessary files (ASEconfig_xx.R and Functions4ASE.R). Then setting the Working Directory.
[Global] INFO, file S:/Box Sync/AirSensEUR/Fieldtests/Shiny/Functions4ASE.R found and ready to be sourced
-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
[Global] INFO, checking presence of necessary file 151016 Sensor_Toolbox.R.
[Global] INFO, file S:/Box Sync/AirSensEUR/Fieldtests/Shiny/151016 Sensor_Toolbox.R found and ready to be sourced
-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
[Global] AirSensEUR config file found: ASEconfig40458D.R
 [Global] AirSensEUR config file found: ASEconfigAirSensEUR00.R
 [Global] AirSensEUR config file found: ASEconfigAirSensEUR15.R
 [Global] AirSensEUR config file found: ASEconfigATN01.R
 [Global] AirSensEUR config file found: ASEconfigHMS_1.R
 [Global] AirSensEUR config file found: ASEconfigJRC_01.R
 [Global] AirSensEUR config file found: ASEconfigJRC_02.R
 [Global] AirSensEUR config file found: ASEconfigJRC_03.R
 [Global] AirSensEUR config file found: ASEconfigJRC_04.R
 [Global] AirSensEUR config file found: ASEconfigJRC_05.R
 [Global] AirSensEUR config file found: ASEconfigJRC_06.R
 [Global] AirSensEUR config file found: ASEconfigJRC_07.R
 [Global] AirSensEUR config file found: ASEconfigJRC_11.R
 [Global] AirSensEUR config file found: ASEconfigJRC_14.R
 [Global] AirSensEUR config file found: ASEconfigJRC_16.R
 [Global] AirSensEUR config file found: ASEconfigJRC_18.R
 [Global] AirSensEUR config file found: ASEconfigLANUV_01.R
 [Global] AirSensEUR config file found: ASEconfigLANUV02.R
 [Global] AirSensEUR config file found: ASEconfigLANUV03.R
 [Global] AirSensEUR config file found: ASEconfigNILU_P1.R
 [Global] AirSensEUR config file found: ASEconfigNL_01mim_WG42.R
 [Global] AirSensEUR config file found: ASEconfigNL_01min.R
 [Global] AirSensEUR config file found: ASEconfigNL_02min.R
 [Global] AirSensEUR config file found: ASEconfigNL_03min.R
 [Global] AirSensEUR config file found: ASEconfigNL_04min.R
 [Global] AirSensEUR config file found: ASEconfigNL_05min.R
 [Global] AirSensEUR config file found: ASEconfigP2.R
 [Global] AirSensEUR config file found: ASEconfigRIVM08.R
 [Global] AirSensEUR config file found: ASEconfigRIVMas01.R
 [Global] AirSensEUR config file found: ASEconfigRIVMas02.R
 [Global] AirSensEUR config file found: ASEconfigRIVMas03.R
 [Global] AirSensEUR config file found: ASEconfigRIVMas04.R
 [Global] AirSensEUR config file found: ASEconfigRIVMas05.R
 [Global] AirSensEUR config file found: ASEconfigRIVMas05min.R
 [Global] AirSensEUR config file found: ASEconfigRIVMas06.R
 [Global] AirSensEUR config file found: ASEconfigRIVMas07.R
 [Global] AirSensEUR config file found: ASEconfigRIVMas08.R
 [Global] AirSensEUR config file found: ASEconfigRIVMas09.R
 [Global] AirSensEUR config file found: ASEconfigRIVMas10.R
 [Global] AirSensEUR config file found: ASEconfigRIVMas11.R
 [Global] AirSensEUR config file found: ASEconfigRIVMas12.R
-----------------------------------------------------------------------------------
[Global] INFO, sourcing 151016 Sensor_Toolbox.R and Funtions4ASE.R
-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
[Global] INFO, Check or install packages needed to run the script
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
[Global] INFO, package 52North/sensorweb4R already installed
[Global] INFO, Package 52North/sensorweb4R loaded
[Global] INFO, package skgrange/threadr already installed
[Global] INFO, Package skgrange/threadr loaded
[Global] INFO, package daattali/shinyalert already installed
[Global] INFO, Package daattali/shinyalert loaded
[Global] INFO, List of installed packages
  [1] .GlobalEnv              package:shinyalert      package:threadr         package:sensorweb4R     package:kableExtra      package:captioner       package:pander          package:flextable       package:formattable    
 [10] package:weathermetrics  package:caTools         package:doParallel      package:parallel        package:iterators       package:foreach         package:RcppRoll        package:rgeos           package:raster         
 [19] package:maptools        package:plotly          package:GGally          package:berryFunctions  package:OSMscale        package:webshot         package:htmlwidgets     package:htmltools       package:dygraphs       
 [28] package:leaflet         package:knitr           package:xtable          package:rmarkdown       package:R.utils         package:R.oo            package:R.methodsS3     package:tools           package:shape          
 [37] package:fields          package:maps            package:spam            package:grid            package:dotCall64       package:rlist           package:BMS             package:data.table      package:polynom        
 [46] package:corrplot        package:mgcv            package:nlme            package:sqldf           package:gsubfn          package:proto           package:RSQLite         package:RODBC           package:jsonlite       
 [55] package:XML             package:RJSONIO         package:reshape         package:quantreg        package:SparseM         package:minpack.lm      package:limSolve        package:devtools        package:usethis        
 [64] package:backports       package:colorspace      package:sp              package:processx        package:httr            package:RCurl           package:bitops          package:curl            package:geosphere      
 [73] package:futile.logger   package:lambda.r        package:futile.options  package:xts             package:zoo             package:lubridate       package:openair         package:dbplyr          package:broom          
 [82] package:forcats         package:stringr         package:dplyr           package:purrr           package:readr           package:tidyr           package:tibble          package:ggplot2         package:tidyverse      
 [91] package:plyr            package:stringi         package:rhandsontable   package:DT              package:shinyWidgets    package:shinycssloaders package:shinyBS         package:shinythemes     package:shinyjs        
[100] package:envDocument     package:shiny           tools:rstudio           package:stats           package:graphics        package:grDevices       package:utils           package:datasets        package:methods        
[109] Autoloads               package:base           

Called from: eval(expr, p)
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#649: ASE_name <- reactive({
    cc <- basename(input$Selected)
    for (i in c("\\.[[:alnum:]]+$", "ASEconfig")) cc <- sub(pattern = i, 
        replacement = "", basename(as.character(cc)))
    return(cc)
})
Called from: eval(expr, p)
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#655: ASE_name.List <- reactive({
    cc <- basename(input$Config_Files)
    for (i in c("\\.[[:alnum:]]+$", "ASEconfig")) cc <- sub(pattern = i, 
        replacement = "", basename(as.character(cc)))
    return(cc)
})
Called from: eval(expr, p)
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#2474: input$Save
Called from: eval(expr, p)
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#656: cc <- basename(input$Config_Files)
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#657: for (i in c("\\.[[:alnum:]]+$", "ASEconfig")) cc <- sub(pattern = i, 
    replacement = "", basename(as.character(cc)))
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#657: cc <- sub(pattern = i, replacement = "", basename(as.character(cc)))
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#657: cc <- sub(pattern = i, replacement = "", basename(as.character(cc)))
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#658: return(cc)
[1] "40458D"
[1] "S:/Box Sync/AirSensEUR/Fieldtests/Shiny/ASE_Stations/40458D/General_data/40458D.cfg"
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#2476: progress <- shiny::Progress$new()
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#2478: on.exit(progress$close())
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#2479: progress$set(message = "Reading Server File", value = 0.5)
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#2480: if (file.exists(cfg_file.List())) {
    Servers_file <- fread(file = Servers_file.List(), header = TRUE)
    Servers_file <- Servers_file[-which(Servers_file$PROXY %in% 
        c("PASSWORD", "Pass", "Pass__a_i_p__"))]
    Servers_file[na.omit(match(c("UserMins", "UserMinsAvg", "Delay", 
        "PROXY", "URL", "PORT", "LOGIN", "Down.Influx", "Host", 
        "Port", "User", "Db", "Dataset", "Influx.TZ", "Down.SOS", 
        "AirsensWeb", "AirSensEur.name", "SOS.TZ", "Down.Ref", 
        "FTPMode", "urlref", "Reference.name", "RefSOSname", 
        "Ref.SOS.name", "RefPollutants", "RefDateDownload", "Ref__a_i_p__name", 
        "User__a_i_p__", "Ref__a_i_p__Organisation", "Ref__a_i_p__Station", 
        "Ref__a_i_p__Pollutants", "Ref__a_i_p__Date", "coord.ref", 
        "alt.ref", "ref.tzone", "asc.File"), Servers_file[[1]]))]
}
[1] "S:/Box Sync/AirSensEUR/Fieldtests/Shiny/ASE_Stations/40458D/General_data/40458D.cfg"
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#2481: Servers_file <- fread(file = Servers_file.List(), header = TRUE)
[1] "S:/Box Sync/AirSensEUR/Fieldtests/Shiny/ASE_Stations/40458D/General_data/40458D_Servers.cfg"
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#2483: Servers_file <- Servers_file[-which(Servers_file$PROXY %in% c("PASSWORD", 
    "Pass", "Pass__a_i_p__"))]
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#2484: Servers_file[na.omit(match(c("UserMins", "UserMinsAvg", "Delay", 
    "PROXY", "URL", "PORT", "LOGIN", "Down.Influx", "Host", "Port", 
    "User", "Db", "Dataset", "Influx.TZ", "Down.SOS", "AirsensWeb", 
    "AirSensEur.name", "SOS.TZ", "Down.Ref", "FTPMode", "urlref", 
    "Reference.name", "RefSOSname", "Ref.SOS.name", "RefPollutants", 
    "RefDateDownload", "Ref__a_i_p__name", "User__a_i_p__", "Ref__a_i_p__Organisation", 
    "Ref__a_i_p__Station", "Ref__a_i_p__Pollutants", "Ref__a_i_p__Date", 
    "coord.ref", "alt.ref", "ref.tzone", "asc.File"), Servers_file[[1]]))]
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#2494: progress$set(message = "Reading Server File", value = 1)
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#2495: return(Servers_file)
                       PROXY
 1:                      URL
 2:                     PORT
 3:                    LOGIN
 4:              Down.Influx
 5:                     Host
 6:                     Port
 7:                     User
 8:                       Db
 9:                  Dataset
10:                Influx.TZ
11:                 Down.SOS
12:               AirsensWeb
13:          AirSensEur.name
14:                   SOS.TZ
15:                 Down.Ref
16:                  FTPMode
17:                   urlref
18:           Reference.name
19:               RefSOSname
20:             Ref.SOS.name
21:            RefPollutants
22:             RefDateStart
23:               RefDateEnd
24:         Ref__a_i_p__name
25:            User__a_i_p__
26: Ref__a_i_p__Organisation
27:      Ref__a_i_p__Station
28:   Ref__a_i_p__Pollutants
29:         Ref.a_i_p.DateIN
30:        Ref.a_i_p.DateEND
31:                coord.ref
32:                  alt.ref
33:                ref.tzone
34:                 asc.File
35:                 UserMins
36:              UserMinsAvg
37:                    Delay
                       PROXY
                                                                                                                                                                                                                         FALSE
 1:                                                                                                                                                                                                              10.168.209.72
 2:                                                                                                                                                                                                                       8012
 3:                                                                                                                                                                                                                           
 4:                                                                                                                                                                                                                      FALSE
 5:                                                                                                                                                                                               influxdb1.liberaintentio.com
 6:                                                                                                                                                                                                                       8086
 7:                                                                                                                                                                                                                shinyreader
 8:                                                                                                                                                                                                                   jrcispra
 9:                                                                                                                                                                                                               AirSensEUR16
10:                                                                                                                                                                                                                        UTC
11:                                                                                                                                                                                                                      FALSE
12:                                                                                                                                                                                                                           
13:                                                                                                                                                                                                                     JRC_16
14:                                                                                                                                                                                                                        UTC
15:                                                                                                                                                                                                                      FALSE
16:                                                                                                                                                                                                                      a_i_p
17:                                                                                                                                                                                                                           
18:                                                                                                                                                                                                     Reference_EMEP_station
19:                                                                                                                                                                                                                           
20:                                                                                                                                                                                                                           
21:                                                                                                                                                                                                                           
22:                                                                                                                                                                                                                           
23:                                                                                                                                                                                                                           
24:                                                                                                                                                                     https://ubis-air.a-i-p.com/UidepService/values/simple?
25:                                                                                                                                                                                                                    datareq
26:                                                                                                                                                                                                                      ABCIS
27:                                                                                                                                                                                                                  JRC+Ispra
28: manifold flow!Sample_air temperature!temperature cpu!ozone!carbon monoxide!nitrogen oxides!nitrogen dioxide caps!nitrogen dioxide!sulfur dioxide!nitrogen monoxide!carbon monoxide parallel!temperature caps!pressure caps
29:                                                                                                                                                                                                                 2019-12-12
30:                                                                                                                                                                                                                 2019-12-12
31:                                                                                                                                                                                                           8.63580, 45.8146
32:                                                                                                                                                                                                                      209 m
33:                                                                                                                                                                                                                        UTC
34:                                                                                                                                                                   170604 ASE_R24 NO2B43F_COA4_OXA431_NOB4_Training2017.asc
35:                                                                                                                                                                                                                          1
36:                                                                                                                                                                                                                         60
37:                                                                                                                                                                                                                          1
                                                                                                                                                                                                                         FALSE
Called from: eval(expr, p)
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#834: progress$set(message = "[Shiny] INFO, Loading config file", value = 0.1)
Called from: eval(expr, p)
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#650: cc <- basename(input$Selected)
[1] "S:/Box Sync/AirSensEUR/Fieldtests/Shiny/ASE_Stations/40458D"
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#651: for (i in c("\\.[[:alnum:]]+$", "ASEconfig")) cc <- sub(pattern = i, 
    replacement = "", basename(as.character(cc)))
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#651: cc <- sub(pattern = i, replacement = "", basename(as.character(cc)))
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#651: cc <- sub(pattern = i, replacement = "", basename(as.character(cc)))
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#652: return(cc)
[1] "40458D"
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#835: Config <<- reactiveValues(all = CONFIG(DirShiny, input$Config_Files))
[1] "S:/Box Sync/AirSensEUR/Fieldtests/Shiny/ASE_Stations/40458D"
debugging in: CONFIG(DirShiny, input$Config_Files)
debug at S:/Box Sync/AirSensEUR/Fieldtests/Shiny/Functions4ASE.R#3876: {
    cat("-----------------------------------------------------------------------------------\n")
    ASE_name <- basename(ASEconfig)
    for (i in c("\\.[[:alnum:]]+$", "ASEconfig")) ASE_name <- sub(pattern = i, 
        replacement = "", basename(as.character(ASE_name)))
    DisqueFieldtestDir <- file.path(DisqueFieldtest, ASE_name)
    File_Server_cfg <- list.files(path = file.path(DisqueFieldtestDir, 
        "General_data"), pattern = paste0(ASE_name, "_Servers.cfg"))
    if (!identical(File_Server_cfg, character(0))) {
        File_Server_cfg <- file.path(DisqueFieldtestDir, "General_data", 
            paste0(ASE_name, "_Servers.cfg"))
        if (file.exists(File_Server_cfg)) {
            cfg <- transpose(fread(file = File_Server_cfg, header = FALSE, 
                na.strings = c("", "NA", "<NA>")), fill = NA, 
                make.names = 1)
            cat(paste0("[CONFIG] Info, the config file ", File_Server_cfg, 
                " for the configuration of servers exists"), 
                sep = "\n")
            if ("AirsensEur.name" %in% names(cfg)) 
                names(cfg)[which(names(cfg) == "AirsensEur.name")] <- "AirSensEur.name"
            if (!"UserMinsAvg" %in% names(cfg)) 
                cfg$UserMinsAvg <- cfg$UserMins
            Vector.type <- c("PROXY", "Down.Influx", "Down.SOS", 
                "Down.Ref")
            Vector.type <- Vector.type[Vector.type %in% names(cfg)]
            for (j in Vector.type) set(cfg, j = j, value = as.logical(cfg[[j]]))
            Vector.type <- c("PORT", "Port", "UserMins", "UserMinsAvg", 
                "Delay")
            Vector.type <- Vector.type[Vector.type %in% names(cfg)]
            for (j in Vector.type) set(cfg, j = j, value = as.numeric(cfg[[j]]))
        }
        else {
            my_message <- paste0("[CONFIG] ERROR, no server config file for the AirSensEUR box. \n", 
                "The App is going to crash. This AirSensEUR cannot be selected.\n")
            cat(my_message)
            if (shiny) 
                shinyalert(title = "ERROR Config file", text = my_message, 
                  closeOnEsc = TRUE, closeOnClickOutside = TRUE, 
                  html = FALSE, type = "error", showConfirmButton = TRUE, 
                  showCancelButton = FALSE, confirmButtonText = "OK", 
                  confirmButtonCol = "#AEDEF4", timer = 0, imageUrl = "", 
                  animation = FALSE)
        }
    }
    else {
        my_message <- paste0("[CONFIG] ERROR, no server config file for the AirSensEUR box. \n", 
            "The App is going to crash. This AirSensEUR cannot be selected.\n")
        cat(my_message)
        if (shiny) 
            shinyalert(title = "ERROR Config file", text = my_message, 
                closeOnEsc = TRUE, closeOnClickOutside = TRUE, 
                html = FALSE, type = "error", showConfirmButton = TRUE, 
                showCancelButton = FALSE, confirmButtonText = "OK", 
                confirmButtonCol = "#AEDEF4", timer = 0, imageUrl = "", 
                animation = FALSE)
    }
    File_cfg <- list.files(path = file.path(DisqueFieldtestDir, 
        "General_data"), pattern = paste0(ASE_name, ".cfg"))
    if (!identical(File_cfg, character(0))) {
        File_cfg <- file.path(DisqueFieldtestDir, "General_data", 
            paste0(ASE_name, ".cfg"))
        if (file.exists(File_cfg)) {
            cat(paste0("[CONFIG] Info, the config file ", File_cfg, 
                " for the configuration of AirSensEUR exists"), 
                sep = "\n")
            sens2ref <- data.table::transpose(fread(file = File_cfg, 
                header = FALSE, na.strings = c("", "NA", "<NA>"), 
                fill = TRUE), fill = NA, make.names = 1)
            if ("V1" %in% names(sens2ref)) 
                sens2ref[, `:=`(V1, NULL)]
            sens2ref.order <- sens2ref$name.gas
            if (is.null(key(sens2ref))) 
                sens2ref <- data.table::setkey(x = sens2ref, 
                  key = "name.gas")
            sens2ref$Cal.Line <- sapply(seq_along(sens2ref$Cal.Line), 
                function(l) {
                  if (!is.na(sens2ref$Cal.Line[l])) {
                    if (sens2ref$Cal.Line[l] == "Previous calibration") {
                      return("Prediction with previous calibration")
                    }
                    else if (sens2ref$Cal.Line[l] == "New calibration with current data") {
                      return("Calibration with current data")
                    }
                    else if (sens2ref$Cal.Line[l] == "Calibration with slope and intercept") {
                      return("Calibration with slope and intercept")
                    }
                    else return("Prediction with previous calibration")
                  }
                  else return(NA)
                })
            if (!"Sync.Cal" %in% names(sens2ref)) 
                sens2ref$Sync.Cal <- FALSE
            if (!"Sync.Pred" %in% names(sens2ref)) 
                sens2ref$Sync.Pred <- FALSE
            if (!"ubsRM" %in% names(sens2ref)) {
                if (!"uxi" %in% names(sens2ref)) {
                  sens2ref$ubsRM <- rep(0, times = nrow(sens2ref))
                }
                else sens2ref$ubsRM <- sens2ref$uxi
            }
            if (!"ubss" %in% names(sens2ref)) {
                if (!"uxi" %in% names(sens2ref)) {
                  sens2ref$ubss <- rep(0, times = nrow(sens2ref))
                }
                else {
                  sens2ref$ubss <- sens2ref$uxi
                  sens2ref[, `:=`(uxi, NULL)]
                }
            }
            Vector.type <- c("Ref.rm.Out", "Sens.Inval.Out", 
                "Apply.Invalid", "remove.neg", "Sens.rm.Out", 
                "Neg.mod", "Sync.Cal", "Sync.Pred")
            Vector.type <- Vector.type[Vector.type %in% names(sens2ref)]
            for (j in Vector.type) set(sens2ref, j = j, value = as.logical(gsub(" ", 
                "", sens2ref[[j]])))
            Vector.type <- c("Ref.window", "Ref.threshold", "Ref.Ymin", 
                "Ref.Ymax", "Ref.ThresholdMin", "Ref.iterations", 
                "Gain", "Intercept", "Slope", "Sens.window", 
                "Sens.threshold", "Sens.Ymin", "Sens.Ymax", "Sens.ThresholdMin", 
                "Sens.iterations", "ubsRM", "ubss", "Rload", 
                "TIA_Gain", "GAIN", "Int_Z", "Bias_Sign", "Bias", 
                "Ref", "RefAD", "RefAFE", "board.zero.set", "BIAIS", 
                "temp.thres.min", "temp.thres.max", "rh.thres.min", 
                "rh.thres.max", "hoursWarming")
            Vector.type <- Vector.type[Vector.type %in% names(sens2ref)]
            for (j in Vector.type) set(sens2ref, j = j, value = as.numeric(gsub(" ", 
                "", sens2ref[[j]])))
        }
        else {
            my_message <- paste0("[CONFIG] ERROR, no config file for the AirSensEUR box. \n", 
                "The App is going to crash. This AirSensEUR cannot be selected.\n")
            cat(my_message)
            if (shiny) 
                shinyalert(title = "ERROR Config file", text = my_message, 
                  closeOnEsc = TRUE, closeOnClickOutside = TRUE, 
                  html = FALSE, type = "error", showConfirmButton = TRUE, 
                  showCancelButton = FALSE, confirmButtonText = "OK", 
                  confirmButtonCol = "#AEDEF4", timer = 0, imageUrl = "", 
                  animation = FALSE)
        }
        if (is.null(sens2ref.shield)) {
            Shield.file <- file.path(DisqueFieldtest, "Shield_Files", 
                cfg$asc.File)
            if (file.exists(Shield.file)) {
                sens2ref.shield <- ASEPanel04Read(ASEPanel04File = Shield.file)
            }
            else {
                my_message <- paste0("[CONFIG] ERROR, no chemical shield config file for the AirSensEUR box. \n", 
                  "The App is going to crash. This AirSensEUR cannot be selected.\n")
                if (shiny) 
                  shinyalert(title = "ERROR Config file", text = my_message, 
                    closeOnEsc = TRUE, closeOnClickOutside = TRUE, 
                    html = FALSE, type = "error", showConfirmButton = TRUE, 
                    showCancelButton = FALSE, confirmButtonText = "OK", 
                    confirmButtonCol = "#AEDEF4", timer = 0, 
                    imageUrl = "", animation = FALSE)
                return(my_message)
            }
            if (!"data.table" %in% class(sens2ref.shield)) 
                sens2ref.shield <- data.table::data.table(sens2ref.shield, 
                  key = "name.gas")
            sens2ref.shield <- sens2ref.shield[match(na.omit(sens2ref.shield[["gas.sensor"]]), 
                na.omit(sens2ref.shield[["gas.sensor"]]))]
            sens2ref.cols2change <- intersect(names(sens2ref), 
                names(sens2ref.shield))
            setcolorder(sens2ref.shield, sens2ref.cols2change)
            if (!isTRUE(all.equal(sens2ref.shield, sens2ref[match(na.omit(sens2ref.shield[["gas.sensor"]]), 
                sens2ref$gas.sensor), ..sens2ref.cols2change], 
                check.attributes = TRUE, tolerance = 1e-05))) {
                Vector.type <- c("Ref.rm.Out", "Sens.Inval.Out", 
                  "Apply.Invalid", "remove.neg", "Sens.rm.Out", 
                  "Neg.mod", "Sync.Cal", "Sync.Pred")
                Vector.type <- Vector.type[Vector.type %in% names(sens2ref.shield)]
                for (j in Vector.type) set(sens2ref.shield, j = j, 
                  value = as.logical(gsub(" ", "", sens2ref.shield[[j]])))
                Vector.type <- c("Ref.window", "Ref.threshold", 
                  "Ref.Ymin", "Ref.Ymax", "Ref.ThresholdMin", 
                  "Ref.iterations", "Gain", "Intercept", "Slope", 
                  "Sens.window", "Sens.threshold", "Sens.Ymin", 
                  "Sens.Ymax", "Sens.ThresholdMin", "Sens.iterations", 
                  "ubsRM", "ubss", "Rload", "TIA_Gain", "GAIN", 
                  "Int_Z", "Bias_Sign", "Bias", "Ref", "RefAD", 
                  "RefAFE", "board.zero.set", "BIAIS", "temp.thres.min", 
                  "temp.thres.max", "rh.thres.min", "rh.thres.max", 
                  "hoursWarming")
                Vector.type <- Vector.type[Vector.type %in% names(sens2ref.shield)]
                for (j in Vector.type) set(sens2ref.shield, j = j, 
                  value = as.numeric(gsub(" ", "", sens2ref.shield[[j]])))
                set(sens2ref, i = match(na.omit(sens2ref.shield[["gas.sensor"]]), 
                  sens2ref$gas.sensor), j = sens2ref.cols2change, 
                  value = sens2ref.shield)
                fwrite(setDT(as.data.frame(t(sens2ref)), keep.rownames = "name.gas")[], 
                  file = file.path(DisqueFieldtestDir, "General_data", 
                    paste0(ASE_name, ".cfg")), row.names = FALSE, 
                  col.names = FALSE)
            }
        }
    }
    else {
        my_message <- paste0("[CONFIG] ERROR, no server config file for the AirSensEUR box. \n", 
            "The App is going to crash. This AirSensEUR cannot be selected.\n")
        cat(my_message)
        if (shiny) 
            shinyalert(title = "ERROR Config file", text = my_message, 
                closeOnEsc = TRUE, closeOnClickOutside = TRUE, 
                html = FALSE, type = "error", showConfirmButton = TRUE, 
                showCancelButton = FALSE, confirmButtonText = "OK", 
                confirmButtonCol = "#AEDEF4", timer = 0, imageUrl = "", 
                animation = FALSE)
        return(my_message)
    }
    for (i in 1:length(sens2ref$name.sensor[!is.na(sens2ref$name.sensor)])) {
        nameSens <- sens2ref$name.sensor[which(!is.na(sens2ref$name.sensor))][i]
        nameGas <- sens2ref$name.gas[which(sens2ref$name.sensor == 
            nameSens)]
        nameFile <- file.path(DisqueFieldtestDir, "General_data", 
            paste0(ASE_name, "_Covariates_", nameSens, ".cfg"))
        if (file.exists(nameFile)) {
            cat(paste0("[CONFIG] INFO, the file with covariates to plot ", 
                nameFile, " exists "), sep = "\n")
            assign(nameSens, read.csv(file = nameFile, header = TRUE, 
                comment.char = "", stringsAsFactors = FALSE))
        }
        else {
            cat(paste0("[CONFIG] ERROR, the file with covariates to plot ", 
                nameFile, " does not exist. File is iniatized with the R script info."), 
                sep = "\n")
            if (nameGas == "CO") {
                assign(sens2ref$name.sensor[!is.na(sens2ref$name.sensor)][i], 
                  data.frame(Effects = c(paste0(nameSens, "_volt"), 
                    "Out.Ref.CO_ppm", "Relative_humidity", "Temperature")))
            }
            else {
                if (nameGas == "O3" || nameGas == "NO2") {
                  assign(sens2ref$name.sensor[!is.na(sens2ref$name.sensor)][i], 
                    data.frame(Effects = c(paste0(nameSens, "_volt"), 
                      "Out.Ref.NO2", "Out.Ref.O3", "Relative_humidity", 
                      "Temperature")))
                }
                else assign(sens2ref$name.sensor[!is.na(sens2ref$name.sensor)][i], 
                  data.frame(Effects = c(paste0(nameSens, "_volt"), 
                    "Out.Ref.NO", "Relative_humidity", "Temperature")))
            }
            SENS <- get(sens2ref$name.sensor[!is.na(sens2ref$name.sensor)][i])
            write.csv(SENS, file = nameFile, row.names = FALSE)
            rm(SENS)
        }
        nameFile <- file.path(DisqueFieldtestDir, "General_data", 
            paste0(ASE_name, "_CovMod_", nameSens, ".cfg"))
        if (file.exists(nameFile) && nrow(read_csv(nameFile, 
            col_types = cols(Effects = col_character()))) > 0) {
            cat(paste0("[CONFIG] INFO, the file with covariates to calibrate ", 
                nameFile, " exists "), sep = "\n")
            assign(paste0(nameSens, "CovMod"), read.csv(file = nameFile, 
                header = TRUE, comment.char = "#", stringsAsFactors = FALSE))
        }
        else {
            cat(paste0("[CONFIG] ERROR, the file with covariates to calibrate ", 
                nameFile, " does not exist. File is inialized with Temperature."), 
                sep = "\n")
            assign(paste0(nameSens, "CovMod"), data.frame(Effects = "Temperature"))
            SENS <- get(paste0(nameSens, "CovMod"))
            write.csv(SENS, file = nameFile, row.names = FALSE)
            rm(SENS)
        }
    }
    Covariates <- lapply(which(!is.na(sens2ref$name.sensor)), 
        function(i) get(sens2ref$name.sensor[i]))
    names(Covariates) <- paste0(sens2ref$name.sensor[!is.na(sens2ref$name.sensor)])
    CovMod <- lapply(which(!is.na(sens2ref$name.sensor)), function(i) get(paste0(sens2ref$name.sensor[i], 
        "CovMod")))
    names(CovMod) <- paste0(sens2ref$name.sensor[!is.na(sens2ref$name.sensor)])
    cat("-----------------------------------------------------------------------------------\n")
    return.CONFIG <- list(cfg, sens2ref, Covariates, CovMod, 
        sens2ref.shield)
    cat("-----------------------------------------------------------------------------------\n")
    names(return.CONFIG) <- c("Server", "sens2ref", "CovPlot", 
        "CovMod", "sens2ref.shield")
    return(return.CONFIG)
}
[1] "S:/Box Sync/AirSensEUR/Fieldtests/Shiny/ASE_Stations/40458D"
debug at S:/Box Sync/AirSensEUR/Fieldtests/Shiny/Functions4ASE.R#3881: cat("-----------------------------------------------------------------------------------\n")
-----------------------------------------------------------------------------------
debug at S:/Box Sync/AirSensEUR/Fieldtests/Shiny/Functions4ASE.R#3882: ASE_name <- basename(ASEconfig)
[1] "S:/Box Sync/AirSensEUR/Fieldtests/Shiny"
debug at S:/Box Sync/AirSensEUR/Fieldtests/Shiny/Functions4ASE.R#3882: for (i in c("\\.[[:alnum:]]+$", "ASEconfig")) ASE_name <- sub(pattern = i, 
    replacement = "", basename(as.character(ASE_name)))
debug at S:/Box Sync/AirSensEUR/Fieldtests/Shiny/Functions4ASE.R#3882: ASE_name <- sub(pattern = i, replacement = "", basename(as.character(ASE_name)))
debug at S:/Box Sync/AirSensEUR/Fieldtests/Shiny/Functions4ASE.R#3882: ASE_name <- sub(pattern = i, replacement = "", basename(as.character(ASE_name)))
debug at S:/Box Sync/AirSensEUR/Fieldtests/Shiny/Functions4ASE.R#3883: DisqueFieldtestDir <- file.path(DisqueFieldtest, ASE_name)
[1] "40458D"
-----------------------------------------------------------------------------------
[shiny] INFO, the OS platform is : windows
[shiny, isTcltk] INFO, ASE_Script is run under Rstudio
[shiny] INFO, internet is available
-----------------------------------------------------------------------------------
[Shiny] INFO, setting working directory
               Name                                       Value  Section
1           sysname                                     Windows   System
2           release                                     8.1 x64   System
3           version                                  build 9600   System
4          nodename                                D01RI1501926   System
5           machine                                      x86-64   System
6             login                                     gerbomi   System
7              user                                     gerbomi   System
8    effective_user                                     gerbomi   System
9         Directory     S:/Box Sync/AirSensEUR/Fieldtests/Shiny   System
10          Version                R version 3.6.1 (2019-07-05)        R
11       shinyalert                         1.0.0.9004 NA NA NA Packages
12          threadr                    0.8.665 NA NA 2019-02-26 Packages
13      sensorweb4R                                0.1 NA NA NA Packages
14       kableExtra     1.1.0 CRAN CRAN 2019-03-16 20:10:03 UTC Packages
15        captioner                  2.2.3 CRAN CRAN 2015-07-15 Packages
16           pander                  0.6.3 CRAN CRAN 2018-11-06 Packages
17        flextable     0.5.5 CRAN CRAN 2019-06-25 09:20:03 UTC Packages
18      formattable                0.2.0.1 CRAN CRAN 2016-08-05 Packages
19   weathermetrics                  1.2.2 CRAN CRAN 2016-05-19 Packages
20          caTools               1.17.1.2 CRAN CRAN 2014-04-21 Packages
21       doParallel    1.0.15 CRAN CRAN 2019-08-02 04:40:02 UTC Packages
22        iterators    1.0.12 CRAN CRAN 2019-07-26 22:50:02 UTC Packages
23          foreach     1.4.7 CRAN CRAN 2019-07-27 23:00:35 UTC Packages
24         RcppRoll                  0.3.0 CRAN CRAN 2018-06-05 Packages
25            rgeos                  0.5-2 CRAN CRAN 2019-10-02 Packages
26           raster                  3.0-7 CRAN CRAN 2019-09-22 Packages
27         maptools                  0.9-8 CRAN CRAN 2019-10-03 Packages
28           plotly     4.9.1 CRAN CRAN 2019-11-07 19:00:02 UTC Packages
29           GGally     1.4.0 CRAN CRAN 2018-05-17 23:31:19 UTC Packages
30   berryFunctions                 1.18.2 CRAN CRAN 2019-04-29 Packages
31         OSMscale                  0.5.1 CRAN CRAN 2017-04-12 Packages
32          webshot     0.5.1 CRAN CRAN 2018-09-28 21:40:02 UTC Packages
33      htmlwidgets     1.5.1 CRAN CRAN 2019-10-08 08:40:02 UTC Packages
34        htmltools     0.4.0 CRAN CRAN 2019-10-04 23:00:08 UTC Packages
35         dygraphs   1.1.1.6 CRAN CRAN 2018-07-11 22:00:03 UTC Packages
36          leaflet     2.0.2 CRAN CRAN 2018-08-27 14:12:16 UTC Packages
37            knitr      1.25 CRAN CRAN 2019-09-18 09:10:07 UTC Packages
38           xtable                  1.8-4 CRAN CRAN 2019-04-08 Packages
39        rmarkdown      1.16 CRAN CRAN 2019-10-01 19:10:09 UTC Packages
40          R.utils     2.9.0 CRAN CRAN 2019-06-13 07:30:24 UTC Packages
41             R.oo    1.23.0 CRAN CRAN 2019-11-03 08:40:02 UTC Packages
42      R.methodsS3                  1.7.1 CRAN CRAN 2016-02-15 Packages
43            shape     1.4.4 CRAN CRAN 2018-02-07 16:21:49 UTC Packages
44           fields                    9.9 CRAN CRAN 2019-10-05 Packages
45             maps                  3.3.0 CRAN CRAN 2018-04-03 Packages
46             spam                  2.4-0 CRAN CRAN 2019-11-01 Packages
47        dotCall64                  1.0-0 CRAN CRAN 2018-07-30 Packages
48            rlist                0.4.6.1 CRAN CRAN 2016-04-04 Packages
49              BMS                  0.3.4 CRAN CRAN 2015-11-23 Packages
50       data.table    1.12.6 CRAN CRAN 2019-10-18 22:20:10 UTC Packages
51          polynom     1.4-0 CRAN CRAN 2019-03-22 09:50:06 UTC Packages
52         corrplot                   0.84 CRAN CRAN 2017-10-16 Packages
53             mgcv    1.8-28 CRAN CRAN 2019-03-21 11:40:07 UTC Packages
54             nlme                 3.1-140 CRAN CRAN 2019-05-1 Packages
55            sqldf                 0.4-11 CRAN CRAN 2017-06-23 Packages
56           gsubfn                    0.7 CRAN CRAN 2018-03-15 Packages
57            proto         1.0.0 CRAN CRAN 2016-10-29 00:23:07 Packages
58          RSQLite                  2.1.2 CRAN CRAN 2019-07-23 Packages
59            RODBC                 1.3-16 CRAN CRAN 2019-09-02 Packages
60         jsonlite       1.6 CRAN CRAN 2018-12-07 12:50:02 UTC Packages
61              XML 3.98-1.20 CRAN CRAN 2019-06-06 06:23:32 UTC Packages
62          RJSONIO   1.3-1.3 CRAN CRAN 2019-10-03 15:27:15 UTC Packages
63          reshape     0.8.8 CRAN CRAN 2018-10-23 18:50:03 UTC Packages
64         quantreg      5.51 CRAN CRAN 2019-08-07 17:10:02 UTC Packages
65          SparseM      1.77 CRAN CRAN 2017-04-23 18:26:30 UTC Packages
66       minpack.lm         1.2-1 CRAN CRAN 2016-11-20 16:40:02 Packages
67         limSolve   1.5.5.3 CRAN CRAN 2017-08-14 15:14:43 UTC Packages
68         devtools     2.2.1 CRAN CRAN 2019-09-24 15:00:02 UTC Packages
69          usethis     1.5.1 CRAN CRAN 2019-07-04 11:00:05 UTC Packages
70        backports     1.1.5 CRAN CRAN 2019-10-02 20:20:02 UTC Packages
71       colorspace                  1.4-1 CRAN CRAN 2019-03-18 Packages
72               sp     1.3-1 CRAN CRAN 2018-06-05 13:58:03 UTC Packages
73         processx     3.4.1 CRAN CRAN 2019-07-18 06:35:54 UTC Packages
74             httr     1.4.1 CRAN CRAN 2019-08-05 14:30:02 UTC Packages
75            RCurl 1.95-4.12 CRAN CRAN 2019-03-04 09:45:33 UTC Packages
76           bitops                  1.0-6 CRAN CRAN 2013-08-17 Packages
77             curl       4.2 CRAN CRAN 2019-09-24 12:20:02 UTC Packages
78        geosphere                 1.5-10 CRAN CRAN 2019-05-25 Packages
79    futile.logger                  1.4.3 CRAN CRAN 2016-07-10 Packages
80         lambda.r                  1.2.4 CRAN CRAN 2019-09-15 Packages
81   futile.options                  1.0.1 CRAN CRAN 2018-04-20 Packages
82              xts    0.11-2 CRAN CRAN 2018-11-05 14:10:03 UTC Packages
83              zoo                  1.8-6 CRAN CRAN 2019-05-27 Packages
84        lubridate     1.7.4 CRAN CRAN 2018-04-11 10:08:43 UTC Packages
85          openair                  2.6-6 CRAN CRAN 2019-09-23 Packages
86           dbplyr     1.4.2 CRAN CRAN 2019-06-17 20:00:04 UTC Packages
87            broom     0.5.2 CRAN CRAN 2019-04-07 19:52:53 UTC Packages
88          forcats     0.4.0 CRAN CRAN 2019-02-17 14:40:02 UTC Packages
89          stringr     1.4.0 CRAN CRAN 2019-02-10 03:40:03 UTC Packages
90            dplyr     0.8.3 CRAN CRAN 2019-07-04 15:50:02 UTC Packages
91            purrr     0.3.3 CRAN CRAN 2019-10-18 12:40:05 UTC Packages
92            readr     1.3.1 CRAN CRAN 2018-12-21 09:40:02 UTC Packages
93            tidyr     1.0.0 CRAN CRAN 2019-09-11 23:00:03 UTC Packages
94           tibble     2.1.3 CRAN CRAN 2019-06-06 13:40:03 UTC Packages
95          ggplot2     3.2.1 CRAN CRAN 2019-08-10 22:30:13 UTC Packages
96        tidyverse     1.2.1 CRAN CRAN 2017-11-14 18:09:56 UTC Packages
97             plyr         1.8.4 CRAN CRAN 2016-06-08 10:40:15 Packages
98          stringi                  1.4.3 CRAN CRAN 2019-03-12 Packages
99    rhandsontable     0.3.7 CRAN CRAN 2018-11-20 05:50:03 UTC Packages
100              DT       0.9 CRAN CRAN 2019-09-17 09:10:10 UTC Packages
101    shinyWidgets     0.4.9 CRAN CRAN 2019-09-10 16:40:05 UTC Packages
102 shinycssloaders                  0.2.0 CRAN CRAN 2017-05-03 Packages
103         shinyBS                   0.61 CRAN CRAN 2015-03-30 Packages
104     shinythemes     1.1.2 CRAN CRAN 2018-11-06 17:00:03 UTC Packages
105         shinyjs       1.0 CRAN CRAN 2018-01-08 22:21:13 UTC Packages
106     envDocument                  2.4.1 CRAN CRAN 2019-08-08 Packages
107           shiny     1.4.0 CRAN CRAN 2019-10-10 12:50:02 UTC Packages
108      tidyselect     0.2.5 CRAN CRAN 2018-10-11 13:00:03 UTC Packages
109         lpSolve               5.6.13.3 CRAN CRAN 2015-09-18 Packages
110         munsell     0.5.0 CRAN CRAN 2018-06-12 04:29:06 UTC Packages
111       codetools    0.2-16 CRAN CRAN 2018-12-24 12:40:05 UTC Packages
112           chron    2.3-54 CRAN CRAN 2019-08-26 06:58:12 UTC Packages
113           withr     2.1.2 CRAN CRAN 2018-03-15 22:39:56 UTC Packages
114            uuid         0.1-2 CRAN CRAN 2015-07-28 08:03:46 Packages
115      rstudioapi      0.10 CRAN CRAN 2019-03-19 20:30:03 UTC Packages
116         officer     0.3.5 CRAN CRAN 2019-06-23 18:50:03 UTC Packages
117           rJava    0.9-11 CRAN CRAN 2019-03-29 06:53:31 UTC Packages
118           bit64                  0.9-7 CRAN CRAN 2017-05-07 Packages
119       rprojroot     1.3-2 CRAN CRAN 2018-01-03 15:36:24 UTC Packages
120           vctrs     0.2.0 CRAN CRAN 2019-07-05 23:00:04 UTC Packages
121        generics     0.0.2 CRAN CRAN 2018-11-29 13:20:03 UTC Packages
122            xfun      0.10 CRAN CRAN 2019-10-01 18:20:02 UTC Packages
123              R6     2.4.0 CRAN CRAN 2019-02-14 19:42:14 UTC Packages
124        markdown       1.1 CRAN CRAN 2019-08-07 16:30:02 UTC Packages
125      assertthat     0.2.1 CRAN CRAN 2019-03-21 14:53:46 UTC Packages
126        promises     1.1.0 CRAN CRAN 2019-10-04 23:00:05 UTC Packages
127          scales     1.0.0 CRAN CRAN 2018-08-09 10:10:03 UTC Packages
128          gtable     0.3.0 CRAN CRAN 2019-03-25 19:50:02 UTC Packages
129           rlang     0.4.1 CRAN CRAN 2019-10-24 09:20:03 UTC Packages
130    MatrixModels                  0.4-1 CRAN CRAN 2015-08-22 Packages
131         zeallot     0.1.0 CRAN CRAN 2018-01-28 16:14:13 UTC Packages
132     systemfonts     0.1.1 CRAN CRAN 2019-07-01 12:50:02 UTC Packages
133         splines                              3.6.1 NA NA NA Packages
134           rgdal                  1.4-7 CRAN CRAN 2019-10-25 Packages
135        lazyeval     0.2.2 CRAN CRAN 2019-03-15 17:50:07 UTC Packages
136          hexbin    1.27.3 CRAN CRAN 2019-05-14 14:50:03 UTC Packages
137            yaml                  2.2.0 CRAN CRAN 2018-07-20 Packages
138           abind                  1.4-5 CRAN CRAN 2016-06-19 Packages
139          modelr     0.1.5 CRAN CRAN 2019-08-08 14:20:02 UTC Packages
140       crosstalk         1.0.0 CRAN CRAN 2016-12-21 08:30:32 Packages
141          httpuv     1.5.2 CRAN CRAN 2019-09-11 05:40:02 UTC Packages
142           tcltk                              3.6.1 NA NA NA Packages
143        ellipsis     0.3.0 CRAN CRAN 2019-09-20 20:40:02 UTC Packages
144    RColorBrewer                  1.1-2 CRAN CRAN 2014-12-07 Packages
145     sessioninfo     1.1.1 CRAN CRAN 2018-11-05 17:20:02 UTC Packages
146            Rcpp                  1.0.1 CRAN CRAN 2019-03-16 Packages
147       base64enc         0.1-3 CRAN CRAN 2015-07-28 08:03:37 Packages
148              ps     1.3.0 CRAN CRAN 2018-12-21 14:50:03 UTC Packages
149     prettyunits         1.0.2 CRAN CRAN 2015-07-13 04:09:56 Packages
150           haven     2.1.1 CRAN CRAN 2019-07-04 14:50:03 UTC Packages
151         cluster                  2.1.0 CRAN CRAN 2019-06-07 Packages
152              fs     1.3.1 CRAN CRAN 2019-05-06 22:50:03 UTC Packages
153        magrittr           1.5 CRAN CRAN 2014-11-22 19:15:57 Packages
154         pkgload     1.0.2 CRAN CRAN 2018-10-29 20:30:03 UTC Packages
155             hms                  0.5.2 CRAN CRAN 2019-10-30 Packages
156            mime       0.7 CRAN CRAN 2019-06-11 20:10:03 UTC Packages
157        evaluate      0.14 CRAN CRAN 2019-05-28 15:50:02 UTC Packages
158          readxl     1.3.1 CRAN CRAN 2019-03-13 16:30:02 UTC Packages
159        testthat     2.3.0 CRAN CRAN 2019-11-05 22:50:02 UTC Packages
160        compiler                              3.6.1 NA NA NA Packages
161              V8       2.3 CRAN CRAN 2019-07-02 10:51:07 UTC Packages
162          crayon     1.3.4 CRAN CRAN 2017-09-16 19:49:46 UTC Packages
163           later     1.0.0 CRAN CRAN 2019-10-04 05:00:02 UTC Packages
164             DBI                  1.0.0 CRAN CRAN 2018-05-02 Packages
165         formatR       1.7 CRAN CRAN 2019-06-11 20:00:03 UTC Packages
166            MASS               7.3-51.4 CRAN CRAN 2019-03-31 Packages
167          Matrix                 1.2-17 CRAN CRAN 2019-03-11 Packages
168             cli     1.1.0 CRAN CRAN 2019-03-19 10:43:26 UTC Packages
169        quadprog                  1.5-7 CRAN CRAN 2019-05-05 Packages
170       pkgconfig     2.0.3 CRAN CRAN 2019-09-22 09:20:02 UTC Packages
171         foreign                 0.8-71 CRAN CRAN 2018-07-20 Packages
172            xml2     1.2.2 CRAN CRAN 2019-08-09 12:10:03 UTC Packages
173           rvest     0.3.5 CRAN CRAN 2019-11-08 23:10:02 UTC Packages
174           callr     3.3.2 CRAN CRAN 2019-09-22 09:50:02 UTC Packages
175          digest                 0.6.20 CRAN CRAN 2019-07-04 Packages
176      cellranger         1.1.0 CRAN CRAN 2016-07-27 03:17:48 Packages
177         gdtools     0.2.1 CRAN CRAN 2019-10-14 15:30:02 UTC Packages
178   OpenStreetMap     0.3.4 CRAN CRAN 2019-05-31 17:40:02 UTC Packages
179       lifecycle     0.1.0 CRAN CRAN 2019-08-01 12:50:05 UTC Packages
180         mapproj                  1.2.6 CRAN CRAN 2018-03-29 Packages
181            desc     1.2.0 CRAN CRAN 2018-05-01 20:48:05 UTC Packages
182     viridisLite     0.3.0 CRAN CRAN 2018-02-01 22:45:56 UTC Packages
183          pillar     1.4.2 CRAN CRAN 2019-06-29 16:40:03 UTC Packages
184         lattice                0.20-38 CRAN CRAN 2018-11-01 Packages
185         fastmap     1.0.1 CRAN CRAN 2019-10-08 05:20:02 UTC Packages
186        pkgbuild     1.0.6 CRAN CRAN 2019-10-09 14:00:02 UTC Packages
187            glue     1.3.1 CRAN CRAN 2019-03-12 22:30:02 UTC Packages
188         remotes     2.1.0 CRAN CRAN 2019-06-24 21:30:03 UTC Packages
189             zip     2.0.4 CRAN CRAN 2019-09-01 08:50:02 UTC Packages
190             bit                 1.1-14 CRAN CRAN 2018-04-11 Packages
191            blob     1.2.0 CRAN CRAN 2019-07-09 11:40:03 UTC Packages
192    latticeExtra                 0.6-28 CRAN CRAN 2016-01-09 Packages
193         memoise     1.1.0 CRAN CRAN 2017-04-21 05:54:22 UTC Packages
194          kimisc                    0.4 CRAN CRAN 2017-12-17 Packages
[shiny, isTcltk] INFO, directory from where the script is run: S:/Box Sync/AirSensEUR/Fieldtests/Shiny
[Shiny] INFO, setting working directory to S:/Box Sync/AirSensEUR/Fieldtests/Shiny
-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
[Global] INFO, checking presence of necessary files (ASEconfig_xx.R and Functions4ASE.R). Then setting the Working Directory.
[Global] INFO, file S:/Box Sync/AirSensEUR/Fieldtests/Shiny/Functions4ASE.R found and ready to be sourced
-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
[Global] INFO, checking presence of necessary file 151016 Sensor_Toolbox.R.
[Global] INFO, file S:/Box Sync/AirSensEUR/Fieldtests/Shiny/151016 Sensor_Toolbox.R found and ready to be sourced
-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
[Global] AirSensEUR config file found: ASEconfig40458D.R
 [Global] AirSensEUR config file found: ASEconfigAirSensEUR00.R
 [Global] AirSensEUR config file found: ASEconfigAirSensEUR15.R
 [Global] AirSensEUR config file found: ASEconfigATN01.R
 [Global] AirSensEUR config file found: ASEconfigHMS_1.R
 [Global] AirSensEUR config file found: ASEconfigJRC_01.R
 [Global] AirSensEUR config file found: ASEconfigJRC_02.R
 [Global] AirSensEUR config file found: ASEconfigJRC_03.R
 [Global] AirSensEUR config file found: ASEconfigJRC_04.R
 [Global] AirSensEUR config file found: ASEconfigJRC_05.R
 [Global] AirSensEUR config file found: ASEconfigJRC_06.R
 [Global] AirSensEUR config file found: ASEconfigJRC_07.R
 [Global] AirSensEUR config file found: ASEconfigJRC_11.R
 [Global] AirSensEUR config file found: ASEconfigJRC_14.R
 [Global] AirSensEUR config file found: ASEconfigJRC_16.R
 [Global] AirSensEUR config file found: ASEconfigJRC_18.R
 [Global] AirSensEUR config file found: ASEconfigLANUV_01.R
 [Global] AirSensEUR config file found: ASEconfigLANUV02.R
 [Global] AirSensEUR config file found: ASEconfigLANUV03.R
 [Global] AirSensEUR config file found: ASEconfigNILU_P1.R
 [Global] AirSensEUR config file found: ASEconfigNL_01mim_WG42.R
 [Global] AirSensEUR config file found: ASEconfigNL_01min.R
 [Global] AirSensEUR config file found: ASEconfigNL_02min.R
 [Global] AirSensEUR config file found: ASEconfigNL_03min.R
 [Global] AirSensEUR config file found: ASEconfigNL_04min.R
 [Global] AirSensEUR config file found: ASEconfigNL_05min.R
 [Global] AirSensEUR config file found: ASEconfigP2.R
 [Global] AirSensEUR config file found: ASEconfigRIVM08.R
 [Global] AirSensEUR config file found: ASEconfigRIVMas01.R
 [Global] AirSensEUR config file found: ASEconfigRIVMas02.R
 [Global] AirSensEUR config file found: ASEconfigRIVMas03.R
 [Global] AirSensEUR config file found: ASEconfigRIVMas04.R
 [Global] AirSensEUR config file found: ASEconfigRIVMas05.R
 [Global] AirSensEUR config file found: ASEconfigRIVMas05min.R
 [Global] AirSensEUR config file found: ASEconfigRIVMas06.R
 [Global] AirSensEUR config file found: ASEconfigRIVMas07.R
 [Global] AirSensEUR config file found: ASEconfigRIVMas08.R
 [Global] AirSensEUR config file found: ASEconfigRIVMas09.R
 [Global] AirSensEUR config file found: ASEconfigRIVMas10.R
 [Global] AirSensEUR config file found: ASEconfigRIVMas11.R
 [Global] AirSensEUR config file found: ASEconfigRIVMas12.R
-----------------------------------------------------------------------------------
[Global] INFO, sourcing 151016 Sensor_Toolbox.R and Funtions4ASE.R
-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
[Global] INFO, Check or install packages needed to run the script
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
[Global] INFO, package 52North/sensorweb4R already installed
[Global] INFO, Package 52North/sensorweb4R loaded
[Global] INFO, package skgrange/threadr already installed
[Global] INFO, Package skgrange/threadr loaded
[Global] INFO, package daattali/shinyalert already installed
[Global] INFO, Package daattali/shinyalert loaded
[Global] INFO, List of installed packages
  [1] .GlobalEnv              package:shinyalert      package:threadr         package:sensorweb4R     package:kableExtra      package:captioner       package:pander          package:flextable       package:formattable    
 [10] package:weathermetrics  package:caTools         package:doParallel      package:parallel        package:iterators       package:foreach         package:RcppRoll        package:rgeos           package:raster         
 [19] package:maptools        package:plotly          package:GGally          package:berryFunctions  package:OSMscale        package:webshot         package:htmlwidgets     package:htmltools       package:dygraphs       
 [28] package:leaflet         package:knitr           package:xtable          package:rmarkdown       package:R.utils         package:R.oo            package:R.methodsS3     package:tools           package:shape          
 [37] package:fields          package:maps            package:spam            package:grid            package:dotCall64       package:rlist           package:BMS             package:data.table      package:polynom        
 [46] package:corrplot        package:mgcv            package:nlme            package:sqldf           package:gsubfn          package:proto           package:RSQLite         package:RODBC           package:jsonlite       
 [55] package:XML             package:RJSONIO         package:reshape         package:quantreg        package:SparseM         package:minpack.lm      package:limSolve        package:devtools        package:usethis        
 [64] package:backports       package:colorspace      package:sp              package:processx        package:httr            package:RCurl           package:bitops          package:curl            package:geosphere      
 [73] package:futile.logger   package:lambda.r        package:futile.options  package:xts             package:zoo             package:lubridate       package:openair         package:dbplyr          package:broom          
 [82] package:forcats         package:stringr         package:dplyr           package:purrr           package:readr           package:tidyr           package:tibble          package:ggplot2         package:tidyverse      
 [91] package:plyr            package:stringi         package:rhandsontable   package:DT              package:shinyWidgets    package:shinycssloaders package:shinyBS         package:shinythemes     package:shinyjs        
[100] package:envDocument     package:shiny           tools:rstudio           package:stats           package:graphics        package:grDevices       package:utils           package:datasets        package:methods        
[109] Autoloads               package:base           

Called from: eval(expr, p)
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#649: ASE_name <- reactive({
    cc <- basename(input$Selected)
    for (i in c("\\.[[:alnum:]]+$", "ASEconfig")) cc <- sub(pattern = i, 
        replacement = "", basename(as.character(cc)))
    return(cc)
})
Called from: eval(expr, p)
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#655: ASE_name.List <- reactive({
    cc <- basename(input$Config_Files)
    for (i in c("\\.[[:alnum:]]+$", "ASEconfig")) cc <- sub(pattern = i, 
        replacement = "", basename(as.character(cc)))
    return(cc)
})
Called from: eval(expr, p)
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#2474: input$Save
Called from: eval(expr, p)
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#656: cc <- basename(input$Config_Files)
Called from: eval(expr, p)
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#834: progress$set(message = "[Shiny] INFO, Loading config file", value = 0.1)
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#835: Config <<- reactiveValues(all = CONFIG(DirShiny, input$Config_Files))
-----------------------------------------------------------------------------------
[CONFIG] Info, the config file S:/Box Sync/AirSensEUR/Fieldtests/Shiny/ASE_Stations/40458D/General_data/40458D_Servers.cfg for the configuration of servers exists
[CONFIG] Info, the config file S:/Box Sync/AirSensEUR/Fieldtests/Shiny/ASE_Stations/40458D/General_data/40458D.cfg for the configuration of AirSensEUR exists
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
[CONFIG] INFO, the file with covariates to plot S:/Box Sync/AirSensEUR/Fieldtests/Shiny/ASE_Stations/40458D/General_data/40458D_Covariates_COA4.cfg exists 
[CONFIG] INFO, the file with covariates to calibrate S:/Box Sync/AirSensEUR/Fieldtests/Shiny/ASE_Stations/40458D/General_data/40458D_CovMod_COA4.cfg exists 
[CONFIG] INFO, the file with covariates to plot S:/Box Sync/AirSensEUR/Fieldtests/Shiny/ASE_Stations/40458D/General_data/40458D_Covariates_NOB4.cfg exists 
[CONFIG] INFO, the file with covariates to calibrate S:/Box Sync/AirSensEUR/Fieldtests/Shiny/ASE_Stations/40458D/General_data/40458D_CovMod_NOB4.cfg exists 
[CONFIG] INFO, the file with covariates to plot S:/Box Sync/AirSensEUR/Fieldtests/Shiny/ASE_Stations/40458D/General_data/40458D_Covariates_NO2B43F.cfg exists 
[CONFIG] INFO, the file with covariates to calibrate S:/Box Sync/AirSensEUR/Fieldtests/Shiny/ASE_Stations/40458D/General_data/40458D_CovMod_NO2B43F.cfg exists 
[CONFIG] INFO, the file with covariates to plot S:/Box Sync/AirSensEUR/Fieldtests/Shiny/ASE_Stations/40458D/General_data/40458D_Covariates_OX_A431.cfg exists 
[CONFIG] INFO, the file with covariates to calibrate S:/Box Sync/AirSensEUR/Fieldtests/Shiny/ASE_Stations/40458D/General_data/40458D_CovMod_OX_A431.cfg exists 
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#842: progress$set(message = "[Shiny] INFO, Loading Sensor, reference and General data", 
    value = 0.2)
   PROXY           URL PORT LOGIN PASSWORD Down.Influx                         Host Port        User     Pass       Db      Dataset Influx.TZ Down.SOS AirsensWeb AirSensEur.name SOS.TZ Down.Ref FTPMode urlref
1: FALSE 10.168.209.72 8012                      FALSE influxdb1.liberaintentio.com 8086 shinyreader sqwEgzli jrcispra AirSensEUR16       UTC    FALSE                     JRC_16    UTC    FALSE   a_i_p       
           Reference.name RefSOSname Ref.SOS.name RefPollutants RefDateStart RefDateEnd                                       Ref__a_i_p__name User__a_i_p__ Pass__a_i_p__ Ref__a_i_p__Organisation Ref__a_i_p__Station
1: Reference_EMEP_station                                                               https://ubis-air.a-i-p.com/UidepService/values/simple?       datareq       aip2jrc                    ABCIS           JRC+Ispra
                                                                                                                                                                                                       Ref__a_i_p__Pollutants
1: manifold flow!Sample_air temperature!temperature cpu!ozone!carbon monoxide!nitrogen oxides!nitrogen dioxide caps!nitrogen dioxide!sulfur dioxide!nitrogen monoxide!carbon monoxide parallel!temperature caps!pressure caps
   Ref.a_i_p.DateIN Ref.a_i_p.DateEND        coord.ref alt.ref ref.tzone                                                 asc.File UserMins UserMinsAvg Delay
1:       2019-12-12        2019-12-12 8.63580, 45.8146   209 m       UTC 170604 ASE_R24 NO2B43F_COA4_OXA431_NOB4_Training2017.asc        1          60     1
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#843: if (file.exists(InfluxData.file())) {
    if (extension(InfluxData.file()) == ".csv") {
        Influx$DATA <- fread(file = InfluxData.file(), na.strings = c("", 
            "NA", "<NA>"))
        if (!"" %in% Config$all$Server$Influx.TZ) {
            data.table::set(Influx$DATA, j = "date", value = ymd_hms(Influx$DATA[["date"]], 
                tz = Config$all$Server$Influx.TZ))
        }
        else data.table::set(Influx$DATA, j = "date", value = ymd_hms(Influx$DATA[["date"]], 
            tz = "UTC"))
    }
    else if (extension(InfluxData.file()) == ".Rdata") {
        Influx$DATA <- load_obj(InfluxData.file())
        if (!"data.table" %in% class(Influx$DATA)) 
            Influx$DATA <- data.table(Influx$DATA, key = "date")
    }
    if ("V1" %in% names(Influx$DATA)) 
        Influx$DATA[, `:=`(V1, NULL)]
}
Called from: eval(expr, p)
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#650: cc <- basename(input$Selected)
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#651: for (i in c("\\.[[:alnum:]]+$", "ASEconfig")) cc <- sub(pattern = i, 
    replacement = "", basename(as.character(cc)))
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#651: cc <- sub(pattern = i, replacement = "", basename(as.character(cc)))
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#651: cc <- sub(pattern = i, replacement = "", basename(as.character(cc)))
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#652: return(cc)
[1] "S:/Box Sync/AirSensEUR/Fieldtests/Shiny/ASE_Stations/40458D/General_data/InfluxData.csv"
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#844: if (extension(InfluxData.file()) == ".csv") {
    Influx$DATA <- fread(file = InfluxData.file(), na.strings = c("", 
        "NA", "<NA>"))
    if (!"" %in% Config$all$Server$Influx.TZ) {
        data.table::set(Influx$DATA, j = "date", value = ymd_hms(Influx$DATA[["date"]], 
            tz = Config$all$Server$Influx.TZ))
    }
    else data.table::set(Influx$DATA, j = "date", value = ymd_hms(Influx$DATA[["date"]], 
        tz = "UTC"))
} else if (extension(InfluxData.file()) == ".Rdata") {
    Influx$DATA <- load_obj(InfluxData.file())
    if (!"data.table" %in% class(Influx$DATA)) 
        Influx$DATA <- data.table(Influx$DATA, key = "date")
}
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#845: Influx$DATA <- fread(file = InfluxData.file(), na.strings = c("", 
    "NA", "<NA>"))
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#846: if (!"" %in% Config$all$Server$Influx.TZ) {
    data.table::set(Influx$DATA, j = "date", value = ymd_hms(Influx$DATA[["date"]], 
        tz = Config$all$Server$Influx.TZ))
} else data.table::set(Influx$DATA, j = "date", value = ymd_hms(Influx$DATA[["date"]], 
    tz = "UTC"))
                      date boardTimeStamp gpsTimestamp altitude latitude longitude Atmospheric_pressure Batt_Charge_Status Batt_Cumulated_Charge Batt_Voltage     Bin0     Bin1 Bin10       Bin11 Bin12 Bin13 Bin14 Bin15
   1: 2020-01-05T17:00:00Z   1.578244e+09    315964847       NA       NA        NA                   NA                  2               -332915         3156       NA       NA    NA          NA    NA    NA    NA    NA
   2: 2020-01-05T17:01:00Z   9.198829e+03    315964880       NA       NA        NA             987.8611                 NA                    NA           NA 17.03472 1.583333     0 0.006944444     0     0     0     0
  ---                                                                                                                                                                                                                    
1503: 2020-01-06T18:02:00Z   9.014932e+06    316054938       NA       NA        NA             988.0208                 NA                    NA           NA 40.79688 3.953125     0 0.000000000     0     0     0     0
1504: 2020-01-06T18:03:00Z   9.019132e+06    316054979       NA       NA        NA                   NA                 NA                    NA           NA       NA       NA    NA          NA    NA    NA    NA    NA
      Bin16 Bin17 Bin18      Bin19      Bin2 Bin20 Bin21 Bin22 Bin23       Bin3    Bin4      Bin5       Bin6       Bin7       Bin8 Bin9 Carbon_dioxide Carbon_monoxide Nitric_oxide Nitrogen_dioxide  OPCHum  OPCTemp   OPCVol
   1:    NA    NA    NA         NA        NA    NA    NA    NA    NA         NA      NA        NA         NA         NA         NA   NA             NA              NA           NA               NA      NA       NA       NA
   2:     0     0     0 0.00390625 0.4340278     0     0     0     0 0.05555556 0.15625 0.1006944 0.05555556 0.01736111 0.01041667    0       2088.857        13423.44        65192         65006.11 37.2410 23.29829 193.5625
  ---                                                                                                                                                                                                                         
1503:     0     0     0 0.00000000 0.7031250     0     0     0     0 0.14062500 0.12500 0.0937500 0.01562500 0.00000000 0.00000000    0       1014.000         9645.00         9510         61649.00 29.5075 23.73950 183.9531
1504:    NA    NA    NA         NA        NA    NA    NA    NA    NA         NA      NA        NA         NA         NA         NA   NA       1036.000         9656.00         9506         61657.00      NA       NA       NA
         Ozone Particulate_Matter_1 Particulate_Matter_10 Particulate_Matter_25 Relative_humidity Relative_humidity_int Temperature Temperature_int
   1:       NA                   NA                    NA                    NA                NA                    NA          NA              NA
   2: 62202.56             1.437500              11.06696              3.080357          48.27293              55.14916    20.40347        21.94247
  ---                                                                                                                                              
1503: 62005.00             3.203125               6.21875              4.468750          46.54612              38.40848    16.77005        18.84222
1504: 62006.00                   NA                    NA                    NA                NA                    NA          NA              NA
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#847: data.table::set(Influx$DATA, j = "date", value = ymd_hms(Influx$DATA[["date"]], 
    tz = Config$all$Server$Influx.TZ))
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#853: if ("V1" %in% names(Influx$DATA)) Influx$DATA[, `:=`(V1, NULL)]
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#855: if (file.exists(SOSData.file())) {
    if (extension(SOSData.file()) == ".csv") {
        Sos$DATA <- fread(file = SOSData.file(), na.strings = c("", 
            "NA", "<NA>"))
        if (!"" %in% Config$all$Server$SOS.TZ) {
            data.table::set(Sos$DATA, j = "date", value = ymd_hms(Sos$DATA[["date"]], 
                tz = Config$all$Server$SOS.TZ))
        }
        else data.table::set(Sos$DATA, j = "date", value = ymd_hms(Sos$DATA[["date"]], 
            tz = "UTC"))
    }
    else if (extension(SOSData.file()) == ".Rdata") {
        Sos$DATA <- load_obj(SOSData.file())
        if (!"data.table" %in% class(Sos$DATA)) 
            Sos$DATA <- data.table(Sos$DATA, key = "date")
    }
    if ("V1" %in% names(Sos$DATA)) 
        Sos$DATA[, `:=`(V1, NULL)]
}
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#867: if (file.exists(RefData.file())) {
    if (extension(RefData.file()) == ".csv") {
        Ref$DATA <- fread(file = RefData.file(), na.strings = c("", 
            "NA", "<NA>"))
        if (!"" %in% Config$all$Server$ref.tzone) {
            data.table::set(Ref$DATA, j = "date", value = ymd_hms(Ref$DATA[["date"]], 
                tz = Config$all$Server$ref.tzone))
        }
        else data.table::set(Ref$DATA, j = "date", value = ymd_hms(Ref$DATA[["date"]], 
            tz = "UTC"))
    }
    else if (extension(SOSData.file()) == ".Rdata") {
        Ref$DATA <- load_obj(RefData.file())
        if (!"data.table" %in% class(Ref$DATA)) 
            Ref$DATA <- data.table(Ref$DATA, key = "date")
    }
    if ("V1" %in% names(Ref$DATA)) 
        Ref$DATA[, `:=`(V1, NULL)]
    if (!all(c("Ref.Long", "Ref.Lat") %in% names(Ref$DATA))) 
        shinyalert(title = "ERROR Coordinates of reference station missing", 
            text = "You should delete RefData.csv, General.csv and all .RDS files\n\n                            in directory General_data and reload reference data", 
            closeOnEsc = TRUE, closeOnClickOutside = TRUE, html = FALSE, 
            type = "error", showConfirmButton = TRUE, showCancelButton = FALSE, 
            confirmButtonText = "OK", confirmButtonCol = "#AEDEF4", 
            timer = 3000, imageUrl = "", animation = FALSE)
}
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#896: if (file.exists(General.file())) {
    if (extension(General.file()) == ".csv") {
        DF$General <- data.table::fread(General.file())
        if (!all("" %in% c(Config$all$Server$Influx.TZ, Config$all$Server$SOS.TZ))) {
            if (!"" %in% c(Config$all$Server$Influx.TZ)) {
                data.table::set(DF$General, j = "date", value = ymd_hms(DF$General[["date"]], 
                  tz = Config$all$Server$Influx.TZ))
                data.table::set(DF$General, j = "date_PreDelay", 
                  value = ymd_hms(DF$General[["date_PreDelay"]], 
                    tz = Config$all$Server$Influx.TZ))
            }
            else {
                data.table::set(DF$General, j = "date", value = ymd_hms(DF$General[["date"]], 
                  tz = Config$all$Server$SOS.TZ))
                data.table::set(DF$General, j = "date_PreDelay", 
                  value = ymd_hms(DF$General[["date_PreDelay"]], 
                    tz = Config$all$Server$SOS.TZ))
            }
        }
        else {
            data.table::set(DF$General, j = "date", value = ymd_hms(DF$General[["date"]], 
                tz = "UTC"))
            data.table::set(DF$General, j = "date_PreDelay", 
                value = ymd_hms(DF$General[["date_PreDelay"]], 
                  tz = "UTC"))
        }
    }
    else if (extension(General.file()) == ".Rdata") {
        DF$General <- load_obj(General.file())
        if (!"data.table" %in% class(DF$General)) 
            DF$General <- data.table(DF$General, key = "date")
    }
    if ("V1" %in% names(DF$General)) 
        DF$General[, `:=`(V1, NULL)]
    if (!all(c("Absolute_humidity", "Td_deficit") %in% names(DF$General))) {
        if (all(c("Temperature", "Relative_humidity") %in% names(DF$General))) {
            DF$General$Absolute_humidity <- NA_real_
            DF$General$Td_deficit <- NA_real_
            both.Temp.Hum <- complete.cases(DF$General[, c("Temperature", 
                "Relative_humidity")])
            DF$General[both.Temp.Hum, "Absolute_humidity"] <- threadr::absolute_humidity(DF$General[["Temperature"]][both.Temp.Hum], 
                DF$General[["Relative_humidity"]][both.Temp.Hum])
            Td <- weathermetrics::humidity.to.dewpoint(rh = DF$General[["Relative_humidity"]][both.Temp.Hum], 
                t = DF$General[["Temperature"]][both.Temp.Hum], 
                temperature.metric = "celsius")
            DF$General[both.Temp.Hum, `:=`(Td_deficit, DF$General[both.Temp.Hum, 
                "Temperature"] - Td)]
        }
    }
    if (!all(c("Ref.Absolute_humidity", "Ref.Td_deficit") %in% 
        names(DF$General))) {
        if (all(c("Ref.Temp", "Ref.RH") %in% names(DF$General))) {
            DF$General$Ref.Absolute_humidity <- NA_real_
            DF$General$Ref.Td_deficit <- NA_real_
            Ref.both.Temp.Hum <- complete.cases(DF$General[, 
                c("Ref.Temp", "Ref.RH")])
            DF$General[Ref.both.Temp.Hum, "Ref.Absolute_humidity"] <- threadr::absolute_humidity(DF$General[["Ref.Temp"]][Ref.both.Temp.Hum], 
                DF$General[["Ref.RH"]])
            Td <- weathermetrics::humidity.to.dewpoint(rh = DF$General[Ref.both.Temp.Hum, 
                "Ref.RH"], t = DF$General[["Ref.Temp"]][Ref.both.Temp.Hum], 
                temperature.metric = "celsius")
            DF$General[Ref.both.Temp.Hum, `:=`(Ref.Td_deficit, 
                DF$General[["Ref.Temp"]][Ref.both.Temp.Hum] - 
                  Td)]
        }
    }
    progress$set(message = "[shiny] INFO, Loading General data", 
        value = 0.3)
    if (!all(c(names(Ref$DATA)[grep(pattern = paste(c("Bin.", 
        "boardTimeStamp", "gpsTimestamp"), collapse = "|"), x = names(Ref$DATA), 
        invert = T)], names(Influx$DATA)) %in% names(DF$General))) {
        DF$General <<- NULL
        DF.NULL$Init <<- TRUE
    }
} else {
    DF$General <<- NULL
    DF.NULL$Init <<- TRUE
}
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#897: if (extension(General.file()) == ".csv") {
    DF$General <- data.table::fread(General.file())
    if (!all("" %in% c(Config$all$Server$Influx.TZ, Config$all$Server$SOS.TZ))) {
        if (!"" %in% c(Config$all$Server$Influx.TZ)) {
            data.table::set(DF$General, j = "date", value = ymd_hms(DF$General[["date"]], 
                tz = Config$all$Server$Influx.TZ))
            data.table::set(DF$General, j = "date_PreDelay", 
                value = ymd_hms(DF$General[["date_PreDelay"]], 
                  tz = Config$all$Server$Influx.TZ))
        }
        else {
            data.table::set(DF$General, j = "date", value = ymd_hms(DF$General[["date"]], 
                tz = Config$all$Server$SOS.TZ))
            data.table::set(DF$General, j = "date_PreDelay", 
                value = ymd_hms(DF$General[["date_PreDelay"]], 
                  tz = Config$all$Server$SOS.TZ))
        }
    }
    else {
        data.table::set(DF$General, j = "date", value = ymd_hms(DF$General[["date"]], 
            tz = "UTC"))
        data.table::set(DF$General, j = "date_PreDelay", value = ymd_hms(DF$General[["date_PreDelay"]], 
            tz = "UTC"))
    }
} else if (extension(General.file()) == ".Rdata") {
    DF$General <- load_obj(General.file())
    if (!"data.table" %in% class(DF$General)) 
        DF$General <- data.table(DF$General, key = "date")
}
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#898: DF$General <- data.table::fread(General.file())
[1] "S:/Box Sync/AirSensEUR/Fieldtests/Shiny/ASE_Stations/40458D/General_data/General.csv"
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#900: if (!all("" %in% c(Config$all$Server$Influx.TZ, Config$all$Server$SOS.TZ))) {
    if (!"" %in% c(Config$all$Server$Influx.TZ)) {
        data.table::set(DF$General, j = "date", value = ymd_hms(DF$General[["date"]], 
            tz = Config$all$Server$Influx.TZ))
        data.table::set(DF$General, j = "date_PreDelay", value = ymd_hms(DF$General[["date_PreDelay"]], 
            tz = Config$all$Server$Influx.TZ))
    }
    else {
        data.table::set(DF$General, j = "date", value = ymd_hms(DF$General[["date"]], 
            tz = Config$all$Server$SOS.TZ))
        data.table::set(DF$General, j = "date_PreDelay", value = ymd_hms(DF$General[["date_PreDelay"]], 
            tz = Config$all$Server$SOS.TZ))
    }
} else {
    data.table::set(DF$General, j = "date", value = ymd_hms(DF$General[["date"]], 
        tz = "UTC"))
    data.table::set(DF$General, j = "date_PreDelay", value = ymd_hms(DF$General[["date_PreDelay"]], 
        tz = "UTC"))
}
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#901: if (!"" %in% c(Config$all$Server$Influx.TZ)) {
    data.table::set(DF$General, j = "date", value = ymd_hms(DF$General[["date"]], 
        tz = Config$all$Server$Influx.TZ))
    data.table::set(DF$General, j = "date_PreDelay", value = ymd_hms(DF$General[["date_PreDelay"]], 
        tz = Config$all$Server$Influx.TZ))
} else {
    data.table::set(DF$General, j = "date", value = ymd_hms(DF$General[["date"]], 
        tz = Config$all$Server$SOS.TZ))
    data.table::set(DF$General, j = "date_PreDelay", value = ymd_hms(DF$General[["date_PreDelay"]], 
        tz = Config$all$Server$SOS.TZ))
}
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#902: data.table::set(DF$General, j = "date", value = ymd_hms(DF$General[["date"]], 
    tz = Config$all$Server$Influx.TZ))
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#903: data.table::set(DF$General, j = "date_PreDelay", value = ymd_hms(DF$General[["date_PreDelay"]], 
    tz = Config$all$Server$Influx.TZ))
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#916: if ("V1" %in% names(DF$General)) DF$General[, `:=`(V1, NULL)]
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#919: if (!all(c("Absolute_humidity", "Td_deficit") %in% names(DF$General))) {
    if (all(c("Temperature", "Relative_humidity") %in% names(DF$General))) {
        DF$General$Absolute_humidity <- NA_real_
        DF$General$Td_deficit <- NA_real_
        both.Temp.Hum <- complete.cases(DF$General[, c("Temperature", 
            "Relative_humidity")])
        DF$General[both.Temp.Hum, "Absolute_humidity"] <- threadr::absolute_humidity(DF$General[["Temperature"]][both.Temp.Hum], 
            DF$General[["Relative_humidity"]][both.Temp.Hum])
        Td <- weathermetrics::humidity.to.dewpoint(rh = DF$General[["Relative_humidity"]][both.Temp.Hum], 
            t = DF$General[["Temperature"]][both.Temp.Hum], temperature.metric = "celsius")
        DF$General[both.Temp.Hum, `:=`(Td_deficit, DF$General[both.Temp.Hum, 
            "Temperature"] - Td)]
    }
}
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#929: if (!all(c("Ref.Absolute_humidity", "Ref.Td_deficit") %in% names(DF$General))) {
    if (all(c("Ref.Temp", "Ref.RH") %in% names(DF$General))) {
        DF$General$Ref.Absolute_humidity <- NA_real_
        DF$General$Ref.Td_deficit <- NA_real_
        Ref.both.Temp.Hum <- complete.cases(DF$General[, c("Ref.Temp", 
            "Ref.RH")])
        DF$General[Ref.both.Temp.Hum, "Ref.Absolute_humidity"] <- threadr::absolute_humidity(DF$General[["Ref.Temp"]][Ref.both.Temp.Hum], 
            DF$General[["Ref.RH"]])
        Td <- weathermetrics::humidity.to.dewpoint(rh = DF$General[Ref.both.Temp.Hum, 
            "Ref.RH"], t = DF$General[["Ref.Temp"]][Ref.both.Temp.Hum], 
            temperature.metric = "celsius")
        DF$General[Ref.both.Temp.Hum, `:=`(Ref.Td_deficit, DF$General[["Ref.Temp"]][Ref.both.Temp.Hum] - 
            Td)]
    }
}
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#930: if (all(c("Ref.Temp", "Ref.RH") %in% names(DF$General))) {
    DF$General$Ref.Absolute_humidity <- NA_real_
    DF$General$Ref.Td_deficit <- NA_real_
    Ref.both.Temp.Hum <- complete.cases(DF$General[, c("Ref.Temp", 
        "Ref.RH")])
    DF$General[Ref.both.Temp.Hum, "Ref.Absolute_humidity"] <- threadr::absolute_humidity(DF$General[["Ref.Temp"]][Ref.both.Temp.Hum], 
        DF$General[["Ref.RH"]])
    Td <- weathermetrics::humidity.to.dewpoint(rh = DF$General[Ref.both.Temp.Hum, 
        "Ref.RH"], t = DF$General[["Ref.Temp"]][Ref.both.Temp.Hum], 
        temperature.metric = "celsius")
    DF$General[Ref.both.Temp.Hum, `:=`(Ref.Td_deficit, DF$General[["Ref.Temp"]][Ref.both.Temp.Hum] - 
        Td)]
}
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#940: progress$set(message = "[shiny] INFO, Loading General data", 
    value = 0.3)
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#942: if (!all(c(names(Ref$DATA)[grep(pattern = paste(c("Bin.", "boardTimeStamp", 
    "gpsTimestamp"), collapse = "|"), x = names(Ref$DATA), invert = T)], 
    names(Influx$DATA)) %in% names(DF$General))) {
    DF$General <<- NULL
    DF.NULL$Init <<- TRUE
}
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#953: progress$set(message = "[Shiny] INFO, Initial DownloadSensor", 
    value = 0.4)
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#954: Download <<- reactiveValues(Sensor = DownloadSensor())
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
[Check_Download] INFO, Checking 
S:/Box Sync/AirSensEUR/Fieldtests/Shiny/ASE_Stations/40458D/General_data/airsenseur.db
S:/Box Sync/AirSensEUR/Fieldtests/Shiny/ASE_Stations/40458D/General_data/General.csv
S:/Box Sync/AirSensEUR/Fieldtests/Shiny/ASE_Stations/40458D/General_data/RefData.csv
S:/Box Sync/AirSensEUR/Fieldtests/Shiny/ASE_Stations/40458D/General_data/SOSData.csv 
S:/Box Sync/AirSensEUR/Fieldtests/Shiny/ASE_Stations/40458D/General_data/InfluxData.csv
 in S:/Box Sync/AirSensEUR/Fieldtests/Shiny/ASE_Stations/40458D/General_data
[Check_Download] INFO, sensor data are going to be retrieved. Start date for data download: 2020-01-06 18:04:00
[Check_Download] INFO, S:/Box Sync/AirSensEUR/Fieldtests/Shiny/ASE_Stations/40458D/General_data/RefData.csv does not exist. It is going to be created, data will be retrieved.
[Check_Download] INFO, sensor data are going to be retrieved. Start date for data download: 2020-01-06 18:03:00
[Check_Download] INFO, S:/Box Sync/AirSensEUR/Fieldtests/Shiny/ASE_Stations/40458D/General_data/SOSData.csv does not exist. It should be created, SOS sensor data should be retrieved.
[Check_Download] INFO, S:/Box Sync/AirSensEUR/Fieldtests/Shiny/ASE_Stations/40458D/General_data/airsenseur.db exists.
[Check_Download] INFO, The database S:/Box Sync/AirSensEUR/Fieldtests/Shiny/ASE_Stations/40458D/General_data/airsenseur.db includes the table 40458D with the columns: time, altitude, boardTimeStamp, gpsTimestamp, latitude, longitude, sampleEvaluatedVal, sampleRawVal, channel, name
[Check_Download] INFO, SOS sensor data are going to be retrieved. Start date for data download: 2020-01-06 18:03:00
$Ref.Rdata.file
[1] "S:/Box Sync/AirSensEUR/Fieldtests/Shiny/ASE_Stations/40458D/General_data/RefData.csv"

$Influx.Rdata.file
[1] "S:/Box Sync/AirSensEUR/Fieldtests/Shiny/ASE_Stations/40458D/General_data/InfluxData.csv"

$SOS.file
[1] "S:/Box Sync/AirSensEUR/Fieldtests/Shiny/ASE_Stations/40458D/General_data/SOSData.csv"

$General.Rdata.file
[1] "S:/Box Sync/AirSensEUR/Fieldtests/Shiny/ASE_Stations/40458D/General_data/General.csv"

$airsenseur.db.file
[1] "S:/Box Sync/AirSensEUR/Fieldtests/Shiny/ASE_Stations/40458D/General_data/airsenseur.db"

$WDinput
[1] "S:/Box Sync/AirSensEUR/Fieldtests/Shiny/ASE_Stations/40458D/General_data"

$ExistFil.data.db
[1] TRUE

$Retrieve.data.db
[1] TRUE

$DateIN.db.prev
[1] "2020-01-05T17:00:00Z"

$DateEND.db.prev
[1] "2020-01-06T18:03:00Z"

$ExistFil.data.Ref
[1] FALSE

$Retrieve.data.Ref
[1] TRUE

$DateIN.Ref.prev
NULL

$DateEND.Ref.prev
NULL

$Var.Ref.prev
NULL

$ExistFil.data.Influx
[1] TRUE

$Retrieve.data.Influx
[1] TRUE

$DateIN.Influx.prev
[1] "2020-01-05 17:00:00 UTC"

$DateEND.Influx.prev
[1] "2020-01-06 18:03:00 UTC"

$ExistFil.data.SOS
[1] FALSE

$Retrieve.data.SOS
[1] TRUE

$DateIN.SOS.prev
NULL

$DateEND.SOS.prev
NULL

$ExistFil.data.General
[1] TRUE

$Retrieve.data.General
[1] TRUE

$DateIN.General.prev
[1] "2020-01-05 17:01:00 UTC"

$DateEND.General.prev
[1] "2020-01-06 18:04:00 UTC"

-----------------------------------------------------------------------------------
$Ref.Rdata.file
[1] "S:/Box Sync/AirSensEUR/Fieldtests/Shiny/ASE_Stations/40458D/General_data/RefData.csv"

$Influx.Rdata.file
[1] "S:/Box Sync/AirSensEUR/Fieldtests/Shiny/ASE_Stations/40458D/General_data/InfluxData.csv"

$SOS.file
[1] "S:/Box Sync/AirSensEUR/Fieldtests/Shiny/ASE_Stations/40458D/General_data/SOSData.csv"

$General.Rdata.file
[1] "S:/Box Sync/AirSensEUR/Fieldtests/Shiny/ASE_Stations/40458D/General_data/General.csv"

$airsenseur.db.file
[1] "S:/Box Sync/AirSensEUR/Fieldtests/Shiny/ASE_Stations/40458D/General_data/airsenseur.db"

$WDinput
[1] "S:/Box Sync/AirSensEUR/Fieldtests/Shiny/ASE_Stations/40458D/General_data"

$ExistFil.data.db
[1] TRUE

$Retrieve.data.db
[1] TRUE

$DateIN.db.prev
[1] "2020-01-05T17:00:00Z"

$DateEND.db.prev
[1] "2020-01-06T18:03:00Z"

$ExistFil.data.Ref
[1] FALSE

$Retrieve.data.Ref
[1] TRUE

$DateIN.Ref.prev
NULL

$DateEND.Ref.prev
NULL

$Var.Ref.prev
NULL

$ExistFil.data.Influx
[1] TRUE

$Retrieve.data.Influx
[1] TRUE

$DateIN.Influx.prev
[1] "2020-01-05 17:00:00 UTC"

$DateEND.Influx.prev
[1] "2020-01-06 18:03:00 UTC"

$ExistFil.data.SOS
[1] FALSE

$Retrieve.data.SOS
[1] TRUE

$DateIN.SOS.prev
NULL

$DateEND.SOS.prev
NULL

$ExistFil.data.General
[1] TRUE

$Retrieve.data.General
[1] TRUE

$DateIN.General.prev
[1] "2020-01-05 17:01:00 UTC"

$DateEND.General.prev
[1] "2020-01-06 18:04:00 UTC"

debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#956: progress$set(message = "[Shiny] INFO, Loading SetTime file", 
    value = 0.35)
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#957: Set <<- reactiveValues(Time = SETTIME(DisqueFieldtestDir = DisqueFieldtestDir(), 
    General.t.Valid = DF$General, Influx.TZ = Config$all[["Server"]]$Influx.TZ, 
    SOS.TZ = Config$all[["Server"]]$SOS.TZ, Ref.TZ = Config$all[["Server"]]$ref.tzone, 
    DownloadSensor = Download$Sensor, Config = Config$all, sens2ref.shield = Config$all$sens2ref.shield))
[1] "S:/Box Sync/AirSensEUR/Fieldtests/Shiny/ASE_Stations/40458D"
-----------------------------------------------------------------------------------
[SETTIME] Info, the config file S:/Box Sync/AirSensEUR/Fieldtests/Shiny/ASE_Stations/40458D/General_data/40458D_SETTIME.cfg for the configuration of AirSensEUR exists
-----------------------------------------------------------------------------------
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#966: progress$set(message = "[Shiny] INFO, Loading indexes of data discarded during warming time of sensors", 
    value = 0.5)
   name.gas name.sensor          Out.Ref.IN         Out.Ref.END         Out.Sens.IN        Out.Sens.END Sens.Inval.Out Apply.Invalid            Valid.IN           Valid.END         Cov.Date.IN        Cov.Date.END
1:       CO        COA4 2020-01-05 17:01:00 2020-01-06 18:03:00 2020-01-05 17:01:00 2020-01-06 18:03:00           TRUE         FALSE 2020-01-05 17:01:00 2020-01-06 18:04:00 2020-01-05 17:01:00 2020-01-06 18:03:00
2:       NO        NOB4 2020-01-05 17:01:00 2020-01-06 18:03:00 2020-01-05 17:01:00 2020-01-06 18:03:00           TRUE         FALSE 2020-01-05 17:01:00 2020-01-06 18:04:00 2020-01-05 17:01:00 2020-01-06 18:03:00
3:      NO2     NO2B43F 2020-01-05 17:01:00 2020-01-06 18:03:00 2020-01-05 17:01:00 2020-01-06 18:03:00           TRUE         FALSE 2020-01-05 17:01:00 2020-01-06 18:04:00 2020-01-05 17:01:00 2020-01-06 18:03:00
4:       O3     OX_A431 2020-01-05 17:01:00 2020-01-06 18:03:00 2020-01-05 17:01:00 2020-01-06 18:03:00           TRUE         FALSE 2020-01-05 17:01:00 2020-01-06 18:04:00 2020-01-05 17:01:00 2020-01-06 18:03:00
            DateCal.IN         DateCal.END      DatePlotCal.IN     DatePlotCal.END         DateMeas.IN        DateMeas.END     DatePlotMeas.IN    DatePlotMeas.END
1: 2020-01-05 17:01:00 2020-01-06 18:03:00 2020-01-05 17:01:00 2020-01-06 18:03:00 2020-01-05 17:01:00 2020-01-06 18:03:00 2020-01-05 17:01:00 2020-01-06 18:03:00
2: 2020-01-05 17:01:00 2020-01-06 18:03:00 2020-01-05 17:01:00 2020-01-06 18:03:00 2020-01-05 17:01:00 2020-01-06 18:03:00 2020-01-05 17:01:00 2020-01-06 18:03:00
3: 2020-01-05 17:01:00 2020-01-06 18:03:00 2020-01-05 17:01:00 2020-01-06 18:03:00 2020-01-05 17:01:00 2020-01-06 18:03:00 2020-01-05 17:01:00 2020-01-06 18:03:00
4: 2020-01-05 17:01:00 2020-01-06 18:03:00 2020-01-05 17:01:00 2020-01-06 18:03:00 2020-01-05 17:01:00 2020-01-06 18:03:00 2020-01-05 17:01:00 2020-01-06 18:03:00
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#967: Warm <<- reactiveValues(Forced = FALSE)
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#968: if (file.exists(ind.warm.file())) init.ind.warm <- list.load(ind.warm.file()) else {
    init.ind.warm <- NULL
    Warm$Forced <<- TRUE
}
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#969: init.ind.warm <- NULL
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#970: Warm$Forced <<- TRUE
[1] "S:/Box Sync/AirSensEUR/Fieldtests/Shiny/ASE_Stations/40458D/General_data/ind_warm.RDS"
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#972: ind.warm <<- reactiveValues(out = init.ind.warm)
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#974: progress$set(message = "[Shiny] INFO, Loading indexes of data discarded outside temperature and humidity tolerance", 
    value = 0.5)
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#975: TRh <<- reactiveValues(Forced = FALSE)
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#976: if (file.exists(ind.TRh.file())) init.ind.TRh <- list.load(ind.TRh.file()) else {
    init.ind.TRh <- NULL
    TRh$Forced <<- TRUE
}
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#977: init.ind.TRh <- NULL
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#978: TRh$Forced <<- TRUE
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#980: ind.TRh <<- reactiveValues(out = init.ind.TRh)
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#982: progress$set(message = "[Shiny] INFO, Loading indexes of Invalid sensor data", 
    value = 0.6)
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#983: Inv <<- reactiveValues(Forced = FALSE)
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#984: if (file.exists(ind.Invalid.file())) init.ind.Invalid <- list.load(ind.Invalid.file()) else {
    init.ind.Invalid <- NULL
    Inv$Forced <<- TRUE
}
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#985: init.ind.Invalid <- NULL
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#986: Inv$Forced <<- TRUE
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#988: ind.Invalid <<- reactiveValues(out = init.ind.Invalid)
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#990: progress$set(message = "[Shiny] INFO, Loading indexes of outliers for sensor data", 
    value = 0.7)
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#991: Outliers.Sens <<- reactiveValues(Forced = FALSE)
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#992: if (file.exists(ind.sens.out.file())) Init.ind.sens <- list.load(ind.sens.out.file()) else {
    Init.ind.sens <- NULL
    Outliers.Sens$Forced <<- TRUE
}
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#993: Init.ind.sens <- NULL
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#994: Outliers.Sens$Forced <<- TRUE
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#996: ind.sens <<- reactiveValues(out = Init.ind.sens)
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#998: progress$set(message = "[Shiny] INFO, Loading indexes of outliers for reference data", 
    value = 0.8)
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#999: Outliers.Ref <<- reactiveValues(Forced = FALSE)
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#1000: Neg <<- reactiveValues(Forced = FALSE)
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#1001: if (file.exists(ind.ref.out.file()) && file.size(ind.ref.out.file()) > 
    0) init.ind.ref <- list.load(ind.ref.out.file()) else {
    init.ind.ref <- NULL
    Outliers.Ref$Forced <<- TRUE
}
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#1002: init.ind.ref <- NULL
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#1003: Outliers.Ref$Forced <<- TRUE
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#1005: ind.ref <<- reactiveValues(out = init.ind.ref)
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#1007: Conv <<- reactiveValues(Forced = FALSE)
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#1008: Cal <<- reactiveValues(Forced = FALSE)
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#1010: Covariates <- reactive({
    c(paste0("Out.", list.gas.reference2use()), INFLUX()[[2]], 
        "Absolute_humidity", "Td_deficit", "date", paste0(list.gas.sensor(), 
            "_modelled"), paste0(list.name.sensor(), "_volt"), 
        paste0("Out.", list.gas.sensor()), "longitude", "latitude")
})
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#1014: Covariates.Model <- reactive({
    c(paste0("Out.", list.gas.reference2use()), INFLUX()[[2]], 
        "Absolute_humidity", "Td_deficit", "date", paste0(list.gas.sensor(), 
            "_modelled"), paste0(list.name.sensor(), "_volt"), 
        paste0("Out.", list.gas.sensor()))
})
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#1019: initial.dir <- DirShiny
[1] "S:/Box Sync/AirSensEUR/Fieldtests/Shiny"
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#1021: cat("-----------------------------------------------------------------------------------\n")
-----------------------------------------------------------------------------------
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#1022: cat(paste0("[shiny] INFO creating the file system for data treatment at ", 
    DisqueFieldtestDir()), " if it does not exist\n")
[1] "S:/Box Sync/AirSensEUR/Fieldtests/Shiny/ASE_Stations/40458D"
-----------------------------------------------------------------------------------
[shiny] INFO, the OS platform is : windows
[shiny, isTcltk] INFO, ASE_Script is run under Rstudio
[shiny] INFO, internet is available
-----------------------------------------------------------------------------------
[Shiny] INFO, setting working directory
               Name                                       Value  Section
1           sysname                                     Windows   System
2           release                                     8.1 x64   System
3           version                                  build 9600   System
4          nodename                                D01RI1501926   System
5           machine                                      x86-64   System
6             login                                     gerbomi   System
7              user                                     gerbomi   System
8    effective_user                                     gerbomi   System
9         Directory     S:/Box Sync/AirSensEUR/Fieldtests/Shiny   System
10          Version                R version 3.6.1 (2019-07-05)        R
11       shinyalert                         1.0.0.9004 NA NA NA Packages
12          threadr                    0.8.665 NA NA 2019-02-26 Packages
13      sensorweb4R                                0.1 NA NA NA Packages
14       kableExtra     1.1.0 CRAN CRAN 2019-03-16 20:10:03 UTC Packages
15        captioner                  2.2.3 CRAN CRAN 2015-07-15 Packages
16           pander                  0.6.3 CRAN CRAN 2018-11-06 Packages
17        flextable     0.5.5 CRAN CRAN 2019-06-25 09:20:03 UTC Packages
18      formattable                0.2.0.1 CRAN CRAN 2016-08-05 Packages
19   weathermetrics                  1.2.2 CRAN CRAN 2016-05-19 Packages
20          caTools               1.17.1.2 CRAN CRAN 2014-04-21 Packages
21       doParallel    1.0.15 CRAN CRAN 2019-08-02 04:40:02 UTC Packages
22        iterators    1.0.12 CRAN CRAN 2019-07-26 22:50:02 UTC Packages
23          foreach     1.4.7 CRAN CRAN 2019-07-27 23:00:35 UTC Packages
24         RcppRoll                  0.3.0 CRAN CRAN 2018-06-05 Packages
25            rgeos                  0.5-2 CRAN CRAN 2019-10-02 Packages
26           raster                  3.0-7 CRAN CRAN 2019-09-22 Packages
27         maptools                  0.9-8 CRAN CRAN 2019-10-03 Packages
28           plotly     4.9.1 CRAN CRAN 2019-11-07 19:00:02 UTC Packages
29           GGally     1.4.0 CRAN CRAN 2018-05-17 23:31:19 UTC Packages
30   berryFunctions                 1.18.2 CRAN CRAN 2019-04-29 Packages
31         OSMscale                  0.5.1 CRAN CRAN 2017-04-12 Packages
32          webshot     0.5.1 CRAN CRAN 2018-09-28 21:40:02 UTC Packages
33      htmlwidgets     1.5.1 CRAN CRAN 2019-10-08 08:40:02 UTC Packages
34        htmltools     0.4.0 CRAN CRAN 2019-10-04 23:00:08 UTC Packages
35         dygraphs   1.1.1.6 CRAN CRAN 2018-07-11 22:00:03 UTC Packages
36          leaflet     2.0.2 CRAN CRAN 2018-08-27 14:12:16 UTC Packages
37            knitr      1.25 CRAN CRAN 2019-09-18 09:10:07 UTC Packages
38           xtable                  1.8-4 CRAN CRAN 2019-04-08 Packages
39        rmarkdown      1.16 CRAN CRAN 2019-10-01 19:10:09 UTC Packages
40          R.utils     2.9.0 CRAN CRAN 2019-06-13 07:30:24 UTC Packages
41             R.oo    1.23.0 CRAN CRAN 2019-11-03 08:40:02 UTC Packages
42      R.methodsS3                  1.7.1 CRAN CRAN 2016-02-15 Packages
43            shape     1.4.4 CRAN CRAN 2018-02-07 16:21:49 UTC Packages
44           fields                    9.9 CRAN CRAN 2019-10-05 Packages
45             maps                  3.3.0 CRAN CRAN 2018-04-03 Packages
46             spam                  2.4-0 CRAN CRAN 2019-11-01 Packages
47        dotCall64                  1.0-0 CRAN CRAN 2018-07-30 Packages
48            rlist                0.4.6.1 CRAN CRAN 2016-04-04 Packages
49              BMS                  0.3.4 CRAN CRAN 2015-11-23 Packages
50       data.table    1.12.6 CRAN CRAN 2019-10-18 22:20:10 UTC Packages
51          polynom     1.4-0 CRAN CRAN 2019-03-22 09:50:06 UTC Packages
52         corrplot                   0.84 CRAN CRAN 2017-10-16 Packages
53             mgcv    1.8-28 CRAN CRAN 2019-03-21 11:40:07 UTC Packages
54             nlme                 3.1-140 CRAN CRAN 2019-05-1 Packages
55            sqldf                 0.4-11 CRAN CRAN 2017-06-23 Packages
56           gsubfn                    0.7 CRAN CRAN 2018-03-15 Packages
57            proto         1.0.0 CRAN CRAN 2016-10-29 00:23:07 Packages
58          RSQLite                  2.1.2 CRAN CRAN 2019-07-23 Packages
59            RODBC                 1.3-16 CRAN CRAN 2019-09-02 Packages
60         jsonlite       1.6 CRAN CRAN 2018-12-07 12:50:02 UTC Packages
61              XML 3.98-1.20 CRAN CRAN 2019-06-06 06:23:32 UTC Packages
62          RJSONIO   1.3-1.3 CRAN CRAN 2019-10-03 15:27:15 UTC Packages
63          reshape     0.8.8 CRAN CRAN 2018-10-23 18:50:03 UTC Packages
64         quantreg      5.51 CRAN CRAN 2019-08-07 17:10:02 UTC Packages
65          SparseM      1.77 CRAN CRAN 2017-04-23 18:26:30 UTC Packages
66       minpack.lm         1.2-1 CRAN CRAN 2016-11-20 16:40:02 Packages
67         limSolve   1.5.5.3 CRAN CRAN 2017-08-14 15:14:43 UTC Packages
68         devtools     2.2.1 CRAN CRAN 2019-09-24 15:00:02 UTC Packages
69          usethis     1.5.1 CRAN CRAN 2019-07-04 11:00:05 UTC Packages
70        backports     1.1.5 CRAN CRAN 2019-10-02 20:20:02 UTC Packages
71       colorspace                  1.4-1 CRAN CRAN 2019-03-18 Packages
72               sp     1.3-1 CRAN CRAN 2018-06-05 13:58:03 UTC Packages
73         processx     3.4.1 CRAN CRAN 2019-07-18 06:35:54 UTC Packages
74             httr     1.4.1 CRAN CRAN 2019-08-05 14:30:02 UTC Packages
75            RCurl 1.95-4.12 CRAN CRAN 2019-03-04 09:45:33 UTC Packages
76           bitops                  1.0-6 CRAN CRAN 2013-08-17 Packages
77             curl       4.2 CRAN CRAN 2019-09-24 12:20:02 UTC Packages
78        geosphere                 1.5-10 CRAN CRAN 2019-05-25 Packages
79    futile.logger                  1.4.3 CRAN CRAN 2016-07-10 Packages
80         lambda.r                  1.2.4 CRAN CRAN 2019-09-15 Packages
81   futile.options                  1.0.1 CRAN CRAN 2018-04-20 Packages
82              xts    0.11-2 CRAN CRAN 2018-11-05 14:10:03 UTC Packages
83              zoo                  1.8-6 CRAN CRAN 2019-05-27 Packages
84        lubridate     1.7.4 CRAN CRAN 2018-04-11 10:08:43 UTC Packages
85          openair                  2.6-6 CRAN CRAN 2019-09-23 Packages
86           dbplyr     1.4.2 CRAN CRAN 2019-06-17 20:00:04 UTC Packages
87            broom     0.5.2 CRAN CRAN 2019-04-07 19:52:53 UTC Packages
88          forcats     0.4.0 CRAN CRAN 2019-02-17 14:40:02 UTC Packages
89          stringr     1.4.0 CRAN CRAN 2019-02-10 03:40:03 UTC Packages
90            dplyr     0.8.3 CRAN CRAN 2019-07-04 15:50:02 UTC Packages
91            purrr     0.3.3 CRAN CRAN 2019-10-18 12:40:05 UTC Packages
92            readr     1.3.1 CRAN CRAN 2018-12-21 09:40:02 UTC Packages
93            tidyr     1.0.0 CRAN CRAN 2019-09-11 23:00:03 UTC Packages
94           tibble     2.1.3 CRAN CRAN 2019-06-06 13:40:03 UTC Packages
95          ggplot2     3.2.1 CRAN CRAN 2019-08-10 22:30:13 UTC Packages
96        tidyverse     1.2.1 CRAN CRAN 2017-11-14 18:09:56 UTC Packages
97             plyr         1.8.4 CRAN CRAN 2016-06-08 10:40:15 Packages
98          stringi                  1.4.3 CRAN CRAN 2019-03-12 Packages
99    rhandsontable     0.3.7 CRAN CRAN 2018-11-20 05:50:03 UTC Packages
100              DT       0.9 CRAN CRAN 2019-09-17 09:10:10 UTC Packages
101    shinyWidgets     0.4.9 CRAN CRAN 2019-09-10 16:40:05 UTC Packages
102 shinycssloaders                  0.2.0 CRAN CRAN 2017-05-03 Packages
103         shinyBS                   0.61 CRAN CRAN 2015-03-30 Packages
104     shinythemes     1.1.2 CRAN CRAN 2018-11-06 17:00:03 UTC Packages
105         shinyjs       1.0 CRAN CRAN 2018-01-08 22:21:13 UTC Packages
106     envDocument                  2.4.1 CRAN CRAN 2019-08-08 Packages
107           shiny     1.4.0 CRAN CRAN 2019-10-10 12:50:02 UTC Packages
108      tidyselect     0.2.5 CRAN CRAN 2018-10-11 13:00:03 UTC Packages
109         lpSolve               5.6.13.3 CRAN CRAN 2015-09-18 Packages
110         munsell     0.5.0 CRAN CRAN 2018-06-12 04:29:06 UTC Packages
111       codetools    0.2-16 CRAN CRAN 2018-12-24 12:40:05 UTC Packages
112           chron    2.3-54 CRAN CRAN 2019-08-26 06:58:12 UTC Packages
113           withr     2.1.2 CRAN CRAN 2018-03-15 22:39:56 UTC Packages
114            uuid         0.1-2 CRAN CRAN 2015-07-28 08:03:46 Packages
115      rstudioapi      0.10 CRAN CRAN 2019-03-19 20:30:03 UTC Packages
116         officer     0.3.5 CRAN CRAN 2019-06-23 18:50:03 UTC Packages
117           rJava    0.9-11 CRAN CRAN 2019-03-29 06:53:31 UTC Packages
118           bit64                  0.9-7 CRAN CRAN 2017-05-07 Packages
119       rprojroot     1.3-2 CRAN CRAN 2018-01-03 15:36:24 UTC Packages
120           vctrs     0.2.0 CRAN CRAN 2019-07-05 23:00:04 UTC Packages
121        generics     0.0.2 CRAN CRAN 2018-11-29 13:20:03 UTC Packages
122            xfun      0.10 CRAN CRAN 2019-10-01 18:20:02 UTC Packages
123              R6     2.4.0 CRAN CRAN 2019-02-14 19:42:14 UTC Packages
124        markdown       1.1 CRAN CRAN 2019-08-07 16:30:02 UTC Packages
125      assertthat     0.2.1 CRAN CRAN 2019-03-21 14:53:46 UTC Packages
126        promises     1.1.0 CRAN CRAN 2019-10-04 23:00:05 UTC Packages
127          scales     1.0.0 CRAN CRAN 2018-08-09 10:10:03 UTC Packages
128          gtable     0.3.0 CRAN CRAN 2019-03-25 19:50:02 UTC Packages
129           rlang     0.4.1 CRAN CRAN 2019-10-24 09:20:03 UTC Packages
130    MatrixModels                  0.4-1 CRAN CRAN 2015-08-22 Packages
131         zeallot     0.1.0 CRAN CRAN 2018-01-28 16:14:13 UTC Packages
132     systemfonts     0.1.1 CRAN CRAN 2019-07-01 12:50:02 UTC Packages
133         splines                              3.6.1 NA NA NA Packages
134           rgdal                  1.4-7 CRAN CRAN 2019-10-25 Packages
135        lazyeval     0.2.2 CRAN CRAN 2019-03-15 17:50:07 UTC Packages
136          hexbin    1.27.3 CRAN CRAN 2019-05-14 14:50:03 UTC Packages
137            yaml                  2.2.0 CRAN CRAN 2018-07-20 Packages
138           abind                  1.4-5 CRAN CRAN 2016-06-19 Packages
139          modelr     0.1.5 CRAN CRAN 2019-08-08 14:20:02 UTC Packages
140       crosstalk         1.0.0 CRAN CRAN 2016-12-21 08:30:32 Packages
141          httpuv     1.5.2 CRAN CRAN 2019-09-11 05:40:02 UTC Packages
142           tcltk                              3.6.1 NA NA NA Packages
143        ellipsis     0.3.0 CRAN CRAN 2019-09-20 20:40:02 UTC Packages
144    RColorBrewer                  1.1-2 CRAN CRAN 2014-12-07 Packages
145     sessioninfo     1.1.1 CRAN CRAN 2018-11-05 17:20:02 UTC Packages
146            Rcpp                  1.0.1 CRAN CRAN 2019-03-16 Packages
147       base64enc         0.1-3 CRAN CRAN 2015-07-28 08:03:37 Packages
148              ps     1.3.0 CRAN CRAN 2018-12-21 14:50:03 UTC Packages
149     prettyunits         1.0.2 CRAN CRAN 2015-07-13 04:09:56 Packages
150           haven     2.1.1 CRAN CRAN 2019-07-04 14:50:03 UTC Packages
151         cluster                  2.1.0 CRAN CRAN 2019-06-07 Packages
152              fs     1.3.1 CRAN CRAN 2019-05-06 22:50:03 UTC Packages
153        magrittr           1.5 CRAN CRAN 2014-11-22 19:15:57 Packages
154         pkgload     1.0.2 CRAN CRAN 2018-10-29 20:30:03 UTC Packages
155             hms                  0.5.2 CRAN CRAN 2019-10-30 Packages
156            mime       0.7 CRAN CRAN 2019-06-11 20:10:03 UTC Packages
157        evaluate      0.14 CRAN CRAN 2019-05-28 15:50:02 UTC Packages
158          readxl     1.3.1 CRAN CRAN 2019-03-13 16:30:02 UTC Packages
159        testthat     2.3.0 CRAN CRAN 2019-11-05 22:50:02 UTC Packages
160        compiler                              3.6.1 NA NA NA Packages
161              V8       2.3 CRAN CRAN 2019-07-02 10:51:07 UTC Packages
162          crayon     1.3.4 CRAN CRAN 2017-09-16 19:49:46 UTC Packages
163           later     1.0.0 CRAN CRAN 2019-10-04 05:00:02 UTC Packages
164             DBI                  1.0.0 CRAN CRAN 2018-05-02 Packages
165         formatR       1.7 CRAN CRAN 2019-06-11 20:00:03 UTC Packages
166            MASS               7.3-51.4 CRAN CRAN 2019-03-31 Packages
167          Matrix                 1.2-17 CRAN CRAN 2019-03-11 Packages
168             cli     1.1.0 CRAN CRAN 2019-03-19 10:43:26 UTC Packages
169        quadprog                  1.5-7 CRAN CRAN 2019-05-05 Packages
170       pkgconfig     2.0.3 CRAN CRAN 2019-09-22 09:20:02 UTC Packages
171         foreign                 0.8-71 CRAN CRAN 2018-07-20 Packages
172            xml2     1.2.2 CRAN CRAN 2019-08-09 12:10:03 UTC Packages
173           rvest     0.3.5 CRAN CRAN 2019-11-08 23:10:02 UTC Packages
174           callr     3.3.2 CRAN CRAN 2019-09-22 09:50:02 UTC Packages
175          digest                 0.6.20 CRAN CRAN 2019-07-04 Packages
176      cellranger         1.1.0 CRAN CRAN 2016-07-27 03:17:48 Packages
177         gdtools     0.2.1 CRAN CRAN 2019-10-14 15:30:02 UTC Packages
178   OpenStreetMap     0.3.4 CRAN CRAN 2019-05-31 17:40:02 UTC Packages
179       lifecycle     0.1.0 CRAN CRAN 2019-08-01 12:50:05 UTC Packages
180         mapproj                  1.2.6 CRAN CRAN 2018-03-29 Packages
181            desc     1.2.0 CRAN CRAN 2018-05-01 20:48:05 UTC Packages
182     viridisLite     0.3.0 CRAN CRAN 2018-02-01 22:45:56 UTC Packages
183          pillar     1.4.2 CRAN CRAN 2019-06-29 16:40:03 UTC Packages
184         lattice                0.20-38 CRAN CRAN 2018-11-01 Packages
185         fastmap     1.0.1 CRAN CRAN 2019-10-08 05:20:02 UTC Packages
186        pkgbuild     1.0.6 CRAN CRAN 2019-10-09 14:00:02 UTC Packages
187            glue     1.3.1 CRAN CRAN 2019-03-12 22:30:02 UTC Packages
188         remotes     2.1.0 CRAN CRAN 2019-06-24 21:30:03 UTC Packages
189             zip     2.0.4 CRAN CRAN 2019-09-01 08:50:02 UTC Packages
190             bit                 1.1-14 CRAN CRAN 2018-04-11 Packages
191            blob     1.2.0 CRAN CRAN 2019-07-09 11:40:03 UTC Packages
192    latticeExtra                 0.6-28 CRAN CRAN 2016-01-09 Packages
193         memoise     1.1.0 CRAN CRAN 2017-04-21 05:54:22 UTC Packages
194          kimisc                    0.4 CRAN CRAN 2017-12-17 Packages
[shiny, isTcltk] INFO, directory from where the script is run: S:/Box Sync/AirSensEUR/Fieldtests/Shiny
[Shiny] INFO, setting working directory to S:/Box Sync/AirSensEUR/Fieldtests/Shiny
-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
[Global] INFO, checking presence of necessary files (ASEconfig_xx.R and Functions4ASE.R). Then setting the Working Directory.
[Global] INFO, file S:/Box Sync/AirSensEUR/Fieldtests/Shiny/Functions4ASE.R found and ready to be sourced
-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
[Global] INFO, checking presence of necessary file 151016 Sensor_Toolbox.R.
[Global] INFO, file S:/Box Sync/AirSensEUR/Fieldtests/Shiny/151016 Sensor_Toolbox.R found and ready to be sourced
-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
[Global] AirSensEUR config file found: ASEconfig40458D.R
 [Global] AirSensEUR config file found: ASEconfigAirSensEUR00.R
 [Global] AirSensEUR config file found: ASEconfigAirSensEUR15.R
 [Global] AirSensEUR config file found: ASEconfigATN01.R
 [Global] AirSensEUR config file found: ASEconfigHMS_1.R
 [Global] AirSensEUR config file found: ASEconfigJRC_01.R
 [Global] AirSensEUR config file found: ASEconfigJRC_02.R
 [Global] AirSensEUR config file found: ASEconfigJRC_03.R
 [Global] AirSensEUR config file found: ASEconfigJRC_04.R
 [Global] AirSensEUR config file found: ASEconfigJRC_05.R
 [Global] AirSensEUR config file found: ASEconfigJRC_06.R
 [Global] AirSensEUR config file found: ASEconfigJRC_07.R
 [Global] AirSensEUR config file found: ASEconfigJRC_11.R
 [Global] AirSensEUR config file found: ASEconfigJRC_14.R
 [Global] AirSensEUR config file found: ASEconfigJRC_16.R
 [Global] AirSensEUR config file found: ASEconfigJRC_18.R
 [Global] AirSensEUR config file found: ASEconfigLANUV_01.R
 [Global] AirSensEUR config file found: ASEconfigLANUV02.R
 [Global] AirSensEUR config file found: ASEconfigLANUV03.R
 [Global] AirSensEUR config file found: ASEconfigNILU_P1.R
 [Global] AirSensEUR config file found: ASEconfigNL_01mim_WG42.R
 [Global] AirSensEUR config file found: ASEconfigNL_01min.R
 [Global] AirSensEUR config file found: ASEconfigNL_02min.R
 [Global] AirSensEUR config file found: ASEconfigNL_03min.R
 [Global] AirSensEUR config file found: ASEconfigNL_04min.R
 [Global] AirSensEUR config file found: ASEconfigNL_05min.R
 [Global] AirSensEUR config file found: ASEconfigP2.R
 [Global] AirSensEUR config file found: ASEconfigRIVM08.R
 [Global] AirSensEUR config file found: ASEconfigRIVMas01.R
 [Global] AirSensEUR config file found: ASEconfigRIVMas02.R
 [Global] AirSensEUR config file found: ASEconfigRIVMas03.R
 [Global] AirSensEUR config file found: ASEconfigRIVMas04.R
 [Global] AirSensEUR config file found: ASEconfigRIVMas05.R
 [Global] AirSensEUR config file found: ASEconfigRIVMas05min.R
 [Global] AirSensEUR config file found: ASEconfigRIVMas06.R
 [Global] AirSensEUR config file found: ASEconfigRIVMas07.R
 [Global] AirSensEUR config file found: ASEconfigRIVMas08.R
 [Global] AirSensEUR config file found: ASEconfigRIVMas09.R
 [Global] AirSensEUR config file found: ASEconfigRIVMas10.R
 [Global] AirSensEUR config file found: ASEconfigRIVMas11.R
 [Global] AirSensEUR config file found: ASEconfigRIVMas12.R
-----------------------------------------------------------------------------------
[Global] INFO, sourcing 151016 Sensor_Toolbox.R and Funtions4ASE.R
-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
[Global] INFO, Check or install packages needed to run the script
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
[Global] INFO, package 52North/sensorweb4R already installed
[Global] INFO, Package 52North/sensorweb4R loaded
[Global] INFO, package skgrange/threadr already installed
[Global] INFO, Package skgrange/threadr loaded
[Global] INFO, package daattali/shinyalert already installed
[Global] INFO, Package daattali/shinyalert loaded
[Global] INFO, List of installed packages
  [1] .GlobalEnv              package:shinyalert      package:threadr         package:sensorweb4R     package:kableExtra      package:captioner       package:pander          package:flextable       package:formattable    
 [10] package:weathermetrics  package:caTools         package:doParallel      package:parallel        package:iterators       package:foreach         package:RcppRoll        package:rgeos           package:raster         
 [19] package:maptools        package:plotly          package:GGally          package:berryFunctions  package:OSMscale        package:webshot         package:htmlwidgets     package:htmltools       package:dygraphs       
 [28] package:leaflet         package:knitr           package:xtable          package:rmarkdown       package:R.utils         package:R.oo            package:R.methodsS3     package:tools           package:shape          
 [37] package:fields          package:maps            package:spam            package:grid            package:dotCall64       package:rlist           package:BMS             package:data.table      package:polynom        
 [46] package:corrplot        package:mgcv            package:nlme            package:sqldf           package:gsubfn          package:proto           package:RSQLite         package:RODBC           package:jsonlite       
 [55] package:XML             package:RJSONIO         package:reshape         package:quantreg        package:SparseM         package:minpack.lm      package:limSolve        package:devtools        package:usethis        
 [64] package:backports       package:colorspace      package:sp              package:processx        package:httr            package:RCurl           package:bitops          package:curl            package:geosphere      
 [73] package:futile.logger   package:lambda.r        package:futile.options  package:xts             package:zoo             package:lubridate       package:openair         package:dbplyr          package:broom          
 [82] package:forcats         package:stringr         package:dplyr           package:purrr           package:readr           package:tidyr           package:tibble          package:ggplot2         package:tidyverse      
 [91] package:plyr            package:stringi         package:rhandsontable   package:DT              package:shinyWidgets    package:shinycssloaders package:shinyBS         package:shinythemes     package:shinyjs        
[100] package:envDocument     package:shiny           tools:rstudio           package:stats           package:graphics        package:grDevices       package:utils           package:datasets        package:methods        
[109] Autoloads               package:base           

Called from: eval(expr, p)
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#649: ASE_name <- reactive({
    cc <- basename(input$Selected)
    for (i in c("\\.[[:alnum:]]+$", "ASEconfig")) cc <- sub(pattern = i, 
        replacement = "", basename(as.character(cc)))
    return(cc)
})
Called from: eval(expr, p)
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#655: ASE_name.List <- reactive({
    cc <- basename(input$Config_Files)
    for (i in c("\\.[[:alnum:]]+$", "ASEconfig")) cc <- sub(pattern = i, 
        replacement = "", basename(as.character(cc)))
    return(cc)
})
Called from: eval(expr, p)
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#2474: input$Save
Called from: eval(expr, p)
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#656: cc <- basename(input$Config_Files)
Called from: eval(expr, p)
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#834: progress$set(message = "[Shiny] INFO, Loading config file", value = 0.1)
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#835: Config <<- reactiveValues(all = CONFIG(DirShiny, input$Config_Files))
debugging in: CONFIG(DirShiny, input$Config_Files)
debug at S:/Box Sync/AirSensEUR/Fieldtests/Shiny/Functions4ASE.R#3876: {
    cat("-----------------------------------------------------------------------------------\n")
    ASE_name <- basename(ASEconfig)
    for (i in c("\\.[[:alnum:]]+$", "ASEconfig")) ASE_name <- sub(pattern = i, 
        replacement = "", basename(as.character(ASE_name)))
    DisqueFieldtestDir <- file.path(DisqueFieldtest, "ASE_Stations", 
        ASE_name)
    File_Server_cfg <- list.files(path = file.path(DisqueFieldtestDir, 
        "General_data"), pattern = paste0(ASE_name, "_Servers.cfg"))
    if (!identical(File_Server_cfg, character(0))) {
        File_Server_cfg <- file.path(DisqueFieldtestDir, "General_data", 
            paste0(ASE_name, "_Servers.cfg"))
        if (file.exists(File_Server_cfg)) {
            cfg <- transpose(fread(file = File_Server_cfg, header = FALSE, 
                na.strings = c("", "NA", "<NA>")), fill = NA, 
                make.names = 1)
            cat(paste0("[CONFIG] Info, the config file ", File_Server_cfg, 
                " for the configuration of servers exists"), 
                sep = "\n")
            if ("AirsensEur.name" %in% names(cfg)) 
                names(cfg)[which(names(cfg) == "AirsensEur.name")] <- "AirSensEur.name"
            if (!"UserMinsAvg" %in% names(cfg)) 
                cfg$UserMinsAvg <- cfg$UserMins
            Vector.type <- c("PROXY", "Down.Influx", "Down.SOS", 
                "Down.Ref")
            Vector.type <- Vector.type[Vector.type %in% names(cfg)]
            for (j in Vector.type) set(cfg, j = j, value = as.logical(cfg[[j]]))
            Vector.type <- c("PORT", "Port", "UserMins", "UserMinsAvg", 
                "Delay")
            Vector.type <- Vector.type[Vector.type %in% names(cfg)]
            for (j in Vector.type) set(cfg, j = j, value = as.numeric(cfg[[j]]))
        }
        else {
            my_message <- paste0("[CONFIG] ERROR, no server config file for the AirSensEUR box. \n", 
                "The App is going to crash. This AirSensEUR cannot be selected.\n")
            cat(my_message)
            if (shiny) 
                shinyalert(title = "ERROR Config file", text = my_message, 
                  closeOnEsc = TRUE, closeOnClickOutside = TRUE, 
                  html = FALSE, type = "error", showConfirmButton = TRUE, 
                  showCancelButton = FALSE, confirmButtonText = "OK", 
                  confirmButtonCol = "#AEDEF4", timer = 0, imageUrl = "", 
                  animation = FALSE)
        }
    }
    else {
        my_message <- paste0("[CONFIG] ERROR, no server config file for the AirSensEUR box. \n", 
            "The App is going to crash. This AirSensEUR cannot be selected.\n")
        cat(my_message)
        if (shiny) 
            shinyalert(title = "ERROR Config file", text = my_message, 
                closeOnEsc = TRUE, closeOnClickOutside = TRUE, 
                html = FALSE, type = "error", showConfirmButton = TRUE, 
                showCancelButton = FALSE, confirmButtonText = "OK", 
                confirmButtonCol = "#AEDEF4", timer = 0, imageUrl = "", 
                animation = FALSE)
    }
    File_cfg <- list.files(path = file.path(DisqueFieldtestDir, 
        "General_data"), pattern = paste0(ASE_name, ".cfg"))
    if (!identical(File_cfg, character(0))) {
        File_cfg <- file.path(DisqueFieldtestDir, "General_data", 
            paste0(ASE_name, ".cfg"))
        if (file.exists(File_cfg)) {
            cat(paste0("[CONFIG] Info, the config file ", File_cfg, 
                " for the configuration of AirSensEUR exists"), 
                sep = "\n")
            sens2ref <- data.table::transpose(fread(file = File_cfg, 
                header = FALSE, na.strings = c("", "NA", "<NA>"), 
                fill = TRUE), fill = NA, make.names = 1)
            if ("V1" %in% names(sens2ref)) 
                sens2ref[, `:=`(V1, NULL)]
            sens2ref.order <- sens2ref$name.gas
            if (is.null(key(sens2ref))) 
                sens2ref <- data.table::setkey(x = sens2ref, 
                  key = "name.gas")
            sens2ref$Cal.Line <- sapply(seq_along(sens2ref$Cal.Line), 
                function(l) {
                  if (!is.na(sens2ref$Cal.Line[l])) {
                    if (sens2ref$Cal.Line[l] == "Previous calibration") {
                      return("Prediction with previous calibration")
                    }
                    else if (sens2ref$Cal.Line[l] == "New calibration with current data") {
                      return("Calibration with current data")
                    }
                    else if (sens2ref$Cal.Line[l] == "Calibration with slope and intercept") {
                      return("Calibration with slope and intercept")
                    }
                    else return("Prediction with previous calibration")
                  }
                  else return(NA)
                })
            if (!"Sync.Cal" %in% names(sens2ref)) 
                sens2ref$Sync.Cal <- FALSE
            if (!"Sync.Pred" %in% names(sens2ref)) 
                sens2ref$Sync.Pred <- FALSE
            if (!"ubsRM" %in% names(sens2ref)) {
                if (!"uxi" %in% names(sens2ref)) {
                  sens2ref$ubsRM <- rep(0, times = nrow(sens2ref))
                }
                else sens2ref$ubsRM <- sens2ref$uxi
            }
            if (!"ubss" %in% names(sens2ref)) {
                if (!"uxi" %in% names(sens2ref)) {
                  sens2ref$ubss <- rep(0, times = nrow(sens2ref))
                }
                else {
                  sens2ref$ubss <- sens2ref$uxi
                  sens2ref[, `:=`(uxi, NULL)]
                }
            }
            Vector.type <- c("Ref.rm.Out", "Sens.Inval.Out", 
                "Apply.Invalid", "remove.neg", "Sens.rm.Out", 
                "Neg.mod", "Sync.Cal", "Sync.Pred")
            Vector.type <- Vector.type[Vector.type %in% names(sens2ref)]
            for (j in Vector.type) set(sens2ref, j = j, value = as.logical(gsub(" ", 
                "", sens2ref[[j]])))
            Vector.type <- c("Ref.window", "Ref.threshold", "Ref.Ymin", 
                "Ref.Ymax", "Ref.ThresholdMin", "Ref.iterations", 
                "Gain", "Intercept", "Slope", "Sens.window", 
                "Sens.threshold", "Sens.Ymin", "Sens.Ymax", "Sens.ThresholdMin", 
                "Sens.iterations", "ubsRM", "ubss", "Rload", 
                "TIA_Gain", "GAIN", "Int_Z", "Bias_Sign", "Bias", 
                "Ref", "RefAD", "RefAFE", "board.zero.set", "BIAIS", 
                "temp.thres.min", "temp.thres.max", "rh.thres.min", 
                "rh.thres.max", "hoursWarming")
            Vector.type <- Vector.type[Vector.type %in% names(sens2ref)]
            for (j in Vector.type) set(sens2ref, j = j, value = as.numeric(gsub(" ", 
                "", sens2ref[[j]])))
        }
        else {
            my_message <- paste0("[CONFIG] ERROR, no config file for the AirSensEUR box. \n", 
                "The App is going to crash. This AirSensEUR cannot be selected.\n")
            cat(my_message)
            if (shiny) 
                shinyalert(title = "ERROR Config file", text = my_message, 
                  closeOnEsc = TRUE, closeOnClickOutside = TRUE, 
                  html = FALSE, type = "error", showConfirmButton = TRUE, 
                  showCancelButton = FALSE, confirmButtonText = "OK", 
                  confirmButtonCol = "#AEDEF4", timer = 0, imageUrl = "", 
                  animation = FALSE)
        }
        if (is.null(sens2ref.shield)) {
            Shield.file <- file.path(DisqueFieldtest, "Shield_Files", 
                cfg$asc.File)
            if (file.exists(Shield.file)) {
                sens2ref.shield <- ASEPanel04Read(ASEPanel04File = Shield.file)
            }
            else {
                my_message <- paste0("[CONFIG] ERROR, no chemical shield config file for the AirSensEUR box. \n", 
                  "The App is going to crash. This AirSensEUR cannot be selected.\n")
                if (shiny) 
                  shinyalert(title = "ERROR Config file", text = my_message, 
                    closeOnEsc = TRUE, closeOnClickOutside = TRUE, 
                    html = FALSE, type = "error", showConfirmButton = TRUE, 
                    showCancelButton = FALSE, confirmButtonText = "OK", 
                    confirmButtonCol = "#AEDEF4", timer = 0, 
                    imageUrl = "", animation = FALSE)
                return(my_message)
            }
            if (!"data.table" %in% class(sens2ref.shield)) 
                sens2ref.shield <- data.table::data.table(sens2ref.shield, 
                  key = "name.gas")
            sens2ref.shield <- sens2ref.shield[match(na.omit(sens2ref.shield[["gas.sensor"]]), 
                na.omit(sens2ref.shield[["gas.sensor"]]))]
            sens2ref.cols2change <- intersect(names(sens2ref), 
                names(sens2ref.shield))
            setcolorder(sens2ref.shield, sens2ref.cols2change)
            if (!isTRUE(all.equal(sens2ref.shield, sens2ref[match(na.omit(sens2ref.shield[["gas.sensor"]]), 
                sens2ref$gas.sensor), ..sens2ref.cols2change], 
                check.attributes = TRUE, tolerance = 1e-05))) {
                Vector.type <- c("Ref.rm.Out", "Sens.Inval.Out", 
                  "Apply.Invalid", "remove.neg", "Sens.rm.Out", 
                  "Neg.mod", "Sync.Cal", "Sync.Pred")
                Vector.type <- Vector.type[Vector.type %in% names(sens2ref.shield)]
                for (j in Vector.type) set(sens2ref.shield, j = j, 
                  value = as.logical(gsub(" ", "", sens2ref.shield[[j]])))
                Vector.type <- c("Ref.window", "Ref.threshold", 
                  "Ref.Ymin", "Ref.Ymax", "Ref.ThresholdMin", 
                  "Ref.iterations", "Gain", "Intercept", "Slope", 
                  "Sens.window", "Sens.threshold", "Sens.Ymin", 
                  "Sens.Ymax", "Sens.ThresholdMin", "Sens.iterations", 
                  "ubsRM", "ubss", "Rload", "TIA_Gain", "GAIN", 
                  "Int_Z", "Bias_Sign", "Bias", "Ref", "RefAD", 
                  "RefAFE", "board.zero.set", "BIAIS", "temp.thres.min", 
                  "temp.thres.max", "rh.thres.min", "rh.thres.max", 
                  "hoursWarming")
                Vector.type <- Vector.type[Vector.type %in% names(sens2ref.shield)]
                for (j in Vector.type) set(sens2ref.shield, j = j, 
                  value = as.numeric(gsub(" ", "", sens2ref.shield[[j]])))
                set(sens2ref, i = match(na.omit(sens2ref.shield[["gas.sensor"]]), 
                  sens2ref$gas.sensor), j = sens2ref.cols2change, 
                  value = sens2ref.shield)
                fwrite(setDT(as.data.frame(t(sens2ref)), keep.rownames = "name.gas")[], 
                  file = file.path(DisqueFieldtestDir, "General_data", 
                    paste0(ASE_name, ".cfg")), row.names = FALSE, 
                  col.names = FALSE)
            }
        }
    }
    else {
        my_message <- paste0("[CONFIG] ERROR, no server config file for the AirSensEUR box. \n", 
            "The App is going to crash. This AirSensEUR cannot be selected.\n")
        cat(my_message)
        if (shiny) 
            shinyalert(title = "ERROR Config file", text = my_message, 
                closeOnEsc = TRUE, closeOnClickOutside = TRUE, 
                html = FALSE, type = "error", showConfirmButton = TRUE, 
                showCancelButton = FALSE, confirmButtonText = "OK", 
                confirmButtonCol = "#AEDEF4", timer = 0, imageUrl = "", 
                animation = FALSE)
        return(my_message)
    }
    for (i in 1:length(sens2ref$name.sensor[!is.na(sens2ref$name.sensor)])) {
        nameSens <- sens2ref$name.sensor[which(!is.na(sens2ref$name.sensor))][i]
        nameGas <- sens2ref$name.gas[which(sens2ref$name.sensor == 
            nameSens)]
        nameFile <- file.path(DisqueFieldtestDir, "General_data", 
            paste0(ASE_name, "_Covariates_", nameSens, ".cfg"))
        if (file.exists(nameFile)) {
            cat(paste0("[CONFIG] INFO, the file with covariates to plot ", 
                nameFile, " exists "), sep = "\n")
            assign(nameSens, read.csv(file = nameFile, header = TRUE, 
                comment.char = "", stringsAsFactors = FALSE))
        }
        else {
            cat(paste0("[CONFIG] ERROR, the file with covariates to plot ", 
                nameFile, " does not exist. File is iniatized with the R script info."), 
                sep = "\n")
            if (nameGas == "CO") {
                assign(sens2ref$name.sensor[!is.na(sens2ref$name.sensor)][i], 
                  data.frame(Effects = c(paste0(nameSens, "_volt"), 
                    "Out.Ref.CO_ppm", "Relative_humidity", "Temperature")))
            }
            else {
                if (nameGas == "O3" || nameGas == "NO2") {
                  assign(sens2ref$name.sensor[!is.na(sens2ref$name.sensor)][i], 
                    data.frame(Effects = c(paste0(nameSens, "_volt"), 
                      "Out.Ref.NO2", "Out.Ref.O3", "Relative_humidity", 
                      "Temperature")))
                }
                else assign(sens2ref$name.sensor[!is.na(sens2ref$name.sensor)][i], 
                  data.frame(Effects = c(paste0(nameSens, "_volt"), 
                    "Out.Ref.NO", "Relative_humidity", "Temperature")))
            }
            SENS <- get(sens2ref$name.sensor[!is.na(sens2ref$name.sensor)][i])
            write.csv(SENS, file = nameFile, row.names = FALSE)
            rm(SENS)
        }
        nameFile <- file.path(DisqueFieldtestDir, "General_data", 
            paste0(ASE_name, "_CovMod_", nameSens, ".cfg"))
        if (file.exists(nameFile) && nrow(read_csv(nameFile, 
            col_types = cols(Effects = col_character()))) > 0) {
            cat(paste0("[CONFIG] INFO, the file with covariates to calibrate ", 
                nameFile, " exists "), sep = "\n")
            assign(paste0(nameSens, "CovMod"), read.csv(file = nameFile, 
                header = TRUE, comment.char = "#", stringsAsFactors = FALSE))
        }
        else {
            cat(paste0("[CONFIG] ERROR, the file with covariates to calibrate ", 
                nameFile, " does not exist. File is inialized with Temperature."), 
                sep = "\n")
            assign(paste0(nameSens, "CovMod"), data.frame(Effects = "Temperature"))
            SENS <- get(paste0(nameSens, "CovMod"))
            write.csv(SENS, file = nameFile, row.names = FALSE)
            rm(SENS)
        }
    }
    Covariates <- lapply(which(!is.na(sens2ref$name.sensor)), 
        function(i) get(sens2ref$name.sensor[i]))
    names(Covariates) <- paste0(sens2ref$name.sensor[!is.na(sens2ref$name.sensor)])
    CovMod <- lapply(which(!is.na(sens2ref$name.sensor)), function(i) get(paste0(sens2ref$name.sensor[i], 
        "CovMod")))
    names(CovMod) <- paste0(sens2ref$name.sensor[!is.na(sens2ref$name.sensor)])
    cat("-----------------------------------------------------------------------------------\n")
    return.CONFIG <- list(cfg, sens2ref, Covariates, CovMod, 
        sens2ref.shield)
    cat("-----------------------------------------------------------------------------------\n")
    names(return.CONFIG) <- c("Server", "sens2ref", "CovPlot", 
        "CovMod", "sens2ref.shield")
    return(return.CONFIG)
}
debug at S:/Box Sync/AirSensEUR/Fieldtests/Shiny/Functions4ASE.R#3881: cat("-----------------------------------------------------------------------------------\n")
-----------------------------------------------------------------------------------
debug at S:/Box Sync/AirSensEUR/Fieldtests/Shiny/Functions4ASE.R#3882: ASE_name <- basename(ASEconfig)
debug at S:/Box Sync/AirSensEUR/Fieldtests/Shiny/Functions4ASE.R#3882: for (i in c("\\.[[:alnum:]]+$", "ASEconfig")) ASE_name <- sub(pattern = i, 
    replacement = "", basename(as.character(ASE_name)))
debug at S:/Box Sync/AirSensEUR/Fieldtests/Shiny/Functions4ASE.R#3882: ASE_name <- sub(pattern = i, replacement = "", basename(as.character(ASE_name)))
debug at S:/Box Sync/AirSensEUR/Fieldtests/Shiny/Functions4ASE.R#3882: ASE_name <- sub(pattern = i, replacement = "", basename(as.character(ASE_name)))
debug at S:/Box Sync/AirSensEUR/Fieldtests/Shiny/Functions4ASE.R#3883: DisqueFieldtestDir <- file.path(DisqueFieldtest, "ASE_Stations", 
    ASE_name)
debug at S:/Box Sync/AirSensEUR/Fieldtests/Shiny/Functions4ASE.R#3888: File_Server_cfg <- list.files(path = file.path(DisqueFieldtestDir, 
    "General_data"), pattern = paste0(ASE_name, "_Servers.cfg"))
[CONFIG] Info, the config file S:/Box Sync/AirSensEUR/Fieldtests/Shiny/ASE_Stations/40458D/General_data/40458D_Servers.cfg for the configuration of servers exists
[CONFIG] Info, the config file S:/Box Sync/AirSensEUR/Fieldtests/Shiny/ASE_Stations/40458D/General_data/40458D.cfg for the configuration of AirSensEUR exists
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
[CONFIG] INFO, the file with covariates to plot S:/Box Sync/AirSensEUR/Fieldtests/Shiny/ASE_Stations/40458D/General_data/40458D_Covariates_COA4.cfg exists 
[CONFIG] INFO, the file with covariates to calibrate S:/Box Sync/AirSensEUR/Fieldtests/Shiny/ASE_Stations/40458D/General_data/40458D_CovMod_COA4.cfg exists 
[CONFIG] INFO, the file with covariates to plot S:/Box Sync/AirSensEUR/Fieldtests/Shiny/ASE_Stations/40458D/General_data/40458D_Covariates_NOB4.cfg exists 
[CONFIG] INFO, the file with covariates to calibrate S:/Box Sync/AirSensEUR/Fieldtests/Shiny/ASE_Stations/40458D/General_data/40458D_CovMod_NOB4.cfg exists 
[CONFIG] INFO, the file with covariates to plot S:/Box Sync/AirSensEUR/Fieldtests/Shiny/ASE_Stations/40458D/General_data/40458D_Covariates_NO2B43F.cfg exists 
[CONFIG] INFO, the file with covariates to calibrate S:/Box Sync/AirSensEUR/Fieldtests/Shiny/ASE_Stations/40458D/General_data/40458D_CovMod_NO2B43F.cfg exists 
[CONFIG] INFO, the file with covariates to plot S:/Box Sync/AirSensEUR/Fieldtests/Shiny/ASE_Stations/40458D/General_data/40458D_Covariates_OX_A431.cfg exists 
[CONFIG] INFO, the file with covariates to calibrate S:/Box Sync/AirSensEUR/Fieldtests/Shiny/ASE_Stations/40458D/General_data/40458D_CovMod_OX_A431.cfg exists 
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
exiting from: CONFIG(DirShiny, input$Config_Files)
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#842: progress$set(message = "[Shiny] INFO, Loading Sensor, reference and General data", 
    value = 0.2)
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#843: if (file.exists(InfluxData.file())) {
    if (extension(InfluxData.file()) == ".csv") {
        Influx$DATA <- fread(file = InfluxData.file(), na.strings = c("", 
            "NA", "<NA>"))
        if (!"" %in% Config$all$Server$Influx.TZ) {
            data.table::set(Influx$DATA, j = "date", value = ymd_hms(Influx$DATA[["date"]], 
                tz = Config$all$Server$Influx.TZ))
        }
        else data.table::set(Influx$DATA, j = "date", value = ymd_hms(Influx$DATA[["date"]], 
            tz = "UTC"))
    }
    else if (extension(InfluxData.file()) == ".Rdata") {
        Influx$DATA <- load_obj(InfluxData.file())
        if (!"data.table" %in% class(Influx$DATA)) 
            Influx$DATA <- data.table(Influx$DATA, key = "date")
    }
    if ("V1" %in% names(Influx$DATA)) 
        Influx$DATA[, `:=`(V1, NULL)]
}
Called from: eval(expr, p)
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#650: cc <- basename(input$Selected)
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#651: for (i in c("\\.[[:alnum:]]+$", "ASEconfig")) cc <- sub(pattern = i, 
    replacement = "", basename(as.character(cc)))
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#651: cc <- sub(pattern = i, replacement = "", basename(as.character(cc)))
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#651: cc <- sub(pattern = i, replacement = "", basename(as.character(cc)))
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#652: return(cc)
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#844: if (extension(InfluxData.file()) == ".csv") {
    Influx$DATA <- fread(file = InfluxData.file(), na.strings = c("", 
        "NA", "<NA>"))
    if (!"" %in% Config$all$Server$Influx.TZ) {
        data.table::set(Influx$DATA, j = "date", value = ymd_hms(Influx$DATA[["date"]], 
            tz = Config$all$Server$Influx.TZ))
    }
    else data.table::set(Influx$DATA, j = "date", value = ymd_hms(Influx$DATA[["date"]], 
        tz = "UTC"))
} else if (extension(InfluxData.file()) == ".Rdata") {
    Influx$DATA <- load_obj(InfluxData.file())
    if (!"data.table" %in% class(Influx$DATA)) 
        Influx$DATA <- data.table(Influx$DATA, key = "date")
}
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#845: Influx$DATA <- fread(file = InfluxData.file(), na.strings = c("", 
    "NA", "<NA>"))
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#846: if (!"" %in% Config$all$Server$Influx.TZ) {
    data.table::set(Influx$DATA, j = "date", value = ymd_hms(Influx$DATA[["date"]], 
        tz = Config$all$Server$Influx.TZ))
} else data.table::set(Influx$DATA, j = "date", value = ymd_hms(Influx$DATA[["date"]], 
    tz = "UTC"))
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#847: data.table::set(Influx$DATA, j = "date", value = ymd_hms(Influx$DATA[["date"]], 
    tz = Config$all$Server$Influx.TZ))
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#853: if ("V1" %in% names(Influx$DATA)) Influx$DATA[, `:=`(V1, NULL)]
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#855: if (file.exists(SOSData.file())) {
    if (extension(SOSData.file()) == ".csv") {
        Sos$DATA <- fread(file = SOSData.file(), na.strings = c("", 
            "NA", "<NA>"))
        if (!"" %in% Config$all$Server$SOS.TZ) {
            data.table::set(Sos$DATA, j = "date", value = ymd_hms(Sos$DATA[["date"]], 
                tz = Config$all$Server$SOS.TZ))
        }
        else data.table::set(Sos$DATA, j = "date", value = ymd_hms(Sos$DATA[["date"]], 
            tz = "UTC"))
    }
    else if (extension(SOSData.file()) == ".Rdata") {
        Sos$DATA <- load_obj(SOSData.file())
        if (!"data.table" %in% class(Sos$DATA)) 
            Sos$DATA <- data.table(Sos$DATA, key = "date")
    }
    if ("V1" %in% names(Sos$DATA)) 
        Sos$DATA[, `:=`(V1, NULL)]
}
Called from: eval(expr, p)
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#650: cc <- basename(input$Selected)
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#651: for (i in c("\\.[[:alnum:]]+$", "ASEconfig")) cc <- sub(pattern = i, 
    replacement = "", basename(as.character(cc)))
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#651: cc <- sub(pattern = i, replacement = "", basename(as.character(cc)))
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#651: cc <- sub(pattern = i, replacement = "", basename(as.character(cc)))
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#652: return(cc)
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#867: if (file.exists(RefData.file())) {
    if (extension(RefData.file()) == ".csv") {
        Ref$DATA <- fread(file = RefData.file(), na.strings = c("", 
            "NA", "<NA>"))
        if (!"" %in% Config$all$Server$ref.tzone) {
            data.table::set(Ref$DATA, j = "date", value = ymd_hms(Ref$DATA[["date"]], 
                tz = Config$all$Server$ref.tzone))
        }
        else data.table::set(Ref$DATA, j = "date", value = ymd_hms(Ref$DATA[["date"]], 
            tz = "UTC"))
    }
    else if (extension(SOSData.file()) == ".Rdata") {
        Ref$DATA <- load_obj(RefData.file())
        if (!"data.table" %in% class(Ref$DATA)) 
            Ref$DATA <- data.table(Ref$DATA, key = "date")
    }
    if ("V1" %in% names(Ref$DATA)) 
        Ref$DATA[, `:=`(V1, NULL)]
    if (!all(c("Ref.Long", "Ref.Lat") %in% names(Ref$DATA))) 
        shinyalert(title = "ERROR Coordinates of reference station missing", 
            text = "You should delete RefData.csv, General.csv and all .RDS files\n\n                            in directory General_data and reload reference data", 
            closeOnEsc = TRUE, closeOnClickOutside = TRUE, html = FALSE, 
            type = "error", showConfirmButton = TRUE, showCancelButton = FALSE, 
            confirmButtonText = "OK", confirmButtonCol = "#AEDEF4", 
            timer = 3000, imageUrl = "", animation = FALSE)
}
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#896: if (file.exists(General.file())) {
    if (extension(General.file()) == ".csv") {
        DF$General <- data.table::fread(General.file())
        if (!all("" %in% c(Config$all$Server$Influx.TZ, Config$all$Server$SOS.TZ))) {
            if (!"" %in% c(Config$all$Server$Influx.TZ)) {
                data.table::set(DF$General, j = "date", value = ymd_hms(DF$General[["date"]], 
                  tz = Config$all$Server$Influx.TZ))
                data.table::set(DF$General, j = "date_PreDelay", 
                  value = ymd_hms(DF$General[["date_PreDelay"]], 
                    tz = Config$all$Server$Influx.TZ))
            }
            else {
                data.table::set(DF$General, j = "date", value = ymd_hms(DF$General[["date"]], 
                  tz = Config$all$Server$SOS.TZ))
                data.table::set(DF$General, j = "date_PreDelay", 
                  value = ymd_hms(DF$General[["date_PreDelay"]], 
                    tz = Config$all$Server$SOS.TZ))
            }
        }
        else {
            data.table::set(DF$General, j = "date", value = ymd_hms(DF$General[["date"]], 
                tz = "UTC"))
            data.table::set(DF$General, j = "date_PreDelay", 
                value = ymd_hms(DF$General[["date_PreDelay"]], 
                  tz = "UTC"))
        }
    }
    else if (extension(General.file()) == ".Rdata") {
        DF$General <- load_obj(General.file())
        if (!"data.table" %in% class(DF$General)) 
            DF$General <- data.table(DF$General, key = "date")
    }
    if ("V1" %in% names(DF$General)) 
        DF$General[, `:=`(V1, NULL)]
    if (!all(c("Absolute_humidity", "Td_deficit") %in% names(DF$General))) {
        if (all(c("Temperature", "Relative_humidity") %in% names(DF$General))) {
            DF$General$Absolute_humidity <- NA_real_
            DF$General$Td_deficit <- NA_real_
            both.Temp.Hum <- complete.cases(DF$General[, c("Temperature", 
                "Relative_humidity")])
            DF$General[both.Temp.Hum, "Absolute_humidity"] <- threadr::absolute_humidity(DF$General[["Temperature"]][both.Temp.Hum], 
                DF$General[["Relative_humidity"]][both.Temp.Hum])
            Td <- weathermetrics::humidity.to.dewpoint(rh = DF$General[["Relative_humidity"]][both.Temp.Hum], 
                t = DF$General[["Temperature"]][both.Temp.Hum], 
                temperature.metric = "celsius")
            DF$General[both.Temp.Hum, `:=`(Td_deficit, DF$General[both.Temp.Hum, 
                "Temperature"] - Td)]
        }
    }
    if (!all(c("Ref.Absolute_humidity", "Ref.Td_deficit") %in% 
        names(DF$General))) {
        if (all(c("Ref.Temp", "Ref.RH") %in% names(DF$General))) {
            DF$General$Ref.Absolute_humidity <- NA_real_
            DF$General$Ref.Td_deficit <- NA_real_
            Ref.both.Temp.Hum <- complete.cases(DF$General[, 
                c("Ref.Temp", "Ref.RH")])
            DF$General[Ref.both.Temp.Hum, "Ref.Absolute_humidity"] <- threadr::absolute_humidity(DF$General[["Ref.Temp"]][Ref.both.Temp.Hum], 
                DF$General[["Ref.RH"]])
            Td <- weathermetrics::humidity.to.dewpoint(rh = DF$General[Ref.both.Temp.Hum, 
                "Ref.RH"], t = DF$General[["Ref.Temp"]][Ref.both.Temp.Hum], 
                temperature.metric = "celsius")
            DF$General[Ref.both.Temp.Hum, `:=`(Ref.Td_deficit, 
                DF$General[["Ref.Temp"]][Ref.both.Temp.Hum] - 
                  Td)]
        }
    }
    progress$set(message = "[shiny] INFO, Loading General data", 
        value = 0.3)
    if (!all(c(names(Ref$DATA)[grep(pattern = paste(c("Bin.", 
        "boardTimeStamp", "gpsTimestamp"), collapse = "|"), x = names(Ref$DATA), 
        invert = T)], names(Influx$DATA)) %in% names(DF$General))) {
        DF$General <<- NULL
        DF.NULL$Init <<- TRUE
    }
} else {
    DF$General <<- NULL
    DF.NULL$Init <<- TRUE
}
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#897: if (extension(General.file()) == ".csv") {
    DF$General <- data.table::fread(General.file())
    if (!all("" %in% c(Config$all$Server$Influx.TZ, Config$all$Server$SOS.TZ))) {
        if (!"" %in% c(Config$all$Server$Influx.TZ)) {
            data.table::set(DF$General, j = "date", value = ymd_hms(DF$General[["date"]], 
                tz = Config$all$Server$Influx.TZ))
            data.table::set(DF$General, j = "date_PreDelay", 
                value = ymd_hms(DF$General[["date_PreDelay"]], 
                  tz = Config$all$Server$Influx.TZ))
        }
        else {
            data.table::set(DF$General, j = "date", value = ymd_hms(DF$General[["date"]], 
                tz = Config$all$Server$SOS.TZ))
            data.table::set(DF$General, j = "date_PreDelay", 
                value = ymd_hms(DF$General[["date_PreDelay"]], 
                  tz = Config$all$Server$SOS.TZ))
        }
    }
    else {
        data.table::set(DF$General, j = "date", value = ymd_hms(DF$General[["date"]], 
            tz = "UTC"))
        data.table::set(DF$General, j = "date_PreDelay", value = ymd_hms(DF$General[["date_PreDelay"]], 
            tz = "UTC"))
    }
} else if (extension(General.file()) == ".Rdata") {
    DF$General <- load_obj(General.file())
    if (!"data.table" %in% class(DF$General)) 
        DF$General <- data.table(DF$General, key = "date")
}
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#898: DF$General <- data.table::fread(General.file())
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#900: if (!all("" %in% c(Config$all$Server$Influx.TZ, Config$all$Server$SOS.TZ))) {
    if (!"" %in% c(Config$all$Server$Influx.TZ)) {
        data.table::set(DF$General, j = "date", value = ymd_hms(DF$General[["date"]], 
            tz = Config$all$Server$Influx.TZ))
        data.table::set(DF$General, j = "date_PreDelay", value = ymd_hms(DF$General[["date_PreDelay"]], 
            tz = Config$all$Server$Influx.TZ))
    }
    else {
        data.table::set(DF$General, j = "date", value = ymd_hms(DF$General[["date"]], 
            tz = Config$all$Server$SOS.TZ))
        data.table::set(DF$General, j = "date_PreDelay", value = ymd_hms(DF$General[["date_PreDelay"]], 
            tz = Config$all$Server$SOS.TZ))
    }
} else {
    data.table::set(DF$General, j = "date", value = ymd_hms(DF$General[["date"]], 
        tz = "UTC"))
    data.table::set(DF$General, j = "date_PreDelay", value = ymd_hms(DF$General[["date_PreDelay"]], 
        tz = "UTC"))
}
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#901: if (!"" %in% c(Config$all$Server$Influx.TZ)) {
    data.table::set(DF$General, j = "date", value = ymd_hms(DF$General[["date"]], 
        tz = Config$all$Server$Influx.TZ))
    data.table::set(DF$General, j = "date_PreDelay", value = ymd_hms(DF$General[["date_PreDelay"]], 
        tz = Config$all$Server$Influx.TZ))
} else {
    data.table::set(DF$General, j = "date", value = ymd_hms(DF$General[["date"]], 
        tz = Config$all$Server$SOS.TZ))
    data.table::set(DF$General, j = "date_PreDelay", value = ymd_hms(DF$General[["date_PreDelay"]], 
        tz = Config$all$Server$SOS.TZ))
}
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#902: data.table::set(DF$General, j = "date", value = ymd_hms(DF$General[["date"]], 
    tz = Config$all$Server$Influx.TZ))
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#903: data.table::set(DF$General, j = "date_PreDelay", value = ymd_hms(DF$General[["date_PreDelay"]], 
    tz = Config$all$Server$Influx.TZ))
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#916: if ("V1" %in% names(DF$General)) DF$General[, `:=`(V1, NULL)]
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#919: if (!all(c("Absolute_humidity", "Td_deficit") %in% names(DF$General))) {
    if (all(c("Temperature", "Relative_humidity") %in% names(DF$General))) {
        DF$General$Absolute_humidity <- NA_real_
        DF$General$Td_deficit <- NA_real_
        both.Temp.Hum <- complete.cases(DF$General[, c("Temperature", 
            "Relative_humidity")])
        DF$General[both.Temp.Hum, "Absolute_humidity"] <- threadr::absolute_humidity(DF$General[["Temperature"]][both.Temp.Hum], 
            DF$General[["Relative_humidity"]][both.Temp.Hum])
        Td <- weathermetrics::humidity.to.dewpoint(rh = DF$General[["Relative_humidity"]][both.Temp.Hum], 
            t = DF$General[["Temperature"]][both.Temp.Hum], temperature.metric = "celsius")
        DF$General[both.Temp.Hum, `:=`(Td_deficit, DF$General[both.Temp.Hum, 
            "Temperature"] - Td)]
    }
}
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#929: if (!all(c("Ref.Absolute_humidity", "Ref.Td_deficit") %in% names(DF$General))) {
    if (all(c("Ref.Temp", "Ref.RH") %in% names(DF$General))) {
        DF$General$Ref.Absolute_humidity <- NA_real_
        DF$General$Ref.Td_deficit <- NA_real_
        Ref.both.Temp.Hum <- complete.cases(DF$General[, c("Ref.Temp", 
            "Ref.RH")])
        DF$General[Ref.both.Temp.Hum, "Ref.Absolute_humidity"] <- threadr::absolute_humidity(DF$General[["Ref.Temp"]][Ref.both.Temp.Hum], 
            DF$General[["Ref.RH"]])
        Td <- weathermetrics::humidity.to.dewpoint(rh = DF$General[Ref.both.Temp.Hum, 
            "Ref.RH"], t = DF$General[["Ref.Temp"]][Ref.both.Temp.Hum], 
            temperature.metric = "celsius")
        DF$General[Ref.both.Temp.Hum, `:=`(Ref.Td_deficit, DF$General[["Ref.Temp"]][Ref.both.Temp.Hum] - 
            Td)]
    }
}
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#930: if (all(c("Ref.Temp", "Ref.RH") %in% names(DF$General))) {
    DF$General$Ref.Absolute_humidity <- NA_real_
    DF$General$Ref.Td_deficit <- NA_real_
    Ref.both.Temp.Hum <- complete.cases(DF$General[, c("Ref.Temp", 
        "Ref.RH")])
    DF$General[Ref.both.Temp.Hum, "Ref.Absolute_humidity"] <- threadr::absolute_humidity(DF$General[["Ref.Temp"]][Ref.both.Temp.Hum], 
        DF$General[["Ref.RH"]])
    Td <- weathermetrics::humidity.to.dewpoint(rh = DF$General[Ref.both.Temp.Hum, 
        "Ref.RH"], t = DF$General[["Ref.Temp"]][Ref.both.Temp.Hum], 
        temperature.metric = "celsius")
    DF$General[Ref.both.Temp.Hum, `:=`(Ref.Td_deficit, DF$General[["Ref.Temp"]][Ref.both.Temp.Hum] - 
        Td)]
}
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#940: progress$set(message = "[shiny] INFO, Loading General data", 
    value = 0.3)
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#942: if (!all(c(names(Ref$DATA)[grep(pattern = paste(c("Bin.", "boardTimeStamp", 
    "gpsTimestamp"), collapse = "|"), x = names(Ref$DATA), invert = T)], 
    names(Influx$DATA)) %in% names(DF$General))) {
    DF$General <<- NULL
    DF.NULL$Init <<- TRUE
}
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#953: progress$set(message = "[Shiny] INFO, Initial DownloadSensor", 
    value = 0.4)
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#954: Download <<- reactiveValues(Sensor = DownloadSensor())
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
[Check_Download] INFO, Checking 
S:/Box Sync/AirSensEUR/Fieldtests/Shiny/ASE_Stations/40458D/General_data/airsenseur.db
S:/Box Sync/AirSensEUR/Fieldtests/Shiny/ASE_Stations/40458D/General_data/General.csv
S:/Box Sync/AirSensEUR/Fieldtests/Shiny/ASE_Stations/40458D/General_data/RefData.csv
S:/Box Sync/AirSensEUR/Fieldtests/Shiny/ASE_Stations/40458D/General_data/SOSData.csv 
S:/Box Sync/AirSensEUR/Fieldtests/Shiny/ASE_Stations/40458D/General_data/InfluxData.csv
 in S:/Box Sync/AirSensEUR/Fieldtests/Shiny/ASE_Stations/40458D/General_data
[Check_Download] INFO, sensor data are going to be retrieved. Start date for data download: 2020-01-06 18:04:00
[Check_Download] INFO, S:/Box Sync/AirSensEUR/Fieldtests/Shiny/ASE_Stations/40458D/General_data/RefData.csv does not exist. It is going to be created, data will be retrieved.
[Check_Download] INFO, sensor data are going to be retrieved. Start date for data download: 2020-01-06 18:03:00
[Check_Download] INFO, S:/Box Sync/AirSensEUR/Fieldtests/Shiny/ASE_Stations/40458D/General_data/SOSData.csv does not exist. It should be created, SOS sensor data should be retrieved.
[Check_Download] INFO, S:/Box Sync/AirSensEUR/Fieldtests/Shiny/ASE_Stations/40458D/General_data/airsenseur.db exists.
[Check_Download] INFO, The database S:/Box Sync/AirSensEUR/Fieldtests/Shiny/ASE_Stations/40458D/General_data/airsenseur.db includes the table 40458D with the columns: time, altitude, boardTimeStamp, gpsTimestamp, latitude, longitude, sampleEvaluatedVal, sampleRawVal, channel, name
[Check_Download] INFO, SOS sensor data are going to be retrieved. Start date for data download: 2020-01-06 18:03:00
$Ref.Rdata.file
[1] "S:/Box Sync/AirSensEUR/Fieldtests/Shiny/ASE_Stations/40458D/General_data/RefData.csv"

$Influx.Rdata.file
[1] "S:/Box Sync/AirSensEUR/Fieldtests/Shiny/ASE_Stations/40458D/General_data/InfluxData.csv"

$SOS.file
[1] "S:/Box Sync/AirSensEUR/Fieldtests/Shiny/ASE_Stations/40458D/General_data/SOSData.csv"

$General.Rdata.file
[1] "S:/Box Sync/AirSensEUR/Fieldtests/Shiny/ASE_Stations/40458D/General_data/General.csv"

$airsenseur.db.file
[1] "S:/Box Sync/AirSensEUR/Fieldtests/Shiny/ASE_Stations/40458D/General_data/airsenseur.db"

$WDinput
[1] "S:/Box Sync/AirSensEUR/Fieldtests/Shiny/ASE_Stations/40458D/General_data"

$ExistFil.data.db
[1] TRUE

$Retrieve.data.db
[1] TRUE

$DateIN.db.prev
[1] "2020-01-05T17:00:00Z"

$DateEND.db.prev
[1] "2020-01-06T18:03:00Z"

$ExistFil.data.Ref
[1] FALSE

$Retrieve.data.Ref
[1] TRUE

$DateIN.Ref.prev
NULL

$DateEND.Ref.prev
NULL

$Var.Ref.prev
NULL

$ExistFil.data.Influx
[1] TRUE

$Retrieve.data.Influx
[1] TRUE

$DateIN.Influx.prev
[1] "2020-01-05 17:00:00 UTC"

$DateEND.Influx.prev
[1] "2020-01-06 18:03:00 UTC"

$ExistFil.data.SOS
[1] FALSE

$Retrieve.data.SOS
[1] TRUE

$DateIN.SOS.prev
NULL

$DateEND.SOS.prev
NULL

$ExistFil.data.General
[1] TRUE

$Retrieve.data.General
[1] TRUE

$DateIN.General.prev
[1] "2020-01-05 17:01:00 UTC"

$DateEND.General.prev
[1] "2020-01-06 18:04:00 UTC"

-----------------------------------------------------------------------------------
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#956: progress$set(message = "[Shiny] INFO, Loading SetTime file", 
    value = 0.35)
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#957: Set <<- reactiveValues(Time = SETTIME(DisqueFieldtestDir = DisqueFieldtestDir(), 
    General.t.Valid = DF$General, Influx.TZ = Config$all[["Server"]]$Influx.TZ, 
    SOS.TZ = Config$all[["Server"]]$SOS.TZ, Ref.TZ = Config$all[["Server"]]$ref.tzone, 
    DownloadSensor = Download$Sensor, Config = Config$all, sens2ref.shield = Config$all$sens2ref.shield))
-----------------------------------------------------------------------------------
[SETTIME] Info, the config file S:/Box Sync/AirSensEUR/Fieldtests/Shiny/ASE_Stations/40458D/General_data/40458D_SETTIME.cfg for the configuration of AirSensEUR exists
-----------------------------------------------------------------------------------
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#966: progress$set(message = "[Shiny] INFO, Loading indexes of data discarded during warming time of sensors", 
    value = 0.5)
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#967: Warm <<- reactiveValues(Forced = FALSE)
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#968: if (file.exists(ind.warm.file())) init.ind.warm <- list.load(ind.warm.file()) else {
    init.ind.warm <- NULL
    Warm$Forced <<- TRUE
}
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#969: init.ind.warm <- NULL
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#970: Warm$Forced <<- TRUE
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#972: ind.warm <<- reactiveValues(out = init.ind.warm)
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#974: progress$set(message = "[Shiny] INFO, Loading indexes of data discarded outside temperature and humidity tolerance", 
    value = 0.5)
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#975: TRh <<- reactiveValues(Forced = FALSE)
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#976: if (file.exists(ind.TRh.file())) init.ind.TRh <- list.load(ind.TRh.file()) else {
    init.ind.TRh <- NULL
    TRh$Forced <<- TRUE
}
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#977: init.ind.TRh <- NULL
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#978: TRh$Forced <<- TRUE
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#980: ind.TRh <<- reactiveValues(out = init.ind.TRh)
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#982: progress$set(message = "[Shiny] INFO, Loading indexes of Invalid sensor data", 
    value = 0.6)
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#983: Inv <<- reactiveValues(Forced = FALSE)
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#984: if (file.exists(ind.Invalid.file())) init.ind.Invalid <- list.load(ind.Invalid.file()) else {
    init.ind.Invalid <- NULL
    Inv$Forced <<- TRUE
}
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#985: init.ind.Invalid <- NULL
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#986: Inv$Forced <<- TRUE
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#988: ind.Invalid <<- reactiveValues(out = init.ind.Invalid)
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#990: progress$set(message = "[Shiny] INFO, Loading indexes of outliers for sensor data", 
    value = 0.7)
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#991: Outliers.Sens <<- reactiveValues(Forced = FALSE)
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#992: if (file.exists(ind.sens.out.file())) Init.ind.sens <- list.load(ind.sens.out.file()) else {
    Init.ind.sens <- NULL
    Outliers.Sens$Forced <<- TRUE
}
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#993: Init.ind.sens <- NULL
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#994: Outliers.Sens$Forced <<- TRUE
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#996: ind.sens <<- reactiveValues(out = Init.ind.sens)
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#998: progress$set(message = "[Shiny] INFO, Loading indexes of outliers for reference data", 
    value = 0.8)
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#999: Outliers.Ref <<- reactiveValues(Forced = FALSE)
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#1000: Neg <<- reactiveValues(Forced = FALSE)
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#1001: if (file.exists(ind.ref.out.file()) && file.size(ind.ref.out.file()) > 
    0) init.ind.ref <- list.load(ind.ref.out.file()) else {
    init.ind.ref <- NULL
    Outliers.Ref$Forced <<- TRUE
}
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#1002: init.ind.ref <- NULL
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#1003: Outliers.Ref$Forced <<- TRUE
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#1005: ind.ref <<- reactiveValues(out = init.ind.ref)
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#1007: Conv <<- reactiveValues(Forced = FALSE)
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#1008: Cal <<- reactiveValues(Forced = FALSE)
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#1010: Covariates <- reactive({
    c(paste0("Out.", list.gas.reference2use()), INFLUX()[[2]], 
        "Absolute_humidity", "Td_deficit", "date", paste0(list.gas.sensor(), 
            "_modelled"), paste0(list.name.sensor(), "_volt"), 
        paste0("Out.", list.gas.sensor()), "longitude", "latitude")
})
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#1014: Covariates.Model <- reactive({
    c(paste0("Out.", list.gas.reference2use()), INFLUX()[[2]], 
        "Absolute_humidity", "Td_deficit", "date", paste0(list.gas.sensor(), 
            "_modelled"), paste0(list.name.sensor(), "_volt"), 
        paste0("Out.", list.gas.sensor()))
})
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#1019: initial.dir <- DirShiny
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#1021: cat("-----------------------------------------------------------------------------------\n")
-----------------------------------------------------------------------------------
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#1022: cat(paste0("[shiny] INFO creating the file system for data treatment at ", 
    DisqueFieldtestDir()), " if it does not exist\n")
[shiny] INFO creating the file system for data treatment at S:/Box Sync/AirSensEUR/Fieldtests/Shiny/ASE_Stations/40458D  if it does not exist
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#1023: progress$set(message = paste0("[shiny] INFO creating the file system for data treatment at ", 
    DisqueFieldtestDir(), " if it does not exist\n"), value = 0.5)
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#1024: if (!(initial.dir == DisqueFieldtestDir())) {
    if (!dir.exists(DisqueFieldtestDir())) 
        dir.create(DisqueFieldtestDir())
}
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#1024: if (!dir.exists(DisqueFieldtestDir())) dir.create(DisqueFieldtestDir())
[1] "S:/Box Sync/AirSensEUR/Fieldtests/Shiny/ASE_Stations/40458D"
[1] "S:/Box Sync/AirSensEUR/Fieldtests/Shiny"
[1] "S:/Box Sync/AirSensEUR/Fieldtests/Shiny/ASE_Stations/40458D"
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#1025: List.Dirs <- c("Calibration", "Configuration", "Drift", "Estimated_coef", 
    "General_data", "Models", "Modelled_gas", "Outliers", "scriptsLog", 
    "SensorData", "Retrieved_plots", "Statistics", "Verification_plots")
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#1027: for (i in List.Dirs) {
    if (!dir.exists(file.path(DisqueFieldtestDir(), i))) {
        dir.create(file.path(DisqueFieldtestDir(), i), showWarning = TRUE, 
            recursive = TRUE)
        cat(paste0("[shiny, Selected] INFO Dir. created: ", file.path(DisqueFieldtestDir(), 
            i)), sep = "\n\r")
    }
    else cat(paste0("[shiny, Selected] INFO Dir. already exists: ", 
        file.path(DisqueFieldtestDir(), i)), sep = "\n")
}
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#1028: if (!dir.exists(file.path(DisqueFieldtestDir(), i))) {
    dir.create(file.path(DisqueFieldtestDir(), i), showWarning = TRUE, 
        recursive = TRUE)
    cat(paste0("[shiny, Selected] INFO Dir. created: ", file.path(DisqueFieldtestDir(), 
        i)), sep = "\n\r")
} else cat(paste0("[shiny, Selected] INFO Dir. already exists: ", 
    file.path(DisqueFieldtestDir(), i)), sep = "\n")
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#1028: cat(paste0("[shiny, Selected] INFO Dir. already exists: ", file.path(DisqueFieldtestDir(), 
    i)), sep = "\n")
[shiny, Selected] INFO Dir. already exists: S:/Box Sync/AirSensEUR/Fieldtests/Shiny/ASE_Stations/40458D/Calibration
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#1028: if (!dir.exists(file.path(DisqueFieldtestDir(), i))) {
    dir.create(file.path(DisqueFieldtestDir(), i), showWarning = TRUE, 
        recursive = TRUE)
    cat(paste0("[shiny, Selected] INFO Dir. created: ", file.path(DisqueFieldtestDir(), 
        i)), sep = "\n\r")
} else cat(paste0("[shiny, Selected] INFO Dir. already exists: ", 
    file.path(DisqueFieldtestDir(), i)), sep = "\n")
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#1029: dir.create(file.path(DisqueFieldtestDir(), i), showWarning = TRUE, 
    recursive = TRUE)
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#1031: cat(paste0("[shiny, Selected] INFO Dir. created: ", file.path(DisqueFieldtestDir(), 
    i)), sep = "\n\r")
[1] "S:/Box Sync/AirSensEUR/Fieldtests/Shiny/ASE_Stations/40458D"
[1] "S:/Box Sync/AirSensEUR/Fieldtests/Shiny/ASE_Stations/40458D/Configuration"
[shiny, Selected] INFO Dir. created: S:/Box Sync/AirSensEUR/Fieldtests/Shiny/ASE_Stations/40458D/Configuration
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#1028: if (!dir.exists(file.path(DisqueFieldtestDir(), i))) {
    dir.create(file.path(DisqueFieldtestDir(), i), showWarning = TRUE, 
        recursive = TRUE)
    cat(paste0("[shiny, Selected] INFO Dir. created: ", file.path(DisqueFieldtestDir(), 
        i)), sep = "\n\r")
} else cat(paste0("[shiny, Selected] INFO Dir. already exists: ", 
    file.path(DisqueFieldtestDir(), i)), sep = "\n")
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#1028: cat(paste0("[shiny, Selected] INFO Dir. already exists: ", file.path(DisqueFieldtestDir(), 
    i)), sep = "\n")
[shiny, Selected] INFO Dir. already exists: S:/Box Sync/AirSensEUR/Fieldtests/Shiny/ASE_Stations/40458D/Drift
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#1028: if (!dir.exists(file.path(DisqueFieldtestDir(), i))) {
    dir.create(file.path(DisqueFieldtestDir(), i), showWarning = TRUE, 
        recursive = TRUE)
    cat(paste0("[shiny, Selected] INFO Dir. created: ", file.path(DisqueFieldtestDir(), 
        i)), sep = "\n\r")
} else cat(paste0("[shiny, Selected] INFO Dir. already exists: ", 
    file.path(DisqueFieldtestDir(), i)), sep = "\n")
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#1028: cat(paste0("[shiny, Selected] INFO Dir. already exists: ", file.path(DisqueFieldtestDir(), 
    i)), sep = "\n")
[shiny, Selected] INFO Dir. already exists: S:/Box Sync/AirSensEUR/Fieldtests/Shiny/ASE_Stations/40458D/Estimated_coef
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#1028: if (!dir.exists(file.path(DisqueFieldtestDir(), i))) {
    dir.create(file.path(DisqueFieldtestDir(), i), showWarning = TRUE, 
        recursive = TRUE)
    cat(paste0("[shiny, Selected] INFO Dir. created: ", file.path(DisqueFieldtestDir(), 
        i)), sep = "\n\r")
} else cat(paste0("[shiny, Selected] INFO Dir. already exists: ", 
    file.path(DisqueFieldtestDir(), i)), sep = "\n")
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#1028: cat(paste0("[shiny, Selected] INFO Dir. already exists: ", file.path(DisqueFieldtestDir(), 
    i)), sep = "\n")
[shiny, Selected] INFO Dir. already exists: S:/Box Sync/AirSensEUR/Fieldtests/Shiny/ASE_Stations/40458D/General_data
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#1028: if (!dir.exists(file.path(DisqueFieldtestDir(), i))) {
    dir.create(file.path(DisqueFieldtestDir(), i), showWarning = TRUE, 
        recursive = TRUE)
    cat(paste0("[shiny, Selected] INFO Dir. created: ", file.path(DisqueFieldtestDir(), 
        i)), sep = "\n\r")
} else cat(paste0("[shiny, Selected] INFO Dir. already exists: ", 
    file.path(DisqueFieldtestDir(), i)), sep = "\n")
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#1028: cat(paste0("[shiny, Selected] INFO Dir. already exists: ", file.path(DisqueFieldtestDir(), 
    i)), sep = "\n")
[shiny, Selected] INFO Dir. already exists: S:/Box Sync/AirSensEUR/Fieldtests/Shiny/ASE_Stations/40458D/Models
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#1028: if (!dir.exists(file.path(DisqueFieldtestDir(), i))) {
    dir.create(file.path(DisqueFieldtestDir(), i), showWarning = TRUE, 
        recursive = TRUE)
    cat(paste0("[shiny, Selected] INFO Dir. created: ", file.path(DisqueFieldtestDir(), 
        i)), sep = "\n\r")
} else cat(paste0("[shiny, Selected] INFO Dir. already exists: ", 
    file.path(DisqueFieldtestDir(), i)), sep = "\n")
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#1028: cat(paste0("[shiny, Selected] INFO Dir. already exists: ", file.path(DisqueFieldtestDir(), 
    i)), sep = "\n")
[shiny, Selected] INFO Dir. already exists: S:/Box Sync/AirSensEUR/Fieldtests/Shiny/ASE_Stations/40458D/Modelled_gas
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#1028: if (!dir.exists(file.path(DisqueFieldtestDir(), i))) {
    dir.create(file.path(DisqueFieldtestDir(), i), showWarning = TRUE, 
        recursive = TRUE)
    cat(paste0("[shiny, Selected] INFO Dir. created: ", file.path(DisqueFieldtestDir(), 
        i)), sep = "\n\r")
} else cat(paste0("[shiny, Selected] INFO Dir. already exists: ", 
    file.path(DisqueFieldtestDir(), i)), sep = "\n")
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#1028: cat(paste0("[shiny, Selected] INFO Dir. already exists: ", file.path(DisqueFieldtestDir(), 
    i)), sep = "\n")
[shiny, Selected] INFO Dir. already exists: S:/Box Sync/AirSensEUR/Fieldtests/Shiny/ASE_Stations/40458D/Outliers
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#1028: if (!dir.exists(file.path(DisqueFieldtestDir(), i))) {
    dir.create(file.path(DisqueFieldtestDir(), i), showWarning = TRUE, 
        recursive = TRUE)
    cat(paste0("[shiny, Selected] INFO Dir. created: ", file.path(DisqueFieldtestDir(), 
        i)), sep = "\n\r")
} else cat(paste0("[shiny, Selected] INFO Dir. already exists: ", 
    file.path(DisqueFieldtestDir(), i)), sep = "\n")
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#1028: cat(paste0("[shiny, Selected] INFO Dir. already exists: ", file.path(DisqueFieldtestDir(), 
    i)), sep = "\n")
[shiny, Selected] INFO Dir. already exists: S:/Box Sync/AirSensEUR/Fieldtests/Shiny/ASE_Stations/40458D/scriptsLog
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#1028: if (!dir.exists(file.path(DisqueFieldtestDir(), i))) {
    dir.create(file.path(DisqueFieldtestDir(), i), showWarning = TRUE, 
        recursive = TRUE)
    cat(paste0("[shiny, Selected] INFO Dir. created: ", file.path(DisqueFieldtestDir(), 
        i)), sep = "\n\r")
} else cat(paste0("[shiny, Selected] INFO Dir. already exists: ", 
    file.path(DisqueFieldtestDir(), i)), sep = "\n")
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#1028: cat(paste0("[shiny, Selected] INFO Dir. already exists: ", file.path(DisqueFieldtestDir(), 
    i)), sep = "\n")
[shiny, Selected] INFO Dir. already exists: S:/Box Sync/AirSensEUR/Fieldtests/Shiny/ASE_Stations/40458D/SensorData
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#1028: if (!dir.exists(file.path(DisqueFieldtestDir(), i))) {
    dir.create(file.path(DisqueFieldtestDir(), i), showWarning = TRUE, 
        recursive = TRUE)
    cat(paste0("[shiny, Selected] INFO Dir. created: ", file.path(DisqueFieldtestDir(), 
        i)), sep = "\n\r")
} else cat(paste0("[shiny, Selected] INFO Dir. already exists: ", 
    file.path(DisqueFieldtestDir(), i)), sep = "\n")
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#1028: cat(paste0("[shiny, Selected] INFO Dir. already exists: ", file.path(DisqueFieldtestDir(), 
    i)), sep = "\n")
[shiny, Selected] INFO Dir. already exists: S:/Box Sync/AirSensEUR/Fieldtests/Shiny/ASE_Stations/40458D/Retrieved_plots
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#1028: if (!dir.exists(file.path(DisqueFieldtestDir(), i))) {
    dir.create(file.path(DisqueFieldtestDir(), i), showWarning = TRUE, 
        recursive = TRUE)
    cat(paste0("[shiny, Selected] INFO Dir. created: ", file.path(DisqueFieldtestDir(), 
        i)), sep = "\n\r")
} else cat(paste0("[shiny, Selected] INFO Dir. already exists: ", 
    file.path(DisqueFieldtestDir(), i)), sep = "\n")
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#1028: cat(paste0("[shiny, Selected] INFO Dir. already exists: ", file.path(DisqueFieldtestDir(), 
    i)), sep = "\n")
[shiny, Selected] INFO Dir. already exists: S:/Box Sync/AirSensEUR/Fieldtests/Shiny/ASE_Stations/40458D/Statistics
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#1028: if (!dir.exists(file.path(DisqueFieldtestDir(), i))) {
    dir.create(file.path(DisqueFieldtestDir(), i), showWarning = TRUE, 
        recursive = TRUE)
    cat(paste0("[shiny, Selected] INFO Dir. created: ", file.path(DisqueFieldtestDir(), 
        i)), sep = "\n\r")
} else cat(paste0("[shiny, Selected] INFO Dir. already exists: ", 
    file.path(DisqueFieldtestDir(), i)), sep = "\n")
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#1028: cat(paste0("[shiny, Selected] INFO Dir. already exists: ", file.path(DisqueFieldtestDir(), 
    i)), sep = "\n")
[shiny, Selected] INFO Dir. already exists: S:/Box Sync/AirSensEUR/Fieldtests/Shiny/ASE_Stations/40458D/Verification_plots
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#1034: remove(List.Dirs, i)
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#1036: cat("-----------------------------------------------------------------------------------\n")
-----------------------------------------------------------------------------------
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#1037: cat(paste0("[shiny, Selected] INFO Change the working directory to: ", 
    DisqueFieldtestDir()), sep = "\n")
[shiny, Selected] INFO Change the working directory to: S:/Box Sync/AirSensEUR/Fieldtests/Shiny/ASE_Stations/40458D
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#1038: setwd(DisqueFieldtestDir())
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#1042: while (sink.number() > 0) {
    print(paste0("Number of sink channels opened: ", sink.number(), 
        ". Closing opened channels"))
    sink(file = NULL)
}
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#1042: print(paste0("Number of sink channels opened: ", sink.number(), 
    ". Closing opened channels"))
[1] "Number of sink channels opened: 1. Closing opened channels"
debug at S:\Box Sync\AirSensEUR\Fieldtests\Shiny/app.R#1043: sink(file = NULL)
-----------------------------------------------------------------------------------
[INFLUXDB] INFO: Downloading InfluxDB data
[INFLUXDB] INFO: Data download not requested.
[INFLUXDB] INFO: Sensor variables existing in airsenseur.db: Atmospheric_pressure, Batt_Charge_Status, Batt_Cumulated_Charge, Batt_Voltage, Bin0, Bin1, Bin10, Bin11, Bin12, Bin13, Bin14, Bin15, Bin16, Bin17, Bin18, Bin19, Bin2, Bin20, Bin21, Bin22, Bin23, Bin3, Bin4, Bin5, Bin6, Bin7, Bin8, Bin9, Carbon_dioxide, Carbon_monoxide, Nitric_oxide, Nitrogen_dioxide, OPCHum, OPCTemp, OPCVol, Ozone, Particulate_Matter_1, Particulate_Matter_10, Particulate_Matter_25, Relative_humidity, Relative_humidity_int, Temperature, Temperature_int, with date timestamp and coordinates.
[INFLUXDB] INFO INFLUXDB returning list with InfluxData, var.names.meteo, var.name.GasSensors and var.names.sens
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
[Check_Download] INFO, Checking 
S:/Box Sync/AirSensEUR/Fieldtests/Shiny/ASE_Stations/40458D/General_data/airsenseur.db
S:/Box Sync/AirSensEUR/Fieldtests/Shiny/ASE_Stations/40458D/General_data/General.csv
S:/Box Sync/AirSensEUR/Fieldtests/Shiny/ASE_Stations/40458D/General_data/RefData.csv
S:/Box Sync/AirSensEUR/Fieldtests/Shiny/ASE_Stations/40458D/General_data/SOSData.csv 
S:/Box Sync/AirSensEUR/Fieldtests/Shiny/ASE_Stations/40458D/General_data/InfluxData.csv
 in S:/Box Sync/AirSensEUR/Fieldtests/Shiny/ASE_Stations/40458D/General_data
[Check_Download] INFO, sensor data are going to be retrieved. Start date for data download: 2020-01-06 18:04:00
[Check_Download] INFO, S:/Box Sync/AirSensEUR/Fieldtests/Shiny/ASE_Stations/40458D/General_data/RefData.csv does not exist. It is going to be created, data will be retrieved.
[Check_Download] INFO, sensor data are going to be retrieved. Start date for data download: 2020-01-06 18:03:00
[Check_Download] INFO, S:/Box Sync/AirSensEUR/Fieldtests/Shiny/ASE_Stations/40458D/General_data/SOSData.csv does not exist. It should be created, SOS sensor data should be retrieved.
[Check_Download] INFO, S:/Box Sync/AirSensEUR/Fieldtests/Shiny/ASE_Stations/40458D/General_data/airsenseur.db exists.
[Check_Download] INFO, The database S:/Box Sync/AirSensEUR/Fieldtests/Shiny/ASE_Stations/40458D/General_data/airsenseur.db includes the table 40458D with the columns: time, altitude, boardTimeStamp, gpsTimestamp, latitude, longitude, sampleEvaluatedVal, sampleRawVal, channel, name
[Check_Download] INFO, SOS sensor data are going to be retrieved. Start date for data download: 2020-01-06 18:03:00
$Ref.Rdata.file
[1] "S:/Box Sync/AirSensEUR/Fieldtests/Shiny/ASE_Stations/40458D/General_data/RefData.csv"

$Influx.Rdata.file
[1] "S:/Box Sync/AirSensEUR/Fieldtests/Shiny/ASE_Stations/40458D/General_data/InfluxData.csv"

$SOS.file
[1] "S:/Box Sync/AirSensEUR/Fieldtests/Shiny/ASE_Stations/40458D/General_data/SOSData.csv"

$General.Rdata.file
[1] "S:/Box Sync/AirSensEUR/Fieldtests/Shiny/ASE_Stations/40458D/General_data/General.csv"

$airsenseur.db.file
[1] "S:/Box Sync/AirSensEUR/Fieldtests/Shiny/ASE_Stations/40458D/General_data/airsenseur.db"

$WDinput
[1] "S:/Box Sync/AirSensEUR/Fieldtests/Shiny/ASE_Stations/40458D/General_data"

$ExistFil.data.db
[1] TRUE

$Retrieve.data.db
[1] TRUE

$DateIN.db.prev
[1] "2020-01-05T17:00:00Z"

$DateEND.db.prev
[1] "2020-01-06T18:03:00Z"

$ExistFil.data.Ref
[1] FALSE

$Retrieve.data.Ref
[1] TRUE

$DateIN.Ref.prev
NULL

$DateEND.Ref.prev
NULL

$Var.Ref.prev
NULL

$ExistFil.data.Influx
[1] TRUE

$Retrieve.data.Influx
[1] TRUE

$DateIN.Influx.prev
[1] "2020-01-05 17:00:00 UTC"

$DateEND.Influx.prev
[1] "2020-01-06 18:03:00 UTC"

$ExistFil.data.SOS
[1] FALSE

$Retrieve.data.SOS
[1] TRUE

$DateIN.SOS.prev
NULL

$DateEND.SOS.prev
NULL

$ExistFil.data.General
[1] TRUE

$Retrieve.data.General
[1] TRUE

$DateIN.General.prev
[1] "2020-01-05 17:01:00 UTC"

$DateEND.General.prev
[1] "2020-01-06 18:04:00 UTC"

-----------------------------------------------------------------------------------
[shiny, ind.warm()]  INFO, Setting index of sensor data during warming period
[shiny, ind.TRh()] INFO, Setting index of sensor data outside temperature and RH validity ranges
-----------------------------------------------------------------------------------
[INFLUXDB] INFO: Downloading InfluxDB data
[INFLUXDB] INFO: Data download not requested.
[INFLUXDB] INFO: Sensor variables existing in airsenseur.db: Atmospheric_pressure, Batt_Charge_Status, Batt_Cumulated_Charge, Batt_Voltage, Bin0, Bin1, Bin10, Bin11, Bin12, Bin13, Bin14, Bin15, Bin16, Bin17, Bin18, Bin19, Bin2, Bin20, Bin21, Bin22, Bin23, Bin3, Bin4, Bin5, Bin6, Bin7, Bin8, Bin9, Carbon_dioxide, Carbon_monoxide, Nitric_oxide, Nitrogen_dioxide, OPCHum, OPCTemp, OPCVol, Ozone, Particulate_Matter_1, Particulate_Matter_10, Particulate_Matter_25, Relative_humidity, Relative_humidity_int, Temperature, Temperature_int, with date timestamp and coordinates.
[INFLUXDB] INFO INFLUXDB returning list with InfluxData, var.names.meteo, var.name.GasSensors and var.names.sens
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
[shiny, Outliers.Sens$Forced] INFO, purging for Warming, temperature/humidity tolerance and invalid
[shiny, Outliers.Sens$Forced] INFO, detecting row indexes of outliers in sensor data
[shiny, Outliers.Sens$Forced] INFO, Initialising filtered data columns for  Carbon_monoxide 
[shiny, Outliers.Sens$Forced] INFO, Discarding sensor data for Warming for  Carbon_monoxide 
[shiny, Outliers.Sens$Forced] INFO, Excluding sensor data outside temperature and RH validity ranges for  Carbon_monoxide 
[shiny, Outliers.Sens$Forced] INFO, Excluding invalid sensor data for  Carbon_monoxide 
[shiny, Outliers.Sens$Forced] INFO, initialising outlier sensor data for  Carbon_monoxide 
[shiny, Outliers.Sens$Forced] INFO, sensor: Carbon_monoxide, iteration: 1
[shiny, Outliers.Sens$Forced] INFO, Initialising filtered data columns for  Nitric_oxide 
[shiny, Outliers.Sens$Forced] INFO, Discarding sensor data for Warming for  Nitric_oxide 
[shiny, Outliers.Sens$Forced] INFO, Excluding sensor data outside temperature and RH validity ranges for  Nitric_oxide 
[shiny, Outliers.Sens$Forced] INFO, Excluding invalid sensor data for  Nitric_oxide 
[shiny, Outliers.Sens$Forced] INFO, initialising outlier sensor data for  Nitric_oxide 
[shiny, Outliers.Sens$Forced] INFO, Initialising filtered data columns for  Nitrogen_dioxide 
[shiny, Outliers.Sens$Forced] INFO, Discarding sensor data for Warming for  Nitrogen_dioxide 
[shiny, Outliers.Sens$Forced] INFO, Excluding sensor data outside temperature and RH validity ranges for  Nitrogen_dioxide 
[shiny, Outliers.Sens$Forced] INFO, Excluding invalid sensor data for  Nitrogen_dioxide 
[shiny, Outliers.Sens$Forced] INFO, initialising outlier sensor data for  Nitrogen_dioxide 
[shiny, Outliers.Sens$Forced] INFO, Initialising filtered data columns for  Ozone 
[shiny, Outliers.Sens$Forced] INFO, Discarding sensor data for Warming for  Ozone 
[shiny, Outliers.Sens$Forced] INFO, Excluding sensor data outside temperature and RH validity ranges for  Ozone 
[shiny, Outliers.Sens$Forced] INFO, Excluding invalid sensor data for  Ozone 
[shiny, Outliers.Sens$Forced] INFO, initialising outlier sensor data for  Ozone 
[shiny, ind.ref()] INFO, Initialising filtered reference data columns for  Ref.CO_ppm 
[shiny, ind.ref()] INFO, initialising outlier sensor data for  Ref.CO_ppm 
[shiny, ind.ref.out()] INFO, detecting row indexes of outliers in reference data for  Ref.CO_ppm 
[Shiny, ind.ref.out()] ERROR, Warning no reference values impossible to discard outliers
[shiny, ind.ref()] INFO, Initialising filtered reference data columns for  Ref.NO 
[shiny, ind.ref()] INFO, initialising outlier sensor data for  Ref.NO 
[shiny, ind.ref.out()] INFO, detecting row indexes of outliers in reference data for  Ref.NO 
[Shiny, ind.ref.out()] ERROR, Warning no reference values impossible to discard outliers
[shiny, ind.ref()] INFO, Initialising filtered reference data columns for  Ref.NO2 
[shiny, ind.ref()] INFO, initialising outlier sensor data for  Ref.NO2 
[shiny, ind.ref.out()] INFO, detecting row indexes of outliers in reference data for  Ref.NO2 
[Shiny, ind.ref.out()] ERROR, Warning no reference values impossible to discard outliers
[shiny, ind.ref()] INFO, Initialising filtered reference data columns for  Ref.O3 
[shiny, ind.ref()] INFO, initialising outlier sensor data for  Ref.O3 
[shiny, ind.ref.out()] INFO, detecting row indexes of outliers in reference data for  Ref.O3 
[Shiny, ind.ref.out()] ERROR, Warning no reference values impossible to discard outliers

-----------------------------------------------------------------------------------
[shiny, General.cal()] INFO, Outliers.Sens$Forced is : TRUE
[shiny, General.cal()] INFO, Outliers.Ref$Forced is : TRUE
[shiny, General.cal()] INFO, Conv$Forced is : TRUE
[shiny, General.cal()] INFO, Cal$Forced is : TRUE
-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
[shiny, General.conv()] INFO, digital to volt conversion for all sensors on the shields
[shiny, Cal$Forced] INFO, there is no calibration function for sensors: COA4
-----------------------------------------------------------------------------------
[shiny, ind.ref()] INFO, Initialising filtered reference data columns for  Ref.CO_ppm 
[shiny, ind.ref()] INFO, initialising outlier sensor data for  Ref.CO_ppm 
[shiny, ind.ref.out()] INFO, detecting row indexes of outliers in reference data for  Ref.CO_ppm 
[Shiny, ind.ref.out()] ERROR, Warning no reference values impossible to discard outliers
[shiny, ind.ref()] INFO, Initialising filtered reference data columns for  Ref.NO 
[shiny, ind.ref()] INFO, initialising outlier sensor data for  Ref.NO 
[shiny, ind.ref.out()] INFO, detecting row indexes of outliers in reference data for  Ref.NO 
[Shiny, ind.ref.out()] ERROR, Warning no reference values impossible to discard outliers
[shiny, ind.ref()] INFO, Initialising filtered reference data columns for  Ref.NO2 
[shiny, ind.ref()] INFO, initialising outlier sensor data for  Ref.NO2 
[shiny, ind.ref.out()] INFO, detecting row indexes of outliers in reference data for  Ref.NO2 
[Shiny, ind.ref.out()] ERROR, Warning no reference values impossible to discard outliers
[shiny, ind.ref()] INFO, Initialising filtered reference data columns for  Ref.O3 
[shiny, ind.ref()] INFO, initialising outlier sensor data for  Ref.O3 
[shiny, ind.ref.out()] INFO, detecting row indexes of outliers in reference data for  Ref.O3 
[Shiny, ind.ref.out()] ERROR, Warning no reference values impossible to discard outliers

-----------------------------------------------------------------------------------
[shiny, General.cal()] INFO, Outliers.Sens$Forced is : TRUE
[shiny, General.cal()] INFO, Outliers.Ref$Forced is : TRUE
[shiny, General.cal()] INFO, Conv$Forced is : FALSE
[shiny, General.cal()] INFO, Cal$Forced is : TRUE
-----------------------------------------------------------------------------------
[shiny, Cal$Forced] INFO, there is no calibration function for sensors: COA4
-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
[shiny, General.cal()] INFO, Outliers.Sens$Forced is : FALSE
[shiny, General.cal()] INFO, Outliers.Ref$Forced is : FALSE
[shiny, General.cal()] INFO, Conv$Forced is : FALSE
[shiny, General.cal()] INFO, Cal$Forced is : TRUE
-----------------------------------------------------------------------------------
[shiny, Cal$Forced] INFO, there is no calibration function for sensors: COA4
-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
[shiny, General.cal()] INFO, Outliers.Sens$Forced is : FALSE
[shiny, General.cal()] INFO, Outliers.Ref$Forced is : FALSE
[shiny, General.cal()] INFO, Conv$Forced is : FALSE
[shiny, General.cal()] INFO, Cal$Forced is : FALSE
-----------------------------------------------------------------------------------
